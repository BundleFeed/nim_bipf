/* Generated by the Nim Compiler v1.6.10 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI704643133 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI654311461 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI654311441 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI654311615 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI654311466 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI654311448 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI654311456 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554460 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI654311454 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI654311493 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI654311492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI654311491 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI654311460 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI654311483 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI654311452 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI654311442 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI654311471 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI654311449 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI654311475 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI654311450 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI654311479 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI654311451 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI654311487 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI654311453 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI654311455 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555142 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555129 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1073741858 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554437 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI33554459 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI33555188 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1342177361 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1342177353 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1073741857 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1073741859 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1073741856 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI620756995 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI620757004 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI620757005 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI620757005 = {kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null};
NTI620757005.node = NNI620757005;
var NNI620756995 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI620756995, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI620756995, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI620756995, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI620756995, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI620756995, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI620756995, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI620756995, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI620756995, name: "lvlNone", len: 0, sons: null}}};
NTI620756995.node = NNI620756995;
var NNI620757004 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI620756995, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554439, name: "fmtStr", sons: null}]};
NTI620757004.node = NNI620757004;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI620757004.base = NTI33555083;
NTI620757005.base = NTI620757004;
var NNI1073741856 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1073741856.node = NNI1073741856;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
NTI33555112.base = NTI33555083;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
NTI1073741856.base = NTI33555125;
var NNI1073741857 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1073741857, name: "STRING", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1073741857, name: "BUFFER", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1073741857, name: "INT", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1073741857, name: "DOUBLE", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1073741857, name: "ARRAY", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1073741857, name: "OBJECT", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1073741857, name: "BOOLNULL", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1073741857, name: "EXTENDED", len: 0, sons: null}}};
NTI1073741857.node = NNI1073741857;
var NNI1342177361 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1342177361.node = NNI1342177361;
var NNI33555188 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555188.node = NNI33555188;
NTI33555188.base = NTI33555083;
NTI1342177361.base = NTI33555188;
NTI1342177353.base = NTI1342177361;
var NNI1073741858 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1073741858, name: "TRUE", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1073741858, name: "FALSE", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1073741858, name: "NULL", len: 0, sons: null}}};
NTI1073741858.node = NNI1073741858;
var NNI1073741859 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "encodedSize", len: 0, typ: NTI33554456, name: "encodedSize", sons: null}, 
{kind: 3, offset: "tag", len: 8, typ: NTI1073741857, name: "tag", sons: [[setConstr(0), {kind: 1, offset: "str", len: 0, typ: NTI1342177353, name: "str", sons: null}], 
[setConstr(1), {kind: 1, offset: "buf", len: 0, typ: NTI1342177353, name: "buf", sons: null}], 
[setConstr(2), {kind: 1, offset: "i", len: 0, typ: NTI33554459, name: "i", sons: null}], 
[setConstr(3), {kind: 1, offset: "d", len: 0, typ: NTI33554437, name: "d", sons: null}], 
[setConstr(6), {kind: 1, offset: "b", len: 0, typ: NTI1073741858, name: "b", sons: null}], 
[setConstr(7), {kind: 1, offset: "ext", len: 0, typ: NTI1342177353, name: "ext", sons: null}], 
[setConstr(8), {kind: 1, offset: "size", len: 0, typ: NTI33554456, name: "size", sons: null}]]}]};
NTI1073741859.node = NNI1073741859;
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555129 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555129.node = NNI33555129;
NTI33555129.base = NTI33555113;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI33555142 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555142.node = NNI33555142;
NTI33555142.base = NTI33555113;
NTI654311453.base = NTI654311487;
NTI654311451.base = NTI654311479;
NTI654311450.base = NTI654311475;
NTI654311449.base = NTI654311471;
var NNI654311442 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI654311442, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI654311442, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI654311442, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI654311442, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI654311442, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI654311442, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI654311442, name: "Sunday", len: 0, sons: null}}};
NTI654311442.node = NNI654311442;
NTI654311452.base = NTI654311483;
var NNI654311491 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI654311492, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI654311493, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}]};
NTI654311491.node = NNI654311491;
NTI654311460.base = NTI654311491;
var NNI654311455 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI654311453, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI654311451, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI654311450, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI654311449, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554456, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554456, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554456, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI654311442, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI654311452, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI654311460, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554456, name: "utcOffset", sons: null}]};
NTI654311455.node = NNI654311455;
NTI654311455.base = NTI33555083;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
var NNI654311454 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554460, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI654311453, name: "nanosecond", sons: null}]};
NTI654311454.node = NNI654311454;
var NNI654311456 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554460, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI654311453, name: "nanosecond", sons: null}]};
NTI654311456.node = NNI654311456;
NTI654311448.base = NTI654311466;
var NNI654311441 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI654311441, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI654311441, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI654311441, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI654311441, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI654311441, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI654311441, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI654311441, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI654311441, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI654311441, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI654311441, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI654311441, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI654311441, name: "December", len: 0, sons: null}}};
NTI654311441.node = NNI654311441;
var NNI654311615 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI654311448, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI654311441, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554456, name: "Field2", sons: null}]};
NTI654311615.node = NNI654311615;
var NNI654311461 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI654311454, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554456, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI654311461.node = NNI654311461;
var NNI704643133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI704643133.node = NNI704643133;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function subInt(a_33556944, b_33556945) {
        var result = a_33556944 - b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet2 = setConstr(0, 1, 2, 3, 6, 7);

function raiseFieldError2(f_33556778, discVal_33556779) {
    raiseException({message: (f_33556778 || []).concat(discVal_33556779 || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI33555129, name: null, trace: [], up: null}, "FieldDefect");

  
}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function nimBoolToStr(x_33556514) {
  var result_33556515 = [];

    if (x_33556514) {
    result_33556515 = nimCopy(null, makeNimstrLit("true"), NTI33554439);
    }
    else {
      result_33556515 = nimCopy(null, makeNimstrLit("false"), NTI33554439);
    }
    

  return result_33556515;

}

function reprDiscriminant(e_33557409, typ_33557410) {
    var Temporary1;

  var result_33557411 = [];

    switch (typ_33557410.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557409, typ_33557410);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557409 == 0)));
      break;
    default: 
      Temporary1 = HEX24_335544323(e_33557409);
      break;
    }
    result_33557411 = nimCopy(null, Temporary1, NTI33554439);

  return result_33557411;

}
var ConstSet3 = setConstr(0, 1, 2, 3, 6, 7);

function cstrToNimstr(c_33556804) {
      var ln = c_33556804.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556804.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556804.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet4 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet5 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet6 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet7 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet8 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet9 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet10 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet11 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet12 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet13 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet14 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet15 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet16 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet17 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet18 = setConstr(0);
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr(2);
var ConstSet21 = setConstr(3);
var ConstSet22 = setConstr(6);
var ConstSet23 = setConstr(7);
var ConstSet24 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet25 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet26 = setConstr(0, 1, 2, 3, 6, 7);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(2);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(2);
var ConstSet31 = setConstr(3);
var ConstSet32 = setConstr(6);
var ConstSet33 = setConstr(0);
var ConstSet34 = setConstr(0);
var ConstSet35 = setConstr(0);
var ConstSet36 = setConstr(7);
var ConstSet37 = setConstr(7);
var ConstSet38 = setConstr(7);
var ConstSet39 = setConstr(1);
var ConstSet40 = setConstr(1);
var ConstSet41 = setConstr(1);

function isObj(obj_33557238, subclass_33557239) {
  var result_33557240 = false;

  BeforeRet: do {
    var x_33557241 = obj_33557238;
    if ((x_33557241 == subclass_33557239)) {
    result_33557240 = true;
    break BeforeRet;
    }
    
    Label1: do {
        Label2: while (true) {
        if (!!((x_33557241 == subclass_33557239))) break Label2;
          if ((x_33557241 == null)) {
          result_33557240 = false;
          break BeforeRet;
          }
          
          x_33557241 = x_33557241.base;
        }
    } while (false);
    result_33557240 = true;
    break BeforeRet;
  } while (false);

  return result_33557240;

}

function addChar(x_33557255, c_33557256) {
    x_33557255.push(c_33557256);

  
}
var ConstSet42 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet43 = setConstr([65, 90]);

function absInt(a_33556988) {
    var Temporary1;

  var result_33556989 = 0;

    if ((a_33556988 < 0)) {
    Temporary1 = (a_33556988 * -1);
    }
    else {
    Temporary1 = a_33556988;
    }
    
    result_33556989 = Temporary1;

  return result_33556989;

}

function divInt(a_33556952, b_33556953) {
        if (b_33556953 == 0) raiseDivByZero();
    if (b_33556953 == -1 && a_33556952 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556952 / b_33556953);
  

  
}
    var unitWeights_654311570 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function modInt(a_33556956, b_33556957) {
        if (b_33556957 == 0) raiseDivByZero();
    if (b_33556957 == -1 && a_33556956 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556956 % b_33556957);
  

  
}
    var daysUntilMonthLeap_654311692 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_654311691 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_620757007 = [makeNimstrLit("DEBUG"), makeNimstrLit("DEBUG"), makeNimstrLit("INFO"), makeNimstrLit("NOTICE"), makeNimstrLit("WARN"), makeNimstrLit("ERROR"), makeNimstrLit("FATAL"), makeNimstrLit("NONE")];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

if (globalThis.utcInstance_654312842 === undefined) {
  globalThis.utcInstance_654312842 = [null];
}
if (globalThis.localInstance_654312843 === undefined) {
  globalThis.localInstance_654312843 = [null];
}
if (globalThis.level_620757017 === undefined) {
  globalThis.level_620757017 = [0];
}
if (globalThis.handlers_620757018 === undefined) {
  globalThis.handlers_620757018 = [[]];
}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function newConsoleLogger_620757102(levelThreshold_620757103, fmtStr_620757104, useStderr_620757105) {
  var result_620757106 = null;

    result_620757106 = ({m_type: NTI620757005, useStderr: false, levelThreshold: 0, fmtStr: []});
    result_620757106.fmtStr = nimCopy(null, fmtStr_620757104, NTI33554439);
    result_620757106.levelThreshold = levelThreshold_620757103;
    result_620757106.useStderr = useStderr_620757105;

  return result_620757106;

}

function addHandler_620757181(handler_620757182) {
    handlers_620757018[0].push(handler_620757182);;

  
}
var consoleLog_486539266 = [newConsoleLogger_620757102(4, makeNimstrLit("$levelname "), false)];
addHandler_620757181(consoleLog_486539266[0]);
var objectID_1107296418 = [0];
var internedUtf8Strings_486539291 = [{}];
var lastObjectVisited_486539731 = [null];
var lastBufferProduced_486539732 = [null];

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function HEX5BHEX5D_1073742005(s_1073742007, i_1073742008) {
  var result_1073742009 = null;
  var result_1073742009_Idx = 0;

    result_1073742009 = s_1073742007; result_1073742009_Idx = subInt((s_1073742007).length, i_1073742008);

  return [result_1073742009, result_1073742009_Idx];

}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = addInt(old_251658421, n_251658420));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_486539841 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539841 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_486539841;
            result_251658417[result_251658417_Idx][addInt(old_251658421, iHEX60gensym4_251658435)] = x_251658418.charCodeAt(addInt(start_251658419, iHEX60gensym4_251658435));
            i_486539841 = addInt(i_486539841, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function reprEnum(e_33557385, typ_33557386) {
  var result_33557387 = [];

    var tmp_33557388 = false;
    var item_33557389 = typ_33557386.node.sons[e_33557385];
    tmp_33557388 = item_33557389 !== undefined
    if (tmp_33557388) {
    result_33557387 = nimCopy(null, makeNimstrLit(item_33557389.name), NTI33554439);
    }
    else {
      result_33557387 = nimCopy(null, (HEX24_335544323(e_33557385) || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI33554439);
    }
    

  return result_33557387;

}

function startArray_1073742506(b_1073742507) {
      var Temporary2;
      var Temporary3;

    var vHEX60gensym24_1073742525 = {tag: 4, size: 0, encodedSize: 0, str: null, buf: null, i: 0, d: 0.0, b: 0, ext: null};
    if (((b_1073742507.pointers).length == 0)) {
    if ((0 < (b_1073742507.stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add ARRAY at root when root is not empty"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    b_1073742507.pointers.push((b_1073742507.stack).length);;
    var Temporary1 = nimCopy(null, vHEX60gensym24_1073742525, NTI1073741859);
    b_1073742507.stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym24_1073742562 = (Temporary2 = HEX5BHEX5D_1073742005(b_1073742507.pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1073742507.stack[pHEX60gensym24_1073742562].tag == 4)) {
      var Temporary3 = b_1073742507.stack[pHEX60gensym24_1073742562];
      if (ConstSet2[Temporary3.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1073741857)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym24_1073742571 = vHEX60gensym24_1073742525.encodedSize;
      b_1073742507.pointers.push((b_1073742507.stack).length);;
      b_1073742507.stack[pHEX60gensym24_1073742562].encodedSize = addInt(b_1073742507.stack[pHEX60gensym24_1073742562].encodedSize, addedHEX60gensym24_1073742571);
      var Temporary4 = nimCopy(null, vHEX60gensym24_1073742525, NTI1073741859);
      b_1073742507.stack.push(Temporary4);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function startArray_1073742596(b_1073742597, key_1073742598) {
      var Temporary1;
      var Temporary2;
        var Temporary4;
      var Temporary5;

    if (((b_1073742597.pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add ARRAY with a key at root"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym33_1073742620 = (Temporary1 = HEX5BHEX5D_1073742005(b_1073742597.pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_1073742597.stack[pHEX60gensym33_1073742620].tag == 5)) {
      var Temporary2 = b_1073742597.stack[pHEX60gensym33_1073742620];
      if (ConstSet3[Temporary2.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1073741857)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym33_1073742629 = {tag: 0, str: key_1073742598, encodedSize: key_1073742598.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var Temporary3 = nimCopy(null, kHEX60gensym33_1073742629, NTI1073741859);
      b_1073742597.stack.push(Temporary3);;
      var vHEX60gensym33_1073742648 = {tag: 4, size: 0, encodedSize: 0, str: null, buf: null, i: 0, d: 0.0, b: 0, ext: null};
        if (!(0 <= kHEX60gensym33_1073742629.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym33_1073742629.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `k`gensym33.encodedSize >= 0 and k`gensym33.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym41_1073742663 = (kHEX60gensym33_1073742629.encodedSize << 3);
      if ((uHEX60gensym41_1073742663 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym41_1073742663 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym41_1073742663 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym41_1073742663 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym33_1073742664 = addInt(addInt(kHEX60gensym33_1073742629.encodedSize, vHEX60gensym33_1073742648.encodedSize), Temporary5);
      b_1073742597.pointers.push((b_1073742597.stack).length);;
      b_1073742597.stack[pHEX60gensym33_1073742620].encodedSize = addInt(b_1073742597.stack[pHEX60gensym33_1073742620].encodedSize, addedHEX60gensym33_1073742664);
      var Temporary6 = nimCopy(null, vHEX60gensym33_1073742648, NTI1073741859);
      b_1073742597.stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function jsToUTF8String_486539270(s_486539271) {
  var result_486539272 = null;

    if (!((typeof(s_486539271) == "string"))) {
    failedAssertImpl_218103864((makeNimstrLit("nim_bipf_purejs.nim(29, 10) `jsTypeOf(s) == \"string\"` Expected a string, got ") || []).concat(cstrToNimstr(typeof(s_486539271)) || []));
    }
    
    result_486539272 = new TextEncoder().encode(s_486539271);

  return result_486539272;

}

function pop_1073743951(s_1073743953, s_1073743953_Idx) {
  var result_1073743954 = 0;

    var L_1073743958 = subInt((s_1073743953[s_1073743953_Idx]).length, 1);
    result_1073743954 = s_1073743953[s_1073743953_Idx][L_1073743958];
    if (s_1073743953[s_1073743953_Idx].length < L_1073743958) { for (var i = s_1073743953[s_1073743953_Idx].length ; i < L_1073743958 ; ++i) s_1073743953[s_1073743953_Idx].push(0); }
               else { s_1073743953[s_1073743953_Idx].length = L_1073743958; };

  return result_1073743954;

}

function endArray_1073743932(b_1073743933) {
      var Temporary1;
        var Temporary2;
      var Temporary3;

    if (((b_1073743933.pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot end ARRAY before starting it"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym272_1073743963 = pop_1073743951(b_1073743933, "pointers");
      var eHEX60gensym272_1073743964 = nimCopy(null, b_1073743933.stack[pHEX60gensym272_1073743963], NTI1073741859);
      if (!((eHEX60gensym272_1073743964.tag == 4))) {
      raiseException({message: makeNimstrLit("Cannot end ARRAY before starting it"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
      if ((0 < (b_1073743933.pointers).length)) {
      var parentPHEX60gensym272_1073743989 = (Temporary1 = HEX5BHEX5D_1073742005(b_1073743933.pointers, 1), Temporary1)[0][Temporary1[1]];
        if (!(0 <= eHEX60gensym272_1073743964.encodedSize)) Temporary2 = false; else {          Temporary2 = (eHEX60gensym272_1073743964.encodedSize <= 2147483647);        }      if (!(Temporary2)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `e`gensym272.encodedSize >= 0 and e`gensym272.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym282_1073744010 = (eHEX60gensym272_1073743964.encodedSize << 3);
      if ((uHEX60gensym282_1073744010 < 128)) {
      Temporary3 = 1;
      }
      else {
      if ((uHEX60gensym282_1073744010 < 16384)) {
      Temporary3 = 2;
      }
      else {
      if ((uHEX60gensym282_1073744010 < 2097152)) {
      Temporary3 = 3;
      }
      else {
      if ((uHEX60gensym282_1073744010 < 268435456)) {
      Temporary3 = 4;
      }
      else {
      Temporary3 = 5;
      }
      }}}
      b_1073743933.stack[parentPHEX60gensym272_1073743989].encodedSize = addInt(b_1073743933.stack[parentPHEX60gensym272_1073743989].encodedSize, addInt(eHEX60gensym272_1073743964.encodedSize, Temporary3));
      }
      
    }
    

  
}

function startMap_1073741950(b_1073741951) {
      var Temporary2;
      var Temporary3;

    var vHEX60gensym0_1073741970 = {tag: 5, size: 0, encodedSize: 0, str: null, buf: null, i: 0, d: 0.0, b: 0, ext: null};
    if (((b_1073741951.pointers).length == 0)) {
    if ((0 < (b_1073741951.stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add OBJECT at root when root is not empty"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    b_1073741951.pointers.push((b_1073741951.stack).length);;
    var Temporary1 = nimCopy(null, vHEX60gensym0_1073741970, NTI1073741859);
    b_1073741951.stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym0_1073742022 = (Temporary2 = HEX5BHEX5D_1073742005(b_1073741951.pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1073741951.stack[pHEX60gensym0_1073742022].tag == 4)) {
      var Temporary3 = b_1073741951.stack[pHEX60gensym0_1073742022];
      if (ConstSet4[Temporary3.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1073741857)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym0_1073742031 = vHEX60gensym0_1073741970.encodedSize;
      b_1073741951.pointers.push((b_1073741951.stack).length);;
      b_1073741951.stack[pHEX60gensym0_1073742022].encodedSize = addInt(b_1073741951.stack[pHEX60gensym0_1073742022].encodedSize, addedHEX60gensym0_1073742031);
      var Temporary4 = nimCopy(null, vHEX60gensym0_1073741970, NTI1073741859);
      b_1073741951.stack.push(Temporary4);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function startMap_1073742112(b_1073742113, key_1073742114) {
      var Temporary1;
      var Temporary2;
        var Temporary4;
      var Temporary5;

    if (((b_1073742113.pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add OBJECT with a key at root"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym9_1073742136 = (Temporary1 = HEX5BHEX5D_1073742005(b_1073742113.pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_1073742113.stack[pHEX60gensym9_1073742136].tag == 5)) {
      var Temporary2 = b_1073742113.stack[pHEX60gensym9_1073742136];
      if (ConstSet5[Temporary2.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1073741857)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym9_1073742145 = {tag: 0, str: key_1073742114, encodedSize: key_1073742114.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var Temporary3 = nimCopy(null, kHEX60gensym9_1073742145, NTI1073741859);
      b_1073742113.stack.push(Temporary3);;
      var vHEX60gensym9_1073742444 = {tag: 5, size: 0, encodedSize: 0, str: null, buf: null, i: 0, d: 0.0, b: 0, ext: null};
        if (!(0 <= kHEX60gensym9_1073742145.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym9_1073742145.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `k`gensym9.encodedSize >= 0 and k`gensym9.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym17_1073742459 = (kHEX60gensym9_1073742145.encodedSize << 3);
      if ((uHEX60gensym17_1073742459 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym17_1073742459 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym17_1073742459 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym17_1073742459 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym9_1073742460 = addInt(addInt(kHEX60gensym9_1073742145.encodedSize, vHEX60gensym9_1073742444.encodedSize), Temporary5);
      b_1073742113.pointers.push((b_1073742113.stack).length);;
      b_1073742113.stack[pHEX60gensym9_1073742136].encodedSize = addInt(b_1073742113.stack[pHEX60gensym9_1073742136].encodedSize, addedHEX60gensym9_1073742460);
      var Temporary6 = nimCopy(null, vHEX60gensym9_1073742444, NTI1073741859);
      b_1073742113.stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function endMap_1073744021(b_1073744022) {
      var Temporary1;
        var Temporary2;
      var Temporary3;

    if (((b_1073744022.pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot end OBJECT before starting it"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym287_1073744043 = pop_1073743951(b_1073744022, "pointers");
      var eHEX60gensym287_1073744044 = nimCopy(null, b_1073744022.stack[pHEX60gensym287_1073744043], NTI1073741859);
      if (!((eHEX60gensym287_1073744044.tag == 5))) {
      raiseException({message: makeNimstrLit("Cannot end OBJECT before starting it"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
      if ((0 < (b_1073744022.pointers).length)) {
      var parentPHEX60gensym287_1073744069 = (Temporary1 = HEX5BHEX5D_1073742005(b_1073744022.pointers, 1), Temporary1)[0][Temporary1[1]];
        if (!(0 <= eHEX60gensym287_1073744044.encodedSize)) Temporary2 = false; else {          Temporary2 = (eHEX60gensym287_1073744044.encodedSize <= 2147483647);        }      if (!(Temporary2)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `e`gensym287.encodedSize >= 0 and e`gensym287.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym297_1073744090 = (eHEX60gensym287_1073744044.encodedSize << 3);
      if ((uHEX60gensym297_1073744090 < 128)) {
      Temporary3 = 1;
      }
      else {
      if ((uHEX60gensym297_1073744090 < 16384)) {
      Temporary3 = 2;
      }
      else {
      if ((uHEX60gensym297_1073744090 < 2097152)) {
      Temporary3 = 3;
      }
      else {
      if ((uHEX60gensym297_1073744090 < 268435456)) {
      Temporary3 = 4;
      }
      else {
      Temporary3 = 5;
      }
      }}}
      b_1073744022.stack[parentPHEX60gensym287_1073744069].encodedSize = addInt(b_1073744022.stack[parentPHEX60gensym287_1073744069].encodedSize, addInt(eHEX60gensym287_1073744044.encodedSize, Temporary3));
      }
      
    }
    

  
}

function addNull_1073743084(b_1073743085) {
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;

    var vHEX60gensym113_1073743099 = {tag: 6, b: 2, encodedSize: 0, str: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
    if (((b_1073743085.pointers).length == 0)) {
    if ((0 < (b_1073743085.stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add NULL at root when root is not empty"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    var Temporary1 = nimCopy(null, vHEX60gensym113_1073743099, NTI1073741859);
    b_1073743085.stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym113_1073743121 = (Temporary2 = HEX5BHEX5D_1073742005(b_1073743085.pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1073743085.stack[pHEX60gensym113_1073743121].tag == 4)) {
      var Temporary3 = b_1073743085.stack[pHEX60gensym113_1073743121];
      if (ConstSet6[Temporary3.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1073741857)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym113_1073743130 = vHEX60gensym113_1073743099.encodedSize;
        if (!(0 <= vHEX60gensym113_1073743099.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym113_1073743099.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym113.encodedSize >= 0 and v`gensym113.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym121_1073743145 = (vHEX60gensym113_1073743099.encodedSize << 3);
      if ((uHEX60gensym121_1073743145 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym121_1073743145 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym121_1073743145 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym121_1073743145 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym113_1073743130 = addInt(addedHEX60gensym113_1073743130, Temporary5);
      b_1073743085.stack[pHEX60gensym113_1073743121].encodedSize = addInt(b_1073743085.stack[pHEX60gensym113_1073743121].encodedSize, addedHEX60gensym113_1073743130);
      var Temporary6 = nimCopy(null, vHEX60gensym113_1073743099, NTI1073741859);
      b_1073743085.stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addNull_1073743718(b_1073743719, k_1073743720) {
      var Temporary1;
      var Temporary2;
        var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;

    if (((b_1073743719.pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add NULL with a key at root"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym234_1073743742 = (Temporary1 = HEX5BHEX5D_1073742005(b_1073743719.pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_1073743719.stack[pHEX60gensym234_1073743742].tag == 5)) {
      var Temporary2 = b_1073743719.stack[pHEX60gensym234_1073743742];
      if (ConstSet7[Temporary2.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1073741857)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym234_1073743751 = {tag: 0, str: k_1073743720, encodedSize: k_1073743720.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var Temporary3 = nimCopy(null, kHEX60gensym234_1073743751, NTI1073741859);
      b_1073743719.stack.push(Temporary3);;
      var vHEX60gensym234_1073743766 = {tag: 6, b: 2, encodedSize: 0, str: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym234_1073743751.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym234_1073743751.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `k`gensym234.encodedSize >= 0 and k`gensym234.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym242_1073743781 = (kHEX60gensym234_1073743751.encodedSize << 3);
      if ((uHEX60gensym242_1073743781 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym242_1073743781 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym242_1073743781 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym242_1073743781 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym234_1073743782 = addInt(addInt(kHEX60gensym234_1073743751.encodedSize, vHEX60gensym234_1073743766.encodedSize), Temporary5);
        if (!(0 <= vHEX60gensym234_1073743766.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym234_1073743766.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym234.encodedSize >= 0 and v`gensym234.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym246_1073743797 = (vHEX60gensym234_1073743766.encodedSize << 3);
      if ((uHEX60gensym246_1073743797 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym246_1073743797 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym246_1073743797 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym246_1073743797 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym234_1073743782 = addInt(addedHEX60gensym234_1073743782, Temporary7);
      b_1073743719.stack[pHEX60gensym234_1073743742].encodedSize = addInt(b_1073743719.stack[pHEX60gensym234_1073743742].encodedSize, addedHEX60gensym234_1073743782);
      var Temporary8 = nimCopy(null, vHEX60gensym234_1073743766, NTI1073741859);
      b_1073743719.stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addString_1073742854(b_1073742855, s_1073742856) {
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;

    var vHEX60gensym74_1073742860 = {tag: 0, str: s_1073742856, encodedSize: s_1073742856.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
    if (((b_1073742855.pointers).length == 0)) {
    if ((0 < (b_1073742855.stack).length)) {
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(s_1073742856 || [],makeNimstrLit(" at root when root is not empty") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    var Temporary1 = nimCopy(null, vHEX60gensym74_1073742860, NTI1073741859);
    b_1073742855.stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym74_1073742879 = (Temporary2 = HEX5BHEX5D_1073742005(b_1073742855.pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1073742855.stack[pHEX60gensym74_1073742879].tag == 4)) {
      var Temporary3 = b_1073742855.stack[pHEX60gensym74_1073742879];
      if (ConstSet8[Temporary3.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1073741857)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym74_1073742888 = vHEX60gensym74_1073742860.encodedSize;
        if (!(0 <= vHEX60gensym74_1073742860.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym74_1073742860.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym74.encodedSize >= 0 and v`gensym74.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym82_1073742903 = (vHEX60gensym74_1073742860.encodedSize << 3);
      if ((uHEX60gensym82_1073742903 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym82_1073742903 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym82_1073742903 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym82_1073742903 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym74_1073742888 = addInt(addedHEX60gensym74_1073742888, Temporary5);
      b_1073742855.stack[pHEX60gensym74_1073742879].encodedSize = addInt(b_1073742855.stack[pHEX60gensym74_1073742879].encodedSize, addedHEX60gensym74_1073742888);
      var Temporary6 = nimCopy(null, vHEX60gensym74_1073742860, NTI1073741859);
      b_1073742855.stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addString_1073743426(b_1073743427, k_1073743428, s_1073743429) {
      var Temporary1;
      var Temporary2;
        var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;

    if (((b_1073743427.pointers).length == 0)) {
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(s_1073743429 || [],makeNimstrLit(" with a key at root") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym177_1073743442 = (Temporary1 = HEX5BHEX5D_1073742005(b_1073743427.pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_1073743427.stack[pHEX60gensym177_1073743442].tag == 5)) {
      var Temporary2 = b_1073743427.stack[pHEX60gensym177_1073743442];
      if (ConstSet9[Temporary2.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1073741857)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym177_1073743451 = {tag: 0, str: k_1073743428, encodedSize: k_1073743428.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var Temporary3 = nimCopy(null, kHEX60gensym177_1073743451, NTI1073741859);
      b_1073743427.stack.push(Temporary3);;
      var vHEX60gensym177_1073743462 = {tag: 0, str: s_1073743429, encodedSize: s_1073743429.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym177_1073743451.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym177_1073743451.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `k`gensym177.encodedSize >= 0 and k`gensym177.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym185_1073743477 = (kHEX60gensym177_1073743451.encodedSize << 3);
      if ((uHEX60gensym185_1073743477 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym185_1073743477 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym185_1073743477 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym185_1073743477 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym177_1073743478 = addInt(addInt(kHEX60gensym177_1073743451.encodedSize, vHEX60gensym177_1073743462.encodedSize), Temporary5);
        if (!(0 <= vHEX60gensym177_1073743462.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym177_1073743462.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym177.encodedSize >= 0 and v`gensym177.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym189_1073743493 = (vHEX60gensym177_1073743462.encodedSize << 3);
      if ((uHEX60gensym189_1073743493 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym189_1073743493 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym189_1073743493 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym189_1073743493 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym177_1073743478 = addInt(addedHEX60gensym177_1073743478, Temporary7);
      b_1073743427.stack[pHEX60gensym177_1073743442].encodedSize = addInt(b_1073743427.stack[pHEX60gensym177_1073743442].encodedSize, addedHEX60gensym177_1073743478);
      var Temporary8 = nimCopy(null, vHEX60gensym177_1073743462, NTI1073741859);
      b_1073743427.stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addInt_1073742701(b_1073742702, i_1073742703) {
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;

    var vHEX60gensym48_1073742707 = {tag: 2, i: i_1073742703, encodedSize: 4, str: null, buf: null, d: 0.0, b: 0, ext: null, size: 0};
    if (((b_1073742702.pointers).length == 0)) {
    if ((0 < (b_1073742702.stack).length)) {
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(HEX24_335544323(((i_1073742703) | 0)) || [],makeNimstrLit(" at root when root is not empty") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    var Temporary1 = nimCopy(null, vHEX60gensym48_1073742707, NTI1073741859);
    b_1073742702.stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym48_1073742726 = (Temporary2 = HEX5BHEX5D_1073742005(b_1073742702.pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1073742702.stack[pHEX60gensym48_1073742726].tag == 4)) {
      var Temporary3 = b_1073742702.stack[pHEX60gensym48_1073742726];
      if (ConstSet10[Temporary3.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1073741857)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym48_1073742735 = vHEX60gensym48_1073742707.encodedSize;
        if (!(0 <= vHEX60gensym48_1073742707.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym48_1073742707.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym48.encodedSize >= 0 and v`gensym48.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym56_1073742750 = (vHEX60gensym48_1073742707.encodedSize << 3);
      if ((uHEX60gensym56_1073742750 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym56_1073742750 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym56_1073742750 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym56_1073742750 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym48_1073742735 = addInt(addedHEX60gensym48_1073742735, Temporary5);
      b_1073742702.stack[pHEX60gensym48_1073742726].encodedSize = addInt(b_1073742702.stack[pHEX60gensym48_1073742726].encodedSize, addedHEX60gensym48_1073742735);
      var Temporary6 = nimCopy(null, vHEX60gensym48_1073742707, NTI1073741859);
      b_1073742702.stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function toInt32_486539344(s_486539345) {
      var Temporary1;

  var result_486539346 = 0;

    if (!((typeof(s_486539345) == "number"))) {
    failedAssertImpl_218103864(makeNimstrLit("nim_bipf_purejs.nim(54, 10) `jsTypeOf(s) == \"number\"` "));
    }
    
    result_486539346 = s_486539345;
      if (!(-2147483648 <= result_486539346)) Temporary1 = false; else {        Temporary1 = (result_486539346 <= 2147483647);      }    if (!(Temporary1)) {
    failedAssertImpl_218103864(makeNimstrLit("nim_bipf_purejs.nim(56, 10) `result >= low(int32) and result <= high(int32)` "));
    }
    

  return result_486539346;

}

function addInt_1073743231(b_1073743232, k_1073743233, i_1073743234) {
      var Temporary1;
      var Temporary2;
        var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;

    if (((b_1073743232.pointers).length == 0)) {
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(HEX24_335544323(((i_1073743234) | 0)) || [],makeNimstrLit(" with a key at root") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym139_1073743247 = (Temporary1 = HEX5BHEX5D_1073742005(b_1073743232.pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_1073743232.stack[pHEX60gensym139_1073743247].tag == 5)) {
      var Temporary2 = b_1073743232.stack[pHEX60gensym139_1073743247];
      if (ConstSet11[Temporary2.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1073741857)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym139_1073743256 = {tag: 0, str: k_1073743233, encodedSize: k_1073743233.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var Temporary3 = nimCopy(null, kHEX60gensym139_1073743256, NTI1073741859);
      b_1073743232.stack.push(Temporary3);;
      var vHEX60gensym139_1073743267 = {tag: 2, i: i_1073743234, encodedSize: 4, str: null, buf: null, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym139_1073743256.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym139_1073743256.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `k`gensym139.encodedSize >= 0 and k`gensym139.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym147_1073743282 = (kHEX60gensym139_1073743256.encodedSize << 3);
      if ((uHEX60gensym147_1073743282 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym147_1073743282 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym147_1073743282 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym147_1073743282 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym139_1073743283 = addInt(addInt(kHEX60gensym139_1073743256.encodedSize, vHEX60gensym139_1073743267.encodedSize), Temporary5);
        if (!(0 <= vHEX60gensym139_1073743267.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym139_1073743267.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym139.encodedSize >= 0 and v`gensym139.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym151_1073743298 = (vHEX60gensym139_1073743267.encodedSize << 3);
      if ((uHEX60gensym151_1073743298 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym151_1073743298 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym151_1073743298 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym151_1073743298 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym139_1073743283 = addInt(addedHEX60gensym139_1073743283, Temporary7);
      b_1073743232.stack[pHEX60gensym139_1073743247].encodedSize = addInt(b_1073743232.stack[pHEX60gensym139_1073743247].encodedSize, addedHEX60gensym139_1073743283);
      var Temporary8 = nimCopy(null, vHEX60gensym139_1073743267, NTI1073741859);
      b_1073743232.stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function nimFloatToString_352321654(a_352321655) {
  var result_352321656 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_352321655))
      result_352321656 = a_352321655 === 0 && 1 / a_352321655 < 0 ? "-0.0" : a_352321655+".0"
    else {
      result_352321656 = a_352321655+""
      if(nimOnlyDigitsOrMinus(result_352321656)){
        result_352321656 = a_352321655+".0"
      }
    }
  

  return result_352321656;

}

function addFloat_33557372(result_33557374, result_33557374_Idx, x_33557375) {
    add_33556419(result_33557374, result_33557374_Idx, nimFloatToString_352321654(x_33557375));

  
}

function HEX24_33557368(x_33557370) {
  var result_33557371 = [[]];

    addFloat_33557372(result_33557371, 0, x_33557370);

  return result_33557371[0];

}

function addDouble_1073742773(b_1073742774, d_1073742775) {
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;

    var vHEX60gensym61_1073742785 = {tag: 3, d: d_1073742775, encodedSize: 8, str: null, buf: null, i: 0, b: 0, ext: null, size: 0};
    if (((b_1073742774.pointers).length == 0)) {
    if ((0 < (b_1073742774.stack).length)) {
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(HEX24_33557368(d_1073742775) || [],makeNimstrLit(" at root when root is not empty") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    var Temporary1 = nimCopy(null, vHEX60gensym61_1073742785, NTI1073741859);
    b_1073742774.stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym61_1073742807 = (Temporary2 = HEX5BHEX5D_1073742005(b_1073742774.pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1073742774.stack[pHEX60gensym61_1073742807].tag == 4)) {
      var Temporary3 = b_1073742774.stack[pHEX60gensym61_1073742807];
      if (ConstSet12[Temporary3.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1073741857)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym61_1073742816 = vHEX60gensym61_1073742785.encodedSize;
        if (!(0 <= vHEX60gensym61_1073742785.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym61_1073742785.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym61.encodedSize >= 0 and v`gensym61.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym69_1073742831 = (vHEX60gensym61_1073742785.encodedSize << 3);
      if ((uHEX60gensym69_1073742831 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym69_1073742831 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym69_1073742831 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym69_1073742831 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym61_1073742816 = addInt(addedHEX60gensym61_1073742816, Temporary5);
      b_1073742774.stack[pHEX60gensym61_1073742807].encodedSize = addInt(b_1073742774.stack[pHEX60gensym61_1073742807].encodedSize, addedHEX60gensym61_1073742816);
      var Temporary6 = nimCopy(null, vHEX60gensym61_1073742785, NTI1073741859);
      b_1073742774.stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function toFloat64_486539365(s_486539366) {
  var result_486539367 = 0.0;

    if (!((typeof(s_486539366) == "number"))) {
    failedAssertImpl_218103864(makeNimstrLit("nim_bipf_purejs.nim(59, 10) `jsTypeOf(s) == \"number\"` "));
    }
    
    result_486539367 = s_486539366;

  return result_486539367;

}

function addDouble_1073743324(b_1073743325, k_1073743326, d_1073743327) {
      var Temporary1;
      var Temporary2;
        var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;

    if (((b_1073743325.pointers).length == 0)) {
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(HEX24_33557368(d_1073743327) || [],makeNimstrLit(" with a key at root") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym158_1073743349 = (Temporary1 = HEX5BHEX5D_1073742005(b_1073743325.pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_1073743325.stack[pHEX60gensym158_1073743349].tag == 5)) {
      var Temporary2 = b_1073743325.stack[pHEX60gensym158_1073743349];
      if (ConstSet13[Temporary2.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1073741857)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym158_1073743358 = {tag: 0, str: k_1073743326, encodedSize: k_1073743326.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var Temporary3 = nimCopy(null, kHEX60gensym158_1073743358, NTI1073741859);
      b_1073743325.stack.push(Temporary3);;
      var vHEX60gensym158_1073743369 = {tag: 3, d: d_1073743327, encodedSize: 8, str: null, buf: null, i: 0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym158_1073743358.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym158_1073743358.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `k`gensym158.encodedSize >= 0 and k`gensym158.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym166_1073743384 = (kHEX60gensym158_1073743358.encodedSize << 3);
      if ((uHEX60gensym166_1073743384 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym166_1073743384 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym166_1073743384 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym166_1073743384 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym158_1073743385 = addInt(addInt(kHEX60gensym158_1073743358.encodedSize, vHEX60gensym158_1073743369.encodedSize), Temporary5);
        if (!(0 <= vHEX60gensym158_1073743369.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym158_1073743369.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym158.encodedSize >= 0 and v`gensym158.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym170_1073743400 = (vHEX60gensym158_1073743369.encodedSize << 3);
      if ((uHEX60gensym170_1073743400 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym170_1073743400 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym170_1073743400 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym170_1073743400 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym158_1073743385 = addInt(addedHEX60gensym158_1073743385, Temporary7);
      b_1073743325.stack[pHEX60gensym158_1073743349].encodedSize = addInt(b_1073743325.stack[pHEX60gensym158_1073743349].encodedSize, addedHEX60gensym158_1073743385);
      var Temporary8 = nimCopy(null, vHEX60gensym158_1073743369, NTI1073741859);
      b_1073743325.stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addBool_1073742989(b_1073742990, v_1073742991) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
    var Temporary4;
      var Temporary6;
      var Temporary7;
        var Temporary8;
      var Temporary9;

    if (v_1073742991) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
      if (v_1073742991) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = 1;
      }
      
    if ((Temporary3 == 2)) {
    Temporary2 = 0;
    }
    else {
    Temporary2 = 1;
    }
    
    var vHEX60gensym100_1073743006 = {tag: 6, b: Temporary1, encodedSize: Temporary2, str: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
    if (((b_1073742990.pointers).length == 0)) {
    if ((0 < (b_1073742990.stack).length)) {
    if (v_1073742991) {
    Temporary4 = 0;
    }
    else {
    Temporary4 = 1;
    }
    
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(reprEnum(Temporary4, NTI1073741858) || [],makeNimstrLit(" at root when root is not empty") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    var Temporary5 = nimCopy(null, vHEX60gensym100_1073743006, NTI1073741859);
    b_1073742990.stack.push(Temporary5);;
    }
    else {
      var pHEX60gensym100_1073743028 = (Temporary6 = HEX5BHEX5D_1073742005(b_1073742990.pointers, 1), Temporary6)[0][Temporary6[1]];
      if ((b_1073742990.stack[pHEX60gensym100_1073743028].tag == 4)) {
      var Temporary7 = b_1073742990.stack[pHEX60gensym100_1073743028];
      if (ConstSet14[Temporary7.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary7.tag, NTI1073741857)); }
      Temporary7.size = addInt(Temporary7.size, 1);
      var addedHEX60gensym100_1073743037 = vHEX60gensym100_1073743006.encodedSize;
        if (!(0 <= vHEX60gensym100_1073743006.encodedSize)) Temporary8 = false; else {          Temporary8 = (vHEX60gensym100_1073743006.encodedSize <= 2147483647);        }      if (!(Temporary8)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym100.encodedSize >= 0 and v`gensym100.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym108_1073743052 = (vHEX60gensym100_1073743006.encodedSize << 3);
      if ((uHEX60gensym108_1073743052 < 128)) {
      Temporary9 = 1;
      }
      else {
      if ((uHEX60gensym108_1073743052 < 16384)) {
      Temporary9 = 2;
      }
      else {
      if ((uHEX60gensym108_1073743052 < 2097152)) {
      Temporary9 = 3;
      }
      else {
      if ((uHEX60gensym108_1073743052 < 268435456)) {
      Temporary9 = 4;
      }
      else {
      Temporary9 = 5;
      }
      }}}
      addedHEX60gensym100_1073743037 = addInt(addedHEX60gensym100_1073743037, Temporary9);
      b_1073742990.stack[pHEX60gensym100_1073743028].encodedSize = addInt(b_1073742990.stack[pHEX60gensym100_1073743028].encodedSize, addedHEX60gensym100_1073743037);
      var Temporary10 = nimCopy(null, vHEX60gensym100_1073743006, NTI1073741859);
      b_1073742990.stack.push(Temporary10);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function toBool_486539373(s_486539374) {
  var result_486539375 = false;

    if (!((typeof(s_486539374) == "boolean"))) {
    failedAssertImpl_218103864(makeNimstrLit("nim_bipf_purejs.nim(63, 10) `jsTypeOf(s) == \"boolean\"` "));
    }
    
    result_486539375 = s_486539374;

  return result_486539375;

}

function addBool_1073743612(b_1073743613, k_1073743614, v_1073743615) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;

    if (((b_1073743613.pointers).length == 0)) {
    if (v_1073743615) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(reprEnum(Temporary1, NTI1073741858) || [],makeNimstrLit(" with a key at root") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym215_1073743637 = (Temporary2 = HEX5BHEX5D_1073742005(b_1073743613.pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1073743613.stack[pHEX60gensym215_1073743637].tag == 5)) {
      var Temporary3 = b_1073743613.stack[pHEX60gensym215_1073743637];
      if (ConstSet15[Temporary3.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1073741857)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var kHEX60gensym215_1073743646 = {tag: 0, str: k_1073743614, encodedSize: k_1073743614.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var Temporary4 = nimCopy(null, kHEX60gensym215_1073743646, NTI1073741859);
      b_1073743613.stack.push(Temporary4);;
      if (v_1073743615) {
      Temporary5 = 0;
      }
      else {
      Temporary5 = 1;
      }
      
        if (v_1073743615) {
        Temporary7 = 0;
        }
        else {
        Temporary7 = 1;
        }
        
      if ((Temporary7 == 2)) {
      Temporary6 = 0;
      }
      else {
      Temporary6 = 1;
      }
      
      var vHEX60gensym215_1073743661 = {tag: 6, b: Temporary5, encodedSize: Temporary6, str: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym215_1073743646.encodedSize)) Temporary8 = false; else {          Temporary8 = (kHEX60gensym215_1073743646.encodedSize <= 2147483647);        }      if (!(Temporary8)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `k`gensym215.encodedSize >= 0 and k`gensym215.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym223_1073743676 = (kHEX60gensym215_1073743646.encodedSize << 3);
      if ((uHEX60gensym223_1073743676 < 128)) {
      Temporary9 = 1;
      }
      else {
      if ((uHEX60gensym223_1073743676 < 16384)) {
      Temporary9 = 2;
      }
      else {
      if ((uHEX60gensym223_1073743676 < 2097152)) {
      Temporary9 = 3;
      }
      else {
      if ((uHEX60gensym223_1073743676 < 268435456)) {
      Temporary9 = 4;
      }
      else {
      Temporary9 = 5;
      }
      }}}
      var addedHEX60gensym215_1073743677 = addInt(addInt(kHEX60gensym215_1073743646.encodedSize, vHEX60gensym215_1073743661.encodedSize), Temporary9);
        if (!(0 <= vHEX60gensym215_1073743661.encodedSize)) Temporary10 = false; else {          Temporary10 = (vHEX60gensym215_1073743661.encodedSize <= 2147483647);        }      if (!(Temporary10)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym215.encodedSize >= 0 and v`gensym215.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym227_1073743692 = (vHEX60gensym215_1073743661.encodedSize << 3);
      if ((uHEX60gensym227_1073743692 < 128)) {
      Temporary11 = 1;
      }
      else {
      if ((uHEX60gensym227_1073743692 < 16384)) {
      Temporary11 = 2;
      }
      else {
      if ((uHEX60gensym227_1073743692 < 2097152)) {
      Temporary11 = 3;
      }
      else {
      if ((uHEX60gensym227_1073743692 < 268435456)) {
      Temporary11 = 4;
      }
      else {
      Temporary11 = 5;
      }
      }}}
      addedHEX60gensym215_1073743677 = addInt(addedHEX60gensym215_1073743677, Temporary11);
      b_1073743613.stack[pHEX60gensym215_1073743637].encodedSize = addInt(b_1073743613.stack[pHEX60gensym215_1073743637].encodedSize, addedHEX60gensym215_1073743677);
      var Temporary12 = nimCopy(null, vHEX60gensym215_1073743661, NTI1073741859);
      b_1073743613.stack.push(Temporary12);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addBuffer_1073742917(b_1073742918, buff_1073742919) {
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;

    var vHEX60gensym87_1073742923 = {tag: 1, buf: buff_1073742919, encodedSize: buff_1073742919.length, str: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
    if (((b_1073742918.pointers).length == 0)) {
    if ((0 < (b_1073742918.stack).length)) {
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(buff_1073742919.toString() || [],makeNimstrLit(" at root when root is not empty") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    var Temporary1 = nimCopy(null, vHEX60gensym87_1073742923, NTI1073741859);
    b_1073742918.stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym87_1073742942 = (Temporary2 = HEX5BHEX5D_1073742005(b_1073742918.pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1073742918.stack[pHEX60gensym87_1073742942].tag == 4)) {
      var Temporary3 = b_1073742918.stack[pHEX60gensym87_1073742942];
      if (ConstSet16[Temporary3.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1073741857)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym87_1073742951 = vHEX60gensym87_1073742923.encodedSize;
        if (!(0 <= vHEX60gensym87_1073742923.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym87_1073742923.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym87.encodedSize >= 0 and v`gensym87.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym95_1073742966 = (vHEX60gensym87_1073742923.encodedSize << 3);
      if ((uHEX60gensym95_1073742966 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym95_1073742966 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym95_1073742966 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym95_1073742966 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym87_1073742951 = addInt(addedHEX60gensym87_1073742951, Temporary5);
      b_1073742918.stack[pHEX60gensym87_1073742942].encodedSize = addInt(b_1073742918.stack[pHEX60gensym87_1073742942].encodedSize, addedHEX60gensym87_1073742951);
      var Temporary6 = nimCopy(null, vHEX60gensym87_1073742923, NTI1073741859);
      b_1073742918.stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function jsToByteBuffer_486539336(s_486539337) {
  var result_486539338 = null;

    if (!(((typeof(s_486539337) == "object") && (s_486539337 instanceof Uint8Array)))) {
    failedAssertImpl_218103864(makeNimstrLit("nim_bipf_purejs.nim(49, 10) `jsTypeOf(s) == \"object\" and isUint8Array(s)` "));
    }
    
    result_486539338 = s_486539337;

  return result_486539338;

}

function addBuffer_1073743519(b_1073743520, k_1073743521, buf_1073743522) {
      var Temporary1;
      var Temporary2;
        var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;

    if (((b_1073743520.pointers).length == 0)) {
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(buf_1073743522.toString() || [],makeNimstrLit(" with a key at root") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym196_1073743535 = (Temporary1 = HEX5BHEX5D_1073742005(b_1073743520.pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_1073743520.stack[pHEX60gensym196_1073743535].tag == 5)) {
      var Temporary2 = b_1073743520.stack[pHEX60gensym196_1073743535];
      if (ConstSet17[Temporary2.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1073741857)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym196_1073743544 = {tag: 0, str: k_1073743521, encodedSize: k_1073743521.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var Temporary3 = nimCopy(null, kHEX60gensym196_1073743544, NTI1073741859);
      b_1073743520.stack.push(Temporary3);;
      var vHEX60gensym196_1073743555 = {tag: 1, buf: buf_1073743522, encodedSize: buf_1073743522.length, str: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym196_1073743544.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym196_1073743544.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `k`gensym196.encodedSize >= 0 and k`gensym196.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym204_1073743570 = (kHEX60gensym196_1073743544.encodedSize << 3);
      if ((uHEX60gensym204_1073743570 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym204_1073743570 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym204_1073743570 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym204_1073743570 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym196_1073743571 = addInt(addInt(kHEX60gensym196_1073743544.encodedSize, vHEX60gensym196_1073743555.encodedSize), Temporary5);
        if (!(0 <= vHEX60gensym196_1073743555.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym196_1073743555.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym196.encodedSize >= 0 and v`gensym196.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym208_1073743586 = (vHEX60gensym196_1073743555.encodedSize << 3);
      if ((uHEX60gensym208_1073743586 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym208_1073743586 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym208_1073743586 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym208_1073743586 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym196_1073743571 = addInt(addedHEX60gensym196_1073743571, Temporary7);
      b_1073743520.stack[pHEX60gensym196_1073743535].encodedSize = addInt(b_1073743520.stack[pHEX60gensym196_1073743535].encodedSize, addedHEX60gensym196_1073743571);
      var Temporary8 = nimCopy(null, vHEX60gensym196_1073743555, NTI1073741859);
      b_1073743520.stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addQuoted_1073742313(s_1073742315, s_1073742315_Idx, x_1073742316) {
    addInt_251658457(s_1073742315, s_1073742315_Idx, x_1073742316);

  
}

function addQuoted_1073742328(s_1073742330, s_1073742330_Idx, x_1073742331) {
    s_1073742330[s_1073742330_Idx].push.apply(s_1073742330[s_1073742330_Idx], reprEnum(x_1073742331, NTI1073741857));;

  
}

function addQuoted_1073742344(s_1073742346, s_1073742346_Idx, x_1073742347) {
    s_1073742346[s_1073742346_Idx].push.apply(s_1073742346[s_1073742346_Idx], x_1073742347);;

  
}

function addQuoted_1073742357(s_1073742359, s_1073742359_Idx, x_1073742360) {
    s_1073742359[s_1073742359_Idx].push.apply(s_1073742359[s_1073742359_Idx], x_1073742360.toString());;

  
}

function addQuoted_1073742370(s_1073742372, s_1073742372_Idx, x_1073742373) {
    addInt_251658457(s_1073742372, s_1073742372_Idx, ((x_1073742373) | 0));

  
}

function addQuoted_1073742385(s_1073742387, s_1073742387_Idx, x_1073742388) {
    addFloat_33557372(s_1073742387, s_1073742387_Idx, x_1073742388);

  
}

function addQuoted_1073742405(s_1073742407, s_1073742407_Idx, x_1073742408) {
    s_1073742407[s_1073742407_Idx].push.apply(s_1073742407[s_1073742407_Idx], reprEnum(x_1073742408, NTI1073741858));;

  
}

function HEX24_1073742293(x_1073742295) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_1073742296 = [[]];

    result_1073742296[0] = nimCopy(null, makeNimstrLit("("), NTI33554439);
    var count_1073742302 = 0;
    if ((0 < count_1073742302)) {
    result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(", "));;
    }
    
    result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit("encodedSize"));;
    result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(": "));;
    count_1073742302 += 1;
    addQuoted_1073742313(result_1073742296, 0, x_1073742295.encodedSize);
    if ((0 < count_1073742302)) {
    result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(", "));;
    }
    
    result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit("tag"));;
    result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(": "));;
    count_1073742302 += 1;
    addQuoted_1073742328(result_1073742296, 0, x_1073742295.tag);
    switch (x_1073742295.tag) {
    case 0:
      if ((0 < count_1073742302)) {
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(", "));;
      }
      
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit("str"));;
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(": "));;
      count_1073742302 += 1;
      var Temporary1 = x_1073742295;
      if (ConstSet18[Temporary1.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary1.tag, NTI1073741857)); }
      addQuoted_1073742344(result_1073742296, 0, Temporary1.str);
      break;
    case 1:
      if ((0 < count_1073742302)) {
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(", "));;
      }
      
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit("buf"));;
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(": "));;
      count_1073742302 += 1;
      var Temporary2 = x_1073742295;
      if (ConstSet19[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'buf\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1073741857)); }
      addQuoted_1073742357(result_1073742296, 0, Temporary2.buf);
      break;
    case 2:
      if ((0 < count_1073742302)) {
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(", "));;
      }
      
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit("i"));;
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(": "));;
      count_1073742302 += 1;
      var Temporary3 = x_1073742295;
      if (ConstSet20[Temporary3.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'i\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1073741857)); }
      addQuoted_1073742370(result_1073742296, 0, Temporary3.i);
      break;
    case 3:
      if ((0 < count_1073742302)) {
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(", "));;
      }
      
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit("d"));;
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(": "));;
      count_1073742302 += 1;
      var Temporary4 = x_1073742295;
      if (ConstSet21[Temporary4.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'d\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary4.tag, NTI1073741857)); }
      addQuoted_1073742385(result_1073742296, 0, Temporary4.d);
      break;
    case 6:
      if ((0 < count_1073742302)) {
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(", "));;
      }
      
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit("b"));;
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(": "));;
      count_1073742302 += 1;
      var Temporary5 = x_1073742295;
      if (ConstSet22[Temporary5.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary5.tag, NTI1073741857)); }
      addQuoted_1073742405(result_1073742296, 0, Temporary5.b);
      break;
    case 7:
      if ((0 < count_1073742302)) {
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(", "));;
      }
      
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit("ext"));;
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(": "));;
      count_1073742302 += 1;
      var Temporary6 = x_1073742295;
      if (ConstSet23[Temporary6.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'ext\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary6.tag, NTI1073741857)); }
      addQuoted_1073742357(result_1073742296, 0, Temporary6.ext);
      break;
    default: 
      if ((0 < count_1073742302)) {
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(", "));;
      }
      
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit("size"));;
      result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(": "));;
      count_1073742302 += 1;
      var Temporary7 = x_1073742295;
      if (ConstSet24[Temporary7.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary7.tag, NTI1073741857)); }
      addQuoted_1073742313(result_1073742296, 0, Temporary7.size);
      break;
    }
    result_1073742296[0].push.apply(result_1073742296[0], makeNimstrLit(")"));;

  return result_1073742296[0];

}

function addExtended_1073743159(b_1073743160, ext_1073743161) {
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;

    var vHEX60gensym126_1073743171 = {tag: 7, ext: ext_1073743161, encodedSize: 0, str: null, buf: null, i: 0, d: 0.0, b: 0, size: 0};
    if (((b_1073743160.pointers).length == 0)) {
    if ((0 < (b_1073743160.stack).length)) {
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(HEX24_1073742293({tag: 7, ext: ext_1073743161, encodedSize: 0, str: null, buf: null, i: 0, d: 0.0, b: 0, size: 0}) || [],makeNimstrLit(" at root when root is not empty") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    var Temporary1 = nimCopy(null, vHEX60gensym126_1073743171, NTI1073741859);
    b_1073743160.stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym126_1073743193 = (Temporary2 = HEX5BHEX5D_1073742005(b_1073743160.pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1073743160.stack[pHEX60gensym126_1073743193].tag == 4)) {
      var Temporary3 = b_1073743160.stack[pHEX60gensym126_1073743193];
      if (ConstSet25[Temporary3.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1073741857)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym126_1073743202 = vHEX60gensym126_1073743171.encodedSize;
        if (!(0 <= vHEX60gensym126_1073743171.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym126_1073743171.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym126.encodedSize >= 0 and v`gensym126.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym134_1073743217 = (vHEX60gensym126_1073743171.encodedSize << 3);
      if ((uHEX60gensym134_1073743217 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym134_1073743217 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym134_1073743217 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym134_1073743217 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym126_1073743202 = addInt(addedHEX60gensym126_1073743202, Temporary5);
      b_1073743160.stack[pHEX60gensym126_1073743193].encodedSize = addInt(b_1073743160.stack[pHEX60gensym126_1073743193].encodedSize, addedHEX60gensym126_1073743202);
      var Temporary6 = nimCopy(null, vHEX60gensym126_1073743171, NTI1073741859);
      b_1073743160.stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addExtended_1073743823(b_1073743824, k_1073743825, ext_1073743826) {
      var Temporary1;
      var Temporary2;
        var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;

    if (((b_1073743824.pointers).length == 0)) {
    raiseException({message: (makeNimstrLit("Cannot add ") || []).concat(HEX24_1073742293({tag: 7, ext: ext_1073743826, encodedSize: 0, str: null, buf: null, i: 0, d: 0.0, b: 0, size: 0}) || [],makeNimstrLit(" with a key at root") || []), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym253_1073743848 = (Temporary1 = HEX5BHEX5D_1073742005(b_1073743824.pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_1073743824.stack[pHEX60gensym253_1073743848].tag == 5)) {
      var Temporary2 = b_1073743824.stack[pHEX60gensym253_1073743848];
      if (ConstSet26[Temporary2.tag]!==undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1073741857)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym253_1073743857 = {tag: 0, str: k_1073743825, encodedSize: k_1073743825.length, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var Temporary3 = nimCopy(null, kHEX60gensym253_1073743857, NTI1073741859);
      b_1073743824.stack.push(Temporary3);;
      var vHEX60gensym253_1073743868 = {tag: 7, ext: ext_1073743826, encodedSize: 0, str: null, buf: null, i: 0, d: 0.0, b: 0, size: 0};
        if (!(0 <= kHEX60gensym253_1073743857.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym253_1073743857.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `k`gensym253.encodedSize >= 0 and k`gensym253.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym261_1073743883 = (kHEX60gensym253_1073743857.encodedSize << 3);
      if ((uHEX60gensym261_1073743883 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym261_1073743883 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym261_1073743883 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym261_1073743883 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym253_1073743884 = addInt(addInt(kHEX60gensym253_1073743857.encodedSize, vHEX60gensym253_1073743868.encodedSize), Temporary5);
        if (!(0 <= vHEX60gensym253_1073743868.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym253_1073743868.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `v`gensym253.encodedSize >= 0 and v`gensym253.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym265_1073743899 = (vHEX60gensym253_1073743868.encodedSize << 3);
      if ((uHEX60gensym265_1073743899 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym265_1073743899 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym265_1073743899 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym265_1073743899 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym253_1073743884 = addInt(addedHEX60gensym253_1073743884, Temporary7);
      b_1073743824.stack[pHEX60gensym253_1073743848].encodedSize = addInt(b_1073743824.stack[pHEX60gensym253_1073743848].encodedSize, addedHEX60gensym253_1073743884);
      var Temporary8 = nimCopy(null, vHEX60gensym253_1073743868, NTI1073741859);
      b_1073743824.stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function finish_1073744165(b_1073744166) {
      var Temporary1;
    var Temporary2;
              var Temporary6;
              var Temporary7;
              var Temporary8;
              var Temporary9;
              var Temporary10;
              var Temporary11;
              var Temporary12;
                var Temporary13;
                var Temporary14;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                var Temporary18;
                var Temporary19;
                var Temporary20;
                var Temporary21;

  var result_1073744167 = null;

    if ((0 < (b_1073744166.pointers).length)) {
    raiseException({message: makeNimstrLit("Cannot finish document before ending all arrays and maps"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    if (((b_1073744166.stack).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot finish document before adding any value"), parent: null, m_type: NTI1073741856, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    var encodedSize_1073744179 = b_1073744166.stack[0].encodedSize;
      if (!(0 <= encodedSize_1073744179)) Temporary1 = false; else {        Temporary1 = (encodedSize_1073744179 <= 2147483647);      }    if (!(Temporary1)) {
    failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(143, 10) `encodedSize >= 0 and encodedSize <= high(int32)` "));
    }
    
    var uHEX60gensym307_1073744194 = (encodedSize_1073744179 << 3);
    if ((uHEX60gensym307_1073744194 < 128)) {
    Temporary2 = 1;
    }
    else {
    if ((uHEX60gensym307_1073744194 < 16384)) {
    Temporary2 = 2;
    }
    else {
    if ((uHEX60gensym307_1073744194 < 2097152)) {
    Temporary2 = 3;
    }
    else {
    if ((uHEX60gensym307_1073744194 < 268435456)) {
    Temporary2 = 4;
    }
    else {
    Temporary2 = 5;
    }
    }}}
    result_1073744167 = new Uint8Array(addInt(encodedSize_1073744179, Temporary2));
    var p_1073744195 = 0;
    Label3: do {
      var sv_1073744216 = ({encodedSize: 0, tag: 0, str: null, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0});
      var i_486539845 = 0;
      var L_486539846 = (b_1073744166.stack).length;
      Label4: do {
          Label5: while (true) {
          if (!(i_486539845 < L_486539846)) break Label5;
            sv_1073744216 = b_1073744166.stack[i_486539845];
            var tag_1073744227 = addInt(((sv_1073744216.tag) | 0), (sv_1073744216.encodedSize << 3));
              if (!(0 <= tag_1073744227)) Temporary6 = false; else {                Temporary6 = (tag_1073744227 <= 2147483647);              }            if (!(Temporary6)) {
            failedAssertImpl_218103864(makeNimstrLit("nim_bipf.nim(403, 10) `tag >= 0 and tag <= high(int32)` "));
            }
            
            if ((tag_1073744227 < 128)) {
            result_1073744167[p_1073744195] = tag_1073744227;
            p_1073744195 = addInt(p_1073744195, 1);
            }
            else {
            if ((tag_1073744227 < 16384)) {
            result_1073744167[p_1073744195] = (tag_1073744227 | 128);
            result_1073744167[addInt(p_1073744195, 1)] = (tag_1073744227 >> 7);
            p_1073744195 = addInt(p_1073744195, 2);
            }
            else {
            if ((tag_1073744227 < 2097152)) {
            result_1073744167[p_1073744195] = (tag_1073744227 | 128);
            result_1073744167[addInt(p_1073744195, 1)] = ((tag_1073744227 >> 7) | 128);
            result_1073744167[addInt(p_1073744195, 2)] = (tag_1073744227 >> 14);
            p_1073744195 = addInt(p_1073744195, 3);
            }
            else {
            if ((tag_1073744227 < 268435456)) {
            result_1073744167[p_1073744195] = (tag_1073744227 | 128);
            result_1073744167[addInt(p_1073744195, 1)] = ((tag_1073744227 >> 7) | 128);
            result_1073744167[addInt(p_1073744195, 2)] = ((tag_1073744227 >> 14) | 128);
            result_1073744167[addInt(p_1073744195, 3)] = (tag_1073744227 >> 21);
            p_1073744195 = addInt(p_1073744195, 4);
            }
            else {
              result_1073744167[p_1073744195] = (tag_1073744227 | 128);
              result_1073744167[addInt(p_1073744195, 1)] = ((tag_1073744227 >> 7) | 128);
              result_1073744167[addInt(p_1073744195, 2)] = ((tag_1073744227 >> 14) | 128);
              result_1073744167[addInt(p_1073744195, 3)] = ((tag_1073744227 >> 21) | 128);
              result_1073744167[addInt(p_1073744195, 4)] = (tag_1073744227 >> 28);
              p_1073744195 = addInt(p_1073744195, 5);
            }
            }}}
            switch (sv_1073744216.tag) {
            case 5:
            case 4:
              break;
            case 2:
              var Temporary7 = sv_1073744216;
              if (ConstSet27[Temporary7.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'i\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary7.tag, NTI1073741857)); }
              result_1073744167[p_1073744195] = (Temporary7.i & 255);
              var Temporary8 = sv_1073744216;
              if (ConstSet28[Temporary8.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'i\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary8.tag, NTI1073741857)); }
              result_1073744167[addInt(p_1073744195, 1)] = ((Temporary8.i >> 8) & 255);
              var Temporary9 = sv_1073744216;
              if (ConstSet29[Temporary9.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'i\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary9.tag, NTI1073741857)); }
              result_1073744167[addInt(p_1073744195, 2)] = ((Temporary9.i >> 16) & 255);
              var Temporary10 = sv_1073744216;
              if (ConstSet30[Temporary10.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'i\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary10.tag, NTI1073741857)); }
              result_1073744167[addInt(p_1073744195, 3)] = ((Temporary10.i >> 24) & 255);
              p_1073744195 = addInt(p_1073744195, 4);
              break;
            case 3:
              var Temporary11 = sv_1073744216;
              if (ConstSet31[Temporary11.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'d\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary11.tag, NTI1073741857)); }
              var iHEX60gensym319_1073744314 = Temporary11.d;
              result_1073744167[p_1073744195] = (iHEX60gensym319_1073744314 & 255);
              result_1073744167[addInt(p_1073744195, 1)] = (Math.floor(iHEX60gensym319_1073744314 / Math.pow(2, 8)) & 255);
              result_1073744167[addInt(p_1073744195, 2)] = (Math.floor(iHEX60gensym319_1073744314 / Math.pow(2, 16)) & 255);
              result_1073744167[addInt(p_1073744195, 3)] = (Math.floor(iHEX60gensym319_1073744314 / Math.pow(2, 24)) & 255);
              result_1073744167[addInt(p_1073744195, 4)] = (Math.floor(iHEX60gensym319_1073744314 / Math.pow(2, 32)) & 255);
              result_1073744167[addInt(p_1073744195, 5)] = (Math.floor(iHEX60gensym319_1073744314 / Math.pow(2, 40)) & 255);
              result_1073744167[addInt(p_1073744195, 6)] = (Math.floor(iHEX60gensym319_1073744314 / Math.pow(2, 48)) & 255);
              result_1073744167[addInt(p_1073744195, 7)] = (Math.floor(iHEX60gensym319_1073744314 / Math.pow(2, 56)) & 255);
              p_1073744195 = addInt(p_1073744195, 8);
              break;
            case 6:
              var Temporary12 = sv_1073744216;
              if (ConstSet32[Temporary12.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary12.tag, NTI1073741857)); }
              switch (Temporary12.b) {
              case 0:
                result_1073744167[p_1073744195] = 1;
                p_1073744195 = addInt(p_1073744195, 1);
                break;
              case 1:
                result_1073744167[p_1073744195] = 0;
                p_1073744195 = addInt(p_1073744195, 1);
                break;
              case 2:
                break;
              }
              break;
            case 0:
                var Temporary13 = sv_1073744216;
                if (ConstSet33[Temporary13.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary13.tag, NTI1073741857)); }
              if ((Temporary13.str.length == 0)) {
              }
              else {
                var Temporary14 = sv_1073744216;
                if (ConstSet34[Temporary14.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary14.tag, NTI1073741857)); }
                result_1073744167.set(Temporary14.str,p_1073744195);;
                var Temporary15 = sv_1073744216;
                if (ConstSet35[Temporary15.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary15.tag, NTI1073741857)); }
                p_1073744195 = addInt(p_1073744195, Temporary15.str.length);
              }
              
              break;
            case 7:
                var Temporary16 = sv_1073744216;
                if (ConstSet36[Temporary16.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'ext\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary16.tag, NTI1073741857)); }
              if ((Temporary16.ext.length == 0)) {
              }
              else {
                var Temporary17 = sv_1073744216;
                if (ConstSet37[Temporary17.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'ext\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary17.tag, NTI1073741857)); }
                result_1073744167.set(Temporary17.ext,p_1073744195);;
                var Temporary18 = sv_1073744216;
                if (ConstSet38[Temporary18.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'ext\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary18.tag, NTI1073741857)); }
                p_1073744195 = addInt(p_1073744195, Temporary18.ext.length);
              }
              
              break;
            case 1:
                var Temporary19 = sv_1073744216;
                if (ConstSet39[Temporary19.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'buf\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary19.tag, NTI1073741857)); }
              if ((Temporary19.buf.length == 0)) {
              }
              else {
                var Temporary20 = sv_1073744216;
                if (ConstSet40[Temporary20.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'buf\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary20.tag, NTI1073741857)); }
                result_1073744167.set(Temporary20.buf,p_1073744195);;
                var Temporary21 = sv_1073744216;
                if (ConstSet41[Temporary21.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'buf\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary21.tag, NTI1073741857)); }
                p_1073744195 = addInt(p_1073744195, Temporary21.buf.length);
              }
              
              break;
            }
            i_486539845 = addInt(i_486539845, 1);
            if (!(((b_1073744166.stack).length == L_486539846))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);

  return result_1073744167;

}

function newBipfBuilder_486539392() {

function HEX3Aanonymous_486539397(thisHEX60gensym13_486539398, arg0HEX60gensym13_486539399) {
    if ((arg0HEX60gensym13_486539399 === undefined)) {
    startArray_1073742506(thisHEX60gensym13_486539398);
    }
    else {
    startArray_1073742596(thisHEX60gensym13_486539398, jsToUTF8String_486539270(arg0HEX60gensym13_486539399));
    }
    

  
}
    
function HEX3Aanonymous_486539415(arg0HEX60gensym13_486539416) {
        HEX3Aanonymous_486539397(this, arg0HEX60gensym13_486539416);

      
    }
    
function HEX3Aanonymous_486539433() {
        endArray_1073743932(this);

      
    }

function HEX3Aanonymous_486539448(thisHEX60gensym18_486539449, arg0HEX60gensym18_486539450) {
    if ((arg0HEX60gensym18_486539450 === undefined)) {
    startMap_1073741950(thisHEX60gensym18_486539449);
    }
    else {
    startMap_1073742112(thisHEX60gensym18_486539449, jsToUTF8String_486539270(arg0HEX60gensym18_486539450));
    }
    

  
}
    
function HEX3Aanonymous_486539454(arg0HEX60gensym18_486539455) {
        HEX3Aanonymous_486539448(this, arg0HEX60gensym18_486539455);

      
    }
    
function HEX3Aanonymous_486539468() {
        endMap_1073744021(this);

      
    }

function HEX3Aanonymous_486539483(thisHEX60gensym23_486539484, arg0HEX60gensym23_486539485) {
    if ((arg0HEX60gensym23_486539485 === undefined)) {
    addNull_1073743084(thisHEX60gensym23_486539484);
    }
    else {
    addNull_1073743718(thisHEX60gensym23_486539484, jsToUTF8String_486539270(arg0HEX60gensym23_486539485));
    }
    

  
}
    
function HEX3Aanonymous_486539489(arg0HEX60gensym23_486539490) {
        HEX3Aanonymous_486539483(this, arg0HEX60gensym23_486539490);

      
    }

function HEX3Aanonymous_486539506(thisHEX60gensym26_486539507, arg0HEX60gensym26_486539508, arg1HEX60gensym26_486539509) {
    if ((arg1HEX60gensym26_486539509 === undefined)) {
    addString_1073742854(thisHEX60gensym26_486539507, jsToUTF8String_486539270(arg0HEX60gensym26_486539508));
    }
    else {
    addString_1073743426(thisHEX60gensym26_486539507, jsToUTF8String_486539270(arg0HEX60gensym26_486539508), jsToUTF8String_486539270(arg1HEX60gensym26_486539509));
    }
    

  
}
    
function HEX3Aanonymous_486539513(arg0HEX60gensym26_486539514, arg1HEX60gensym26_486539515) {
        HEX3Aanonymous_486539506(this, arg0HEX60gensym26_486539514, arg1HEX60gensym26_486539515);

      
    }

function HEX3Aanonymous_486539531(thisHEX60gensym29_486539532, arg0HEX60gensym29_486539533, arg1HEX60gensym29_486539534) {
    if ((arg1HEX60gensym29_486539534 === undefined)) {
    addInt_1073742701(thisHEX60gensym29_486539532, toInt32_486539344(arg0HEX60gensym29_486539533));
    }
    else {
    addInt_1073743231(thisHEX60gensym29_486539532, jsToUTF8String_486539270(arg0HEX60gensym29_486539533), toInt32_486539344(arg1HEX60gensym29_486539534));
    }
    

  
}
    
function HEX3Aanonymous_486539538(arg0HEX60gensym29_486539539, arg1HEX60gensym29_486539540) {
        HEX3Aanonymous_486539531(this, arg0HEX60gensym29_486539539, arg1HEX60gensym29_486539540);

      
    }

function HEX3Aanonymous_486539556(thisHEX60gensym32_486539557, arg0HEX60gensym32_486539558, arg1HEX60gensym32_486539559) {
    if ((arg1HEX60gensym32_486539559 === undefined)) {
    addDouble_1073742773(thisHEX60gensym32_486539557, toFloat64_486539365(arg0HEX60gensym32_486539558));
    }
    else {
    addDouble_1073743324(thisHEX60gensym32_486539557, jsToUTF8String_486539270(arg0HEX60gensym32_486539558), toFloat64_486539365(arg1HEX60gensym32_486539559));
    }
    

  
}
    
function HEX3Aanonymous_486539563(arg0HEX60gensym32_486539564, arg1HEX60gensym32_486539565) {
        HEX3Aanonymous_486539556(this, arg0HEX60gensym32_486539564, arg1HEX60gensym32_486539565);

      
    }

function HEX3Aanonymous_486539581(thisHEX60gensym35_486539582, arg0HEX60gensym35_486539583, arg1HEX60gensym35_486539584) {
    if ((arg1HEX60gensym35_486539584 === undefined)) {
    addBool_1073742989(thisHEX60gensym35_486539582, toBool_486539373(arg0HEX60gensym35_486539583));
    }
    else {
    addBool_1073743612(thisHEX60gensym35_486539582, jsToUTF8String_486539270(arg0HEX60gensym35_486539583), toBool_486539373(arg1HEX60gensym35_486539584));
    }
    

  
}
    
function HEX3Aanonymous_486539588(arg0HEX60gensym35_486539589, arg1HEX60gensym35_486539590) {
        HEX3Aanonymous_486539581(this, arg0HEX60gensym35_486539589, arg1HEX60gensym35_486539590);

      
    }

function HEX3Aanonymous_486539606(thisHEX60gensym38_486539607, arg0HEX60gensym38_486539608, arg1HEX60gensym38_486539609) {
    if ((arg1HEX60gensym38_486539609 === undefined)) {
    addBuffer_1073742917(thisHEX60gensym38_486539607, jsToByteBuffer_486539336(arg0HEX60gensym38_486539608));
    }
    else {
    addBuffer_1073743519(thisHEX60gensym38_486539607, jsToUTF8String_486539270(arg0HEX60gensym38_486539608), jsToByteBuffer_486539336(arg1HEX60gensym38_486539609));
    }
    

  
}
    
function HEX3Aanonymous_486539613(arg0HEX60gensym38_486539614, arg1HEX60gensym38_486539615) {
        HEX3Aanonymous_486539606(this, arg0HEX60gensym38_486539614, arg1HEX60gensym38_486539615);

      
    }

function HEX3Aanonymous_486539631(thisHEX60gensym41_486539632, arg0HEX60gensym41_486539633, arg1HEX60gensym41_486539634) {
    if ((arg1HEX60gensym41_486539634 === undefined)) {
    addExtended_1073743159(thisHEX60gensym41_486539632, jsToByteBuffer_486539336(arg0HEX60gensym41_486539633));
    }
    else {
    addExtended_1073743823(thisHEX60gensym41_486539632, jsToUTF8String_486539270(arg0HEX60gensym41_486539633), jsToByteBuffer_486539336(arg1HEX60gensym41_486539634));
    }
    

  
}
    
function HEX3Aanonymous_486539638(arg0HEX60gensym41_486539639, arg1HEX60gensym41_486539640) {
        HEX3Aanonymous_486539631(this, arg0HEX60gensym41_486539639, arg1HEX60gensym41_486539640);

      
    }
    
function HEX3Aanonymous_486539653() {
      var result_486539654 = null;

        result_486539654 = finish_1073744165(this);

      return result_486539654;

    }

  var result_486539393 = null;

    result_486539393 = {stack: [], pointers: []};
    var prototype_486539394 = result_486539393;
    prototype_486539394.startArray = HEX3Aanonymous_486539415;
    prototype_486539394.endArray = HEX3Aanonymous_486539433;
    prototype_486539394.startMap = HEX3Aanonymous_486539454;
    prototype_486539394.endMap = HEX3Aanonymous_486539468;
    prototype_486539394.addNull = HEX3Aanonymous_486539489;
    prototype_486539394.addString = HEX3Aanonymous_486539513;
    prototype_486539394.addInt = HEX3Aanonymous_486539538;
    prototype_486539394.addDouble = HEX3Aanonymous_486539563;
    prototype_486539394.addBool = HEX3Aanonymous_486539588;
    prototype_486539394.addBuffer = HEX3Aanonymous_486539613;
    prototype_486539394.addExtended = HEX3Aanonymous_486539638;
    prototype_486539394.finish = HEX3Aanonymous_486539653;

  return result_486539393;

}

function jsToUTF8StringInterned_486539301(s_486539302) {
  var result_486539303 = null;

    result_486539303 = internedUtf8Strings_486539291[0][s_486539302];
    if ((result_486539303 === undefined)) {
    result_486539303 = new TextEncoder().encode(s_486539302);
    internedUtf8Strings_486539291[0][s_486539302] = result_486539303;
    }
    

  return result_486539303;

}

function serialize_486539667(obj_486539668) {

function recursiveEncodeKeyed_486539671(builder_486539672, key_486539673, obj_486539674) {
      var Temporary1;
      var Temporary2;

    var jsType_486539702 = typeof(obj_486539674);
    if ((jsType_486539702 == "undefined")) {
    }
    else {
    if ((jsType_486539702 == "boolean")) {
    addBool_1073743612(builder_486539672, jsToUTF8StringInterned_486539301(key_486539673), toBool_486539373(obj_486539674));
    }
    else {
    if ((jsType_486539702 == "number")) {
      if (!(Number.isSafeInteger(obj_486539674))) Temporary2 = false; else {        Temporary2 = (-2147483648 <= toInt32_486539344(obj_486539674));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (toInt32_486539344(obj_486539674) <= 2147483647);      }    if (Temporary1) {
    addInt_1073743231(builder_486539672, jsToUTF8StringInterned_486539301(key_486539673), toInt32_486539344(obj_486539674));
    }
    else {
    addDouble_1073743324(builder_486539672, jsToUTF8StringInterned_486539301(key_486539673), toFloat64_486539365(obj_486539674));
    }
    
    }
    else {
    if ((jsType_486539702 == "string")) {
    addString_1073743426(builder_486539672, jsToUTF8StringInterned_486539301(key_486539673), jsToUTF8String_486539270(obj_486539674));
    }
    else {
    if ((jsType_486539702 == "object")) {
    if ((obj_486539674 === null)) {
    addNull_1073743718(builder_486539672, jsToUTF8StringInterned_486539301(key_486539673));
    }
    else {
    if ((obj_486539674 instanceof Uint8Array)) {
    addBuffer_1073743519(builder_486539672, jsToUTF8StringInterned_486539301(key_486539673), jsToByteBuffer_486539336(obj_486539674));
    }
    else {
    if ((Array.isArray(obj_486539674))) {
    startArray_1073742596(builder_486539672, jsToUTF8StringInterned_486539301(key_486539673));
    Label3: do {
      var value_486539718 = null;
      var v_486539854 = null;
      for (var k in obj_486539674) {
        if (!obj_486539674.hasOwnProperty(k)) continue;
        v_486539854=obj_486539674[k];
      value_486539718 = v_486539854;
      recursiveEncode_486539675(builder_486539672, value_486539718);
      }
    } while (false);
    endArray_1073743932(builder_486539672);
    }
    else {
      startMap_1073742112(builder_486539672, jsToUTF8StringInterned_486539301(key_486539673));
      Label4: do {
        var key_486539719 = null;
        var value_486539720 = null;
        var k_486539856 = null;
        var v_486539857 = null;
        for (var k_486539856 in obj_486539674) {
          if (!obj_486539674.hasOwnProperty(k_486539856)) continue;
          v_486539857=obj_486539674[k_486539856];
        key_486539719 = k_486539856;
        value_486539720 = v_486539857;
        recursiveEncodeKeyed_486539671(builder_486539672, key_486539719, value_486539720);
        }
      } while (false);
      endMap_1073744021(builder_486539672);
    }
    }}
    }
    else {
      raiseException({message: (makeNimstrLit("Unsupported type: ") || []).concat(cstrToNimstr(jsType_486539702) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    }}}}

  
}
    
function recursiveEncode_486539675(builder_486539676, obj_486539677) {
          var Temporary1;
          var Temporary2;

        var jsType_486539678 = typeof(obj_486539677);
        if ((jsType_486539678 == "undefined")) {
        }
        else {
        if ((jsType_486539678 == "boolean")) {
        addBool_1073742989(builder_486539676, toBool_486539373(obj_486539677));
        }
        else {
        if ((jsType_486539678 == "number")) {
          if (!(Number.isSafeInteger(obj_486539677))) Temporary2 = false; else {            Temporary2 = (-2147483648 <= toInt32_486539344(obj_486539677));          }          if (!Temporary2) Temporary1 = false; else {            Temporary1 = (toInt32_486539344(obj_486539677) <= 2147483647);          }        if (Temporary1) {
        addInt_1073742701(builder_486539676, toInt32_486539344(obj_486539677));
        }
        else {
        addDouble_1073742773(builder_486539676, toFloat64_486539365(obj_486539677));
        }
        
        }
        else {
        if ((jsType_486539678 == "string")) {
        addString_1073742854(builder_486539676, jsToUTF8String_486539270(obj_486539677));
        }
        else {
        if ((jsType_486539678 == "object")) {
        if ((obj_486539677 === null)) {
        addNull_1073743084(builder_486539676);
        }
        else {
        if ((obj_486539677 instanceof Uint8Array)) {
        addBuffer_1073742917(builder_486539676, jsToByteBuffer_486539336(obj_486539677));
        }
        else {
        if ((Array.isArray(obj_486539677))) {
        startArray_1073742506(builder_486539676);
        Label3: do {
          var value_486539694 = null;
          var v_486539849 = null;
          for (var k in obj_486539677) {
            if (!obj_486539677.hasOwnProperty(k)) continue;
            v_486539849=obj_486539677[k];
          value_486539694 = v_486539849;
          recursiveEncode_486539675(builder_486539676, value_486539694);
          }
        } while (false);
        endArray_1073743932(builder_486539676);
        }
        else {
          startMap_1073741950(builder_486539676);
          Label4: do {
            var key_486539695 = null;
            var value_486539696 = null;
            var k_486539851 = null;
            var v_486539852 = null;
            for (var k_486539851 in obj_486539677) {
              if (!obj_486539677.hasOwnProperty(k_486539851)) continue;
              v_486539852=obj_486539677[k_486539851];
            key_486539695 = k_486539851;
            value_486539696 = v_486539852;
            recursiveEncodeKeyed_486539671(builder_486539676, key_486539695, value_486539696);
            }
          } while (false);
          endMap_1073744021(builder_486539676);
        }
        }}
        }
        else {
          raiseException({message: (makeNimstrLit("Unsupported type: ") || []).concat(cstrToNimstr(jsType_486539678) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
        }
        }}}}

      
    }

  var result_486539669 = null;

    var builder_486539670 = newBipfBuilder_486539392();
    recursiveEncode_486539675(builder_486539670, obj_486539668);
    result_486539669 = finish_1073744165(builder_486539670);

  return result_486539669;

}

function encodingLength_486539733(obj_486539734) {
  var result_486539735 = 0;

  BeforeRet: do {
    if (!((obj_486539734 == lastObjectVisited_486539731[0]))) {
    lastBufferProduced_486539732[0] = serialize_486539667(obj_486539734);
    lastObjectVisited_486539731[0] = obj_486539734;
    break BeforeRet;
    }
    
    result_486539735 = lastBufferProduced_486539732[0].length;
  } while (false);

  return result_486539735;

}

function encode_486539740(obj_486539741, buffer_486539742, offset_486539743) {
  var result_486539744 = 0;

    if (!((obj_486539741 == lastObjectVisited_486539731[0]))) {
    var builder_486539749 = newBipfBuilder_486539392();
    lastBufferProduced_486539732[0] = serialize_486539667(obj_486539741);
    lastObjectVisited_486539731[0] = obj_486539741;
    }
    
    if ((subInt(buffer_486539742.length, offset_486539743) < lastBufferProduced_486539732[0].length)) {
    raiseException({message: makeNimstrLit("Buffer too small"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    
    var p_486539751 = offset_486539743;
    if ((lastBufferProduced_486539732[0].length == 0)) {
    }
    else {
      buffer_486539742.set(lastBufferProduced_486539732[0],p_486539751);;
      p_486539751 = addInt(p_486539751, lastBufferProduced_486539732[0].length);
    }
    
    result_486539744 = subInt(p_486539751, offset_486539743);

  return result_486539744;

}
  var Temporary2;
  if ((module.exports == null)) Temporary2 = true; else {    Temporary2 = (module.exports == undefined);  }if (Temporary2) {
module.exports = {};
}

module.exports["serialize"] = serialize_486539667;
module.exports["encodingLength"] = encodingLength_486539733;
module.exports["encode"] = encode_486539740;
module.exports["allocAndEncode"] = serialize_486539667;

function sysFatal_33557003(message_33557006) {
    raiseException({message: nimCopy(null, message_33557006, NTI33554439), m_type: NTI33555142, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33557002, p_33557002_Idx) {
    if ((p_33557002 == null && p_33557002_Idx == 0)) {
    sysFatal_33557003(makeNimstrLit("cannot dispatch; dispatcher is nil"));
    }
    

  
}

function nsuToLowerAsciiChar(c_637534276) {
  var result_637534277 = 0;

    if ((ConstSet43[c_637534276] != undefined)) {
    result_637534277 = (c_637534276 ^ 32);
    }
    else {
      result_637534277 = c_637534276;
    }
    

  return result_637534277;

}

function nsuIntToStr(x_637534997, minchars_637534998) {
  var result_637534999 = [];

    result_637534999 = nimCopy(null, HEX24_335544323(absInt(x_637534997)), NTI33554439);
    Label1: do {
      var i_637535004 = 0;
      var colontmp__486539869 = 0;
      colontmp__486539869 = subInt(minchars_637534998, (result_637534999).length);
      var res_486539870 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539870 <= colontmp__486539869)) break Label3;
            i_637535004 = res_486539870;
            result_637534999 = nimCopy(null, [48].concat(result_637534999 || []), NTI33554439);
            res_486539870 = addInt(res_486539870, 1);
          }
      } while (false);
    } while (false);
    if ((x_637534997 < 0)) {
    result_637534999 = nimCopy(null, [45].concat(result_637534999 || []), NTI33554439);
    }
    

  return result_637534999;

}

function monthday_654312587(dt_654312588) {
  var result_654312589 = 0;

    if (!(!((dt_654312588.monthdayZero == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("times.nim(997, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_654312589 = dt_654312588.monthdayZero;

  return result_654312589;

}

function ntgetDateStr(dt_654312938) {
  var result_654312939 = [];

    if (!(!((dt_654312938.monthdayZero == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("times.nim(1423, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_654312939 = nimCopy(null, (HEX24_335544323(dt_654312938.year) || []).concat([45],nsuIntToStr(dt_654312938.monthZero, 2) || [],[45],nsuIntToStr(monthday_654312587(dt_654312938), 2) || []), NTI33554439);

  return result_654312939;

}

function HEX2B_654311442(a_654311443, b_654311444) {
  var result_654311445 = 0;

    result_654311445 = (a_654311443 + b_654311444);

  return result_654311445;

}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function HEX2A_654311434(a_654311435, b_654311436) {
  var result_654311437 = 0;

    result_654311437 = (a_654311435 * b_654311436);

  return result_654311437;

}

function convert_654311835(unitFrom_654311837, unitTo_654311838, quantity_654311839) {
    var Temporary1;

  var result_654311840 = 0;

    if ((unitFrom_654311837 < unitTo_654311838)) {
    Temporary1 = divInt(quantity_654311839, divInt(unitWeights_654311570[unitTo_654311838], unitWeights_654311570[unitFrom_654311837]));
    }
    else {
    Temporary1 = HEX2A_654311434(divInt(unitWeights_654311570[unitFrom_654311837], unitWeights_654311570[unitTo_654311838]), quantity_654311839);
    }
    
    result_654311840 = Temporary1;

  return result_654311840;

}

function convert_654311902(unitFrom_654311904, unitTo_654311905, quantity_654311906) {
    var Temporary1;

  var result_654311907 = 0;

    if ((unitFrom_654311904 < unitTo_654311905)) {
    Temporary1 = divInt(quantity_654311906, divInt(unitWeights_654311570[unitTo_654311905], unitWeights_654311570[unitFrom_654311904]));
    }
    else {
    Temporary1 = HEX2A_654311434(divInt(unitWeights_654311570[unitFrom_654311904], unitWeights_654311570[unitTo_654311905]), quantity_654311906);
    }
    
    result_654311907 = Temporary1;

  return result_654311907;

}

function normalize_654312463(seconds_654312465, nanoseconds_654312466) {
  var result_654312467 = ({seconds: 0, nanosecond: 0});

    result_654312467.seconds = HEX2B_654311442(seconds_654312465, convert_654311835(0, 3, nanoseconds_654312466));
    var nanosecond_654312478 = modInt(nanoseconds_654312466, convert_654311902(3, 0, 1));
    if ((nanosecond_654312478 < 0)) {
    nanosecond_654312478 = addInt(nanosecond_654312478, convert_654311902(3, 0, 1));
    result_654312467.seconds = subInt(result_654312467.seconds, 1);
    }
    
    result_654312467.nanosecond = nanosecond_654312478;

  return result_654312467;

}

function HEX2D_654311450(a_654311451, b_654311452) {
  var result_654311453 = 0;

    result_654311453 = (a_654311451 - b_654311452);

  return result_654311453;

}

function HEX2D_654311454(a_654311455, b_654311456) {
  var result_654311457 = 0;

    result_654311457 = (a_654311455 - b_654311456);

  return result_654311457;

}

function ntSubTime(a_654312493, b_654312494) {
  var result_654312495 = ({seconds: 0, nanosecond: 0});

    result_654312495 = nimCopy(result_654312495, normalize_654312463(HEX2D_654311450(a_654312493.seconds, b_654312494.seconds), HEX2D_654311454(a_654312493.nanosecond, b_654312494.nanosecond)), NTI654311454);

  return result_654312495;

}

function normalize_654311892(seconds_654311894, nanoseconds_654311895) {
  var result_654311896 = ({seconds: 0, nanosecond: 0});

    result_654311896.seconds = HEX2B_654311442(seconds_654311894, convert_654311835(0, 3, nanoseconds_654311895));
    var nanosecond_654311912 = modInt(nanoseconds_654311895, convert_654311902(3, 0, 1));
    if ((nanosecond_654311912 < 0)) {
    nanosecond_654311912 = addInt(nanosecond_654311912, convert_654311902(3, 0, 1));
    result_654311896.seconds = subInt(result_654311896.seconds, 1);
    }
    
    result_654311896.nanosecond = nanosecond_654311912;

  return result_654311896;

}

function initDuration_654311825(nanoseconds_654311826, microseconds_654311827, milliseconds_654311828, seconds_654311829, minutes_654311830, hours_654311831, days_654311832, weeks_654311833) {
  var result_654311834 = ({seconds: 0, nanosecond: 0});

    var seconds_654311880 = HEX2B_654311442(HEX2B_654311442(HEX2B_654311442(HEX2B_654311442(HEX2B_654311442(HEX2B_654311442(HEX2B_654311442(convert_654311835(7, 3, weeks_654311833), convert_654311835(6, 3, days_654311832)), convert_654311835(4, 3, minutes_654311830)), convert_654311835(5, 3, hours_654311831)), convert_654311835(3, 3, seconds_654311829)), convert_654311835(2, 3, milliseconds_654311828)), convert_654311835(1, 3, microseconds_654311827)), convert_654311835(0, 3, nanoseconds_654311826));
    var nanoseconds_654311891 = HEX2B_654311442(HEX2B_654311442(convert_654311835(2, 0, modInt(milliseconds_654311828, 1000)), convert_654311835(1, 0, modInt(microseconds_654311827, 1000000))), modInt(nanoseconds_654311826, 1000000000));
    result_654311834 = nimCopy(result_654311834, normalize_654311892(seconds_654311880, nanoseconds_654311891), NTI654311456);

  return result_654311834;

}

function floorDiv_654311717(x_654311719, y_654311720) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

  var result_654311721 = 0;

    result_654311721 = Math.trunc(x_654311719 / y_654311720);
    var r_654311722 = Math.trunc(x_654311719 % y_654311720);
      if (!(0 < r_654311722)) Temporary2 = false; else {        Temporary2 = (y_654311720 < 0);      }      if (Temporary2) Temporary1 = true; else {        if (!(r_654311722 < 0)) Temporary3 = false; else {          Temporary3 = (0 < y_654311720);        }        Temporary1 = Temporary3;      }    if (Temporary1) {
    result_654311721 -= 1;
    }
    

  return result_654311721;

}

function inc_654311465(a_654311466, a_654311466_Idx, b_654311467) {
    a_654311466[a_654311466_Idx] += b_654311467;

  
}

function fromEpochDay_654311650(epochday_654311651) {
    var Temporary1;
    var Temporary2;

  var result_654311655 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var z_654311656 = [epochday_654311651];
    inc_654311465(z_654311656, 0, 719468);
    if ((0 <= z_654311656[0])) {
    Temporary1 = z_654311656[0];
    }
    else {
    Temporary1 = HEX2D_654311450(z_654311656[0], 146096);
    }
    
    var era_654311657 = divInt(Temporary1, 146097);
    var doe_654311658 = HEX2D_654311450(z_654311656[0], HEX2A_654311434(era_654311657, 146097));
    var yoe_654311659 = divInt(HEX2D_654311450(HEX2B_654311442(HEX2D_654311450(doe_654311658, divInt(doe_654311658, 1460)), divInt(doe_654311658, 36524)), divInt(doe_654311658, 146096)), 365);
    var y_654311660 = HEX2B_654311442(yoe_654311659, HEX2A_654311434(era_654311657, 400));
    var doy_654311661 = HEX2D_654311450(doe_654311658, HEX2D_654311450(HEX2B_654311442(HEX2A_654311434(365, yoe_654311659), divInt(yoe_654311659, 4)), divInt(yoe_654311659, 100)));
    var mp_654311662 = divInt(HEX2B_654311442(HEX2A_654311434(5, doy_654311661), 2), 153);
    var d_654311663 = HEX2B_654311442(HEX2D_654311450(doy_654311661, divInt(HEX2B_654311442(HEX2A_654311434(153, mp_654311662), 2), 5)), 1);
    if ((mp_654311662 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_654311664 = HEX2B_654311442(mp_654311662, Temporary2);
    var colontmp__486539873 = d_654311663;
    var colontmp__486539874 = m_654311664;
    var colontmp__486539875 = HEX2B_654311442(y_654311660, ((m_654311664 <= 2) ? 1 : 0));
    result_654311655 = nimCopy(result_654311655, {Field0: nimCopy(null, colontmp__486539873, NTI654311448), Field1: colontmp__486539874, Field2: colontmp__486539875}, NTI654311615);
    break BeforeRet;
  } while (false);

  return result_654311655;

}

function isLeapYear_654311593(year_654311594) {
    var Temporary1;
      var Temporary2;

  var result_654311595 = false;

    if (!(modInt(year_654311594, 4) == 0)) Temporary1 = false; else {      if (!((modInt(year_654311594, 100) == 0))) Temporary2 = true; else {        Temporary2 = (modInt(year_654311594, 400) == 0);      }      Temporary1 = Temporary2;    }    result_654311595 = Temporary1;

  return result_654311595;

}

function getDaysInMonth_654311596(month_654311597, year_654311598) {
      var Temporary1;

  var result_654311599 = 0;

    switch (month_654311597) {
    case 2:
      if (isLeapYear_654311593(year_654311598)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_654311599 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_654311599 = 30;
      break;
    default: 
      result_654311599 = 31;
      break;
    }

  return result_654311599;

}

function assertValidDate_654311600(monthday_654311601, month_654311602, year_654311603) {
    if (!((monthday_654311601 <= getDaysInMonth_654311596(month_654311602, year_654311603)))) {
    failedAssertImpl_218103864((makeNimstrLit("times.nim(450, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(HEX24_335544323(year_654311603) || [],makeNimstrLit("-") || [],nsuIntToStr(month_654311602, 2) || [],makeNimstrLit("-") || [],HEX24_335544323(monthday_654311601) || [],makeNimstrLit(" is not a valid date") || []));
    }
    

  
}

function HEX2A_654311438(a_654311439, b_654311440) {
  var result_654311441 = 0;

    result_654311441 = (a_654311439 * b_654311440);

  return result_654311441;

}

function HEX2B_654311446(a_654311447, b_654311448) {
  var result_654311449 = 0;

    result_654311449 = (a_654311447 + b_654311448);

  return result_654311449;

}

function toEpochDay_654311622(monthday_654311623, month_654311624, year_654311625) {
    var Temporary1;
    var Temporary2;

  var result_654311626 = 0;

  BeforeRet: do {
    assertValidDate_654311600(monthday_654311623, month_654311624, year_654311625);
    var colontmp__486539876 = {Field0: year_654311625, Field1: month_654311624, Field2: monthday_654311623};
    var y_654311630 = colontmp__486539876["Field0"];
    var m_654311631 = colontmp__486539876["Field1"];
    var d_654311632 = colontmp__486539876["Field2"];
    if ((m_654311631 <= 2)) {
    y_654311630 = subInt(y_654311630, 1);
    }
    
    if ((0 <= y_654311630)) {
    Temporary1 = y_654311630;
    }
    else {
    Temporary1 = HEX2D_654311454(y_654311630, 399);
    }
    
    var era_654311637 = divInt(Temporary1, 400);
    var yoe_654311638 = HEX2D_654311454(y_654311630, HEX2A_654311438(era_654311637, 400));
    if ((2 < m_654311631)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_654311639 = HEX2D_654311454(HEX2B_654311446(divInt(HEX2B_654311446(HEX2A_654311438(153, HEX2B_654311446(m_654311631, Temporary2)), 2), 5), d_654311632), 1);
    var doe_654311640 = HEX2B_654311446(HEX2D_654311454(HEX2B_654311446(HEX2A_654311438(yoe_654311638, 365), divInt(yoe_654311638, 4)), divInt(yoe_654311638, 100)), doy_654311639);
    result_654311626 = HEX2D_654311454(HEX2B_654311446(HEX2A_654311438(era_654311637, 146097), doe_654311640), 719468);
    break BeforeRet;
  } while (false);

  return result_654311626;

}

function getDayOfWeek_654311711(monthday_654311712, month_654311713, year_654311714) {
    var Temporary1;

  var result_654311715 = 0;

    assertValidDate_654311600(monthday_654311712, month_654311713, year_654311714);
    var days_654311716 = HEX2D_654311450(toEpochDay_654311622(monthday_654311712, month_654311713, year_654311714), 3);
    var weeks_654311727 = floorDiv_654311717(days_654311716, 7);
    var wd_654311728 = HEX2D_654311450(days_654311716, HEX2A_654311434(weeks_654311727, 7));
    if ((wd_654311728 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = HEX2D_654311450(wd_654311728, 1);
    }
    
    result_654311715 = Temporary1;

  return result_654311715;

}

function getDayOfYear_654311686(monthday_654311687, month_654311688, year_654311689) {
  var result_654311690 = 0;

    assertValidDate_654311600(monthday_654311687, month_654311688, year_654311689);
    if (isLeapYear_654311593(year_654311689)) {
    result_654311690 = HEX2D_654311454(HEX2B_654311446(daysUntilMonthLeap_654311692[(month_654311688) - (1)], monthday_654311687), 1);
    }
    else {
      result_654311690 = HEX2D_654311454(HEX2B_654311446(daysUntilMonth_654311691[(month_654311688) - (1)], monthday_654311687), 1);
    }
    

  return result_654311690;

}

function initDateTime_654312694(zt_654312695, zone_654312696) {
  var result_654312697 = ({m_type: NTI654311455, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_654312698 = ntSubTime(zt_654312695.time, initDuration_654311825(0, 0, 0, zt_654312695.utcOffset, 0, 0, 0, 0));
    var s_654312699 = adjTime_654312698.seconds;
    var epochday_654312704 = floorDiv_654311717(s_654312699, 86400);
    var rem_654312705 = HEX2D_654311450(s_654312699, HEX2A_654311434(epochday_654312704, 86400));
    var hour_654312706 = divInt(rem_654312705, 3600);
    rem_654312705 = HEX2D_654311450(rem_654312705, HEX2A_654311434(hour_654312706, 3600));
    var minute_654312707 = divInt(rem_654312705, 60);
    rem_654312705 = HEX2D_654311450(rem_654312705, HEX2A_654311434(minute_654312707, 60));
    var second_654312708 = rem_654312705;
    var colontmp__486539872 = fromEpochDay_654311650(epochday_654312704);
    var d_654312709 = colontmp__486539872["Field0"];
    var m_654312710 = colontmp__486539872["Field1"];
    var y_654312711 = colontmp__486539872["Field2"];
    result_654312697 = nimCopy(result_654312697, {year: y_654312711, monthZero: ((m_654312710) | 0), monthdayZero: d_654312709, hour: nimCopy(null, hour_654312706, NTI654311449), minute: nimCopy(null, minute_654312707, NTI654311450), second: nimCopy(null, second_654312708, NTI654311451), nanosecond: nimCopy(null, zt_654312695.time.nanosecond, NTI654311453), weekday: getDayOfWeek_654311711(d_654312709, m_654312710, y_654312711), yearday: getDayOfYear_654311686(d_654312709, m_654312710, y_654312711), isDst: zt_654312695.isDst, timezone: zone_654312696, utcOffset: zt_654312695.utcOffset, m_type: NTI654311455}, NTI654311455);

  return result_654312697;

}

function zonedTimeFromTime_654312751(zone_654312752, time_654312753) {
  var result_654312754 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_654312754 = nimCopy(result_654312754, zone_654312752.zonedTimeFromTimeImpl(time_654312753), NTI654311461);

  return result_654312754;

}

function inZone_654312791(time_654312792, zone_654312793) {
  var result_654312794 = ({m_type: NTI654311455, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_654312794 = nimCopy(result_654312794, initDateTime_654312694(zonedTimeFromTime_654312751(zone_654312793, time_654312792), zone_654312793), NTI654311455);

  return result_654312794;

}

function newTimezone_654312721(name_654312722, zonedTimeFromTimeImpl_654312725, zonedTimeFromAdjTimeImpl_654312728) {
  var result_654312729 = null;

    result_654312729 = {name: nimCopy(null, name_654312722, NTI33554439), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_654312725, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_654312728};

  return result_654312729;

}

function localZonedTimeFromTime_654312809(time_654312810) {
  var result_654312811 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_654312815 = new Date(HEX2A_654311434(time_654312810.seconds, 1000));
    var offset_654312816 = HEX2A_654311438(jsDate_654312815.getTimezoneOffset(), 60);
    result_654312811.time = nimCopy(result_654312811.time, time_654312810, NTI654311454);
    result_654312811.utcOffset = offset_654312816;
    result_654312811.isDst = false;

  return result_654312811;

}

function contains_654312832(s_654312836, value_654312837) {
  var result_654312838 = false;

    result_654312838 = ((s_654312836.a <= value_654312837) && (value_654312837 <= s_654312836.b));

  return result_654312838;

}

function HEX2EHEX2E_956302163(a_956302166, b_956302167) {
  var result_956302168 = ({a: 0, b: 0});

    result_956302168 = nimCopy(result_956302168, {a: a_956302166, b: b_956302167}, NTI704643133);

  return result_956302168;

}

function ntAddTime(a_654312457, b_654312458) {
  var result_654312459 = ({seconds: 0, nanosecond: 0});

    result_654312459 = nimCopy(result_654312459, normalize_654312463(HEX2B_654311442(a_654312457.seconds, b_654312458.seconds), HEX2B_654311446(a_654312457.nanosecond, b_654312458.nanosecond)), NTI654311454);

  return result_654312459;

}

function localZonedTimeFromAdjTime_654312817(adjTime_654312818) {
  var result_654312819 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_654312823 = new Date(HEX2A_654311434(adjTime_654312818.seconds, 1000));
    var localDate_654312824 = new Date(utcDate_654312823.getUTCFullYear(),utcDate_654312823.getUTCMonth(),utcDate_654312823.getUTCDate(),utcDate_654312823.getUTCHours(),utcDate_654312823.getUTCMinutes(),utcDate_654312823.getUTCSeconds(),0);
    if (contains_654312832(HEX2EHEX2E_956302163(0, 99), utcDate_654312823.getUTCFullYear())) {
    localDate_654312824.setFullYear(utcDate_654312823.getUTCFullYear());
    }
    
    result_654312819.utcOffset = HEX2A_654311438(localDate_654312824.getTimezoneOffset(), 60);
    result_654312819.time = nimCopy(result_654312819.time, ntAddTime(adjTime_654312818, initDuration_654311825(0, 0, 0, result_654312819.utcOffset, 0, 0, 0, 0)), NTI654311454);
    result_654312819.isDst = false;

  return result_654312819;

}

function local_654312858() {
  var result_654312859 = null;

    if ((localInstance_654312843[0] == null)) {
    localInstance_654312843[0] = newTimezone_654312721(makeNimstrLit("LOCAL"), localZonedTimeFromTime_654312809, localZonedTimeFromAdjTime_654312817);
    }
    
    result_654312859 = localInstance_654312843[0];

  return result_654312859;

}

function local_654312872(t_654312873) {
  var result_654312874 = ({m_type: NTI654311455, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_654312874 = nimCopy(result_654312874, inZone_654312791(t_654312873, local_654312858()), NTI654311455);

  return result_654312874;

}

function initTime_654312350(unix_654312351, nanosecond_654312352) {
  var result_654312353 = ({seconds: 0, nanosecond: 0});

    result_654312353.seconds = unix_654312351;
    result_654312353.nanosecond = nanosecond_654312352;

  return result_654312353;

}

function getTime_654312416() {
  var result_654312417 = ({seconds: 0, nanosecond: 0});

    var millis_654312418 = new Date().getTime();
    var seconds_654312424 = convert_654311902(2, 3, millis_654312418);
    var nanos_654312435 = convert_654311902(2, 0, modInt(millis_654312418, convert_654311902(3, 2, 1)));
    result_654312417 = nimCopy(result_654312417, initTime_654312350(seconds_654312424, nanos_654312435), NTI654311454);

  return result_654312417;

}

function now_654312875() {
  var result_654312876 = ({m_type: NTI654311455, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_654312876 = nimCopy(result_654312876, local_654312872(getTime_654312416()), NTI654311455);

  return result_654312876;

}

function ntgetClockStr(dt_654312946) {
  var result_654312947 = [];

    if (!(!((dt_654312946.monthdayZero == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("times.nim(1431, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_654312947 = nimCopy(null, (nsuIntToStr(dt_654312946.hour, 2) || []).concat([58],nsuIntToStr(dt_654312946.minute, 2) || [],[58],nsuIntToStr(dt_654312946.second, 2) || []), NTI33554439);

  return result_654312947;

}

function substituteLog_620757046(frmt_620757047, level_620757048, args_620757049) {
                  var Temporary8;

  var result_620757050 = [];

    var msgLen_620757051 = 0;
    Label1: do {
      var arg_620757055 = [];
      var i_486539861 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539861 < (args_620757049).length)) break Label3;
            arg_620757055 = args_620757049[i_486539861];
            msgLen_620757051 = addInt(msgLen_620757051, (arg_620757055).length);
            i_486539861 = addInt(i_486539861, 1);
          }
      } while (false);
    } while (false);
    result_620757050 = nimCopy(null, mnewString(0), NTI33554439);
    var i_620757060 = 0;
    Label4: do {
        Label5: while (true) {
        if (!(i_620757060 < (frmt_620757047).length)) break Label5;
          if (!((frmt_620757047[i_620757060] == 36))) {
          addChar(result_620757050, frmt_620757047[i_620757060]);;
          i_620757060 = addInt(i_620757060, 1);
          }
          else {
            i_620757060 = addInt(i_620757060, 1);
            var v_620757069 = [];
            var app_620757070 = [];
            Label6: do {
                Label7: while (true) {
                  if (!(i_620757060 < (frmt_620757047).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet42[frmt_620757047[i_620757060]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_620757069, nsuToLowerAsciiChar(frmt_620757047[i_620757060]));;
                  i_620757060 = addInt(i_620757060, 1);
                }
            } while (false);
            switch (toJSStr(v_620757069)) {
            case "date":
              result_620757050.push.apply(result_620757050, ntgetDateStr(now_654312875()));;
              break;
            case "time":
              result_620757050.push.apply(result_620757050, ntgetClockStr(now_654312875()));;
              break;
            case "datetime":
              result_620757050.push.apply(result_620757050, (ntgetDateStr(now_654312875()) || []).concat(makeNimstrLit("T") || [],ntgetClockStr(now_654312875()) || []));;
              break;
            case "app":
              result_620757050.push.apply(result_620757050, app_620757070);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_620757050, LevelNames_620757007[level_620757048][0]);;
              break;
            case "levelname":
              result_620757050.push.apply(result_620757050, LevelNames_620757007[level_620757048]);;
              break;
            default: 
              break;
            }
          }
          
        }
    } while (false);
    Label9: do {
      var arg_620757082 = [];
      var i_486539866 = 0;
      Label10: do {
          Label11: while (true) {
          if (!(i_486539866 < (args_620757049).length)) break Label11;
            arg_620757082 = args_620757049[i_486539866];
            result_620757050.push.apply(result_620757050, arg_620757082);;
            i_486539866 = addInt(i_486539866, 1);
          }
      } while (false);
    } while (false);

  return result_620757050;

}

function log_620757088(logger_620757089, level_620757090, args_620757091) {
      var Temporary1;

      if (!(level_620757017[0] <= level_620757090)) Temporary1 = false; else {        Temporary1 = (logger_620757089.levelThreshold <= level_620757090);      }    if (Temporary1) {
    var ln_620757100 = substituteLog_620757046(logger_620757089.fmtStr, level_620757090, args_620757091);
    var cln_620757101 = toJSStr(ln_620757100);
    switch (level_620757090) {
    case 1:
      console.debug(cln_620757101);
      break;
    case 2:
      console.info(cln_620757101);
      break;
    case 4:
      console.warn(cln_620757101);
      break;
    case 5:
      console.error(cln_620757101);
      break;
    default: 
      console.log(cln_620757101);
      break;
    }
    }
    

  
}

function log_620757083(logger_620757084, level_620757085, args_620757086) {
  
}

function log_620757087(logger_620757084, level_620757085, args_620757086) {
    chckNilDisp(logger_620757084);
    if (isObj(logger_620757084.m_type, NTI620757005)) {
    log_620757088(logger_620757084, level_620757085, args_620757086);
    }
    else {
    if (isObj(logger_620757084.m_type, NTI620757004)) {
    log_620757083(logger_620757084, level_620757085, args_620757086);
    }
    }

  
}
