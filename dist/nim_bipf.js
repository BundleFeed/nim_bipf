/* Generated by the Nim Compiler v1.6.12 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI721420349 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI671088677 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI671088657 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI671088831 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI671088682 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI671088664 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI671088672 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554460 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI671088670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI671088709 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI671088708 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI671088707 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI671088676 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI671088699 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI671088668 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI671088658 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI671088687 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI671088665 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI671088691 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI671088666 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI671088695 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI671088667 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI671088703 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI671088669 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI671088671 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555142 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554464 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI1526726659 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI503320195 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI503320192 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627989 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1157627990 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI503316576 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI503316574 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1258291204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555129 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554437 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI33554459 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI33555188 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1157627985 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1157627977 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1308622851 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1308622852 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1258291203 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI637534211 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI637534220 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI637534221 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI637534221 = {kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null};
NTI637534221.node = NNI637534221;
var NNI637534211 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI637534211, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI637534211, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI637534211, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI637534211, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI637534211, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI637534211, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI637534211, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI637534211, name: "lvlNone", len: 0, sons: null}}};
NTI637534211.node = NNI637534211;
var NNI637534220 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI637534211, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554439, name: "fmtStr", sons: null}]};
NTI637534220.node = NNI637534220;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI637534220.base = NTI33555083;
NTI637534221.base = NTI637534220;
var NNI1258291203 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1258291203.node = NNI1258291203;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
NTI33555112.base = NTI33555083;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
NTI1258291203.base = NTI33555125;
var NNI1308622851 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1308622851, name: "svtSTRING", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1308622851, name: "svtBUFFER", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1308622851, name: "svtINT", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1308622851, name: "svtDOUBLE", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1308622851, name: "svtARRAY", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1308622851, name: "svtOBJECT", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1308622851, name: "svtATOM", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1308622851, name: "svtEXTENDED", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1308622851, name: "svtBIPF_BUFFER", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1308622851, name: "svtCSTRING", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1308622851, name: "svtNULL", len: 0, sons: null}}};
NTI1308622851.node = NNI1308622851;
var NNI1157627985 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627985.node = NNI1157627985;
var NNI33555188 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555188.node = NNI33555188;
NTI33555188.base = NTI33555083;
NTI1157627985.base = NTI33555188;
NTI1157627977.base = NTI1157627985;
var NNI1308622852 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "encodedSize", len: 0, typ: NTI33554456, name: "encodedSize", sons: null}, 
{kind: 3, offset: "tag", len: 11, typ: NTI1308622851, name: "tag", sons: [[setConstr(0), {kind: 1, offset: "str", len: 0, typ: NTI33554439, name: "str", sons: null}], 
[setConstr(9), {kind: 1, offset: "cstr", len: 0, typ: NTI33554440, name: "cstr", sons: null}], 
[setConstr(1, 8), {kind: 1, offset: "buf", len: 0, typ: NTI1157627977, name: "buf", sons: null}], 
[setConstr(2), {kind: 1, offset: "i", len: 0, typ: NTI33554459, name: "i", sons: null}], 
[setConstr(3), {kind: 1, offset: "d", len: 0, typ: NTI33554437, name: "d", sons: null}], 
[setConstr(6), {kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}], 
[setConstr(7), {kind: 1, offset: "ext", len: 0, typ: NTI1157627977, name: "ext", sons: null}], 
[setConstr(4, 5), {kind: 1, offset: "size", len: 0, typ: NTI33554456, name: "size", sons: null}], 
[setConstr(10), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]]}]};
NTI1308622852.node = NNI1308622852;
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555129 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555129.node = NNI33555129;
NTI33555129.base = NTI33555113;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI1258291204 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1258291204, name: "STRING", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1258291204, name: "BUFFER", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1258291204, name: "INT", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1258291204, name: "DOUBLE", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1258291204, name: "ARRAY", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1258291204, name: "OBJECT", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1258291204, name: "ATOM", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1258291204, name: "EXTENDED", len: 0, sons: null}}};
NTI1258291204.node = NNI1258291204;
NTI503316576.base = NTI33554440;
var NNI1157627989 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627989.node = NNI1157627989;
NTI1157627989.base = NTI33555188;
NTI1157627990.base = NTI1157627989;
var NNI503316574 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "values", len: 0, typ: NTI503316576, name: "values", sons: null}, 
{kind: 1, offset: "map", len: 0, typ: NTI1157627990, name: "map", sons: null}]};
NTI503316574.node = NNI503316574;
NTI503316574.base = NTI1157627985;
var NNI1526726659 = {kind: 2, offset: 0, typ: null, name: null, len: 1, sons: {"0": {kind: 1, offset: 0, typ: NTI1526726659, name: "MatchKey", len: 0, sons: null}}};
NTI1526726659.node = NNI1526726659;
var NNI503320195 = {kind: 3, offset: "opCode", len: 1, typ: NTI1526726659, name: "opCode", sons: [[setConstr(0), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "prefix", len: 0, typ: NTI33554464, name: "prefix", sons: null}, 
{kind: 1, offset: "key", len: 0, typ: NTI1157627977, name: "key", sons: null}]}]]};
NTI503320195.node = NNI503320195;
NTI503320192.base = NTI503320195;
var NNI33555142 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555142.node = NNI33555142;
NTI33555142.base = NTI33555113;
NTI671088669.base = NTI671088703;
NTI671088667.base = NTI671088695;
NTI671088666.base = NTI671088691;
NTI671088665.base = NTI671088687;
var NNI671088658 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI671088658, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI671088658, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI671088658, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI671088658, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI671088658, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI671088658, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI671088658, name: "Sunday", len: 0, sons: null}}};
NTI671088658.node = NNI671088658;
NTI671088668.base = NTI671088699;
var NNI671088707 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI671088708, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI671088709, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}]};
NTI671088707.node = NNI671088707;
NTI671088676.base = NTI671088707;
var NNI671088671 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI671088669, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI671088667, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI671088666, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI671088665, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554456, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554456, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554456, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI671088658, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI671088668, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI671088676, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554456, name: "utcOffset", sons: null}]};
NTI671088671.node = NNI671088671;
NTI671088671.base = NTI33555083;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
var NNI671088670 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554460, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI671088669, name: "nanosecond", sons: null}]};
NTI671088670.node = NNI671088670;
var NNI671088672 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554460, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI671088669, name: "nanosecond", sons: null}]};
NTI671088672.node = NNI671088672;
NTI671088664.base = NTI671088682;
var NNI671088657 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI671088657, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI671088657, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI671088657, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI671088657, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI671088657, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI671088657, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI671088657, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI671088657, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI671088657, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI671088657, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI671088657, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI671088657, name: "December", len: 0, sons: null}}};
NTI671088657.node = NNI671088657;
var NNI671088831 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI671088664, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI671088657, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554456, name: "Field2", sons: null}]};
NTI671088831.node = NNI671088831;
var NNI671088677 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI671088670, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554456, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI671088677.node = NNI671088677;
var NNI721420349 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI721420349.node = NNI721420349;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function genericReset(x_33557171, ti_33557172) {
  var result_33557173 = null;

    result_33557173 = null;
    switch (ti_33557172.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557131(ti_33557172)) {
              result_33557173 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557173 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557172.kind == 17)) {
      result_33557173 = {m_type: ti_33557172};
      }
      else {
        result_33557173 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557173 = [];
    
      break;
    case 4:
    case 16:
            result_33557173 = new Array(x_33557171.length);
      for (var i = 0; i < x_33557171.length; ++i) {
        result_33557173[i] = genericReset(x_33557171[i], ti_33557172.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557173;

}

function subInt(a_33556944, b_33556945) {
        var result = a_33556944 - b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet2 = setConstr(4, 5);

function raiseFieldError2(f_33556778, discVal_33556779) {
    raiseException({message: (f_33556778 || []).concat(discVal_33556779 || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI33555129, name: null, trace: [], up: null}, "FieldDefect");

  
}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function nimBoolToStr(x_33556514) {
  var result_33556515 = [];

    if (x_33556514) {
    result_33556515 = nimCopy(null, makeNimstrLit("true"), NTI33554439);
    }
    else {
      result_33556515 = nimCopy(null, makeNimstrLit("false"), NTI33554439);
    }
    

  return result_33556515;

}

function reprDiscriminant(e_33557409, typ_33557410) {
    var Temporary1;

  var result_33557411 = [];

    switch (typ_33557410.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557409, typ_33557410);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557409 == 0)));
      break;
    default: 
      Temporary1 = HEX24_352321539(e_33557409);
      break;
    }
    result_33557411 = nimCopy(null, Temporary1, NTI33554439);

  return result_33557411;

}
var ConstSet3 = setConstr(4, 5);
var ConstSet4 = setConstr(4, 5);
var ConstSet5 = setConstr(4, 5);
var ConstSet6 = setConstr(4, 5);
var ConstSet7 = setConstr(4, 5);
var ConstSet8 = setConstr(4, 5);
var ConstSet9 = setConstr(4, 5);
var ConstSet10 = setConstr(4, 5);
var ConstSet11 = setConstr(4, 5);
var ConstSet12 = setConstr(4, 5);
var ConstSet13 = setConstr(4, 5);
var ConstSet14 = setConstr(4, 5);
var ConstSet15 = setConstr(4, 5);
var ConstSet16 = setConstr(4, 5);
var ConstSet17 = setConstr(4, 5);
var ConstSet18 = setConstr(4, 5);
var ConstSet19 = setConstr(4, 5);
var ConstSet20 = setConstr(1, 8);
var ConstSet21 = setConstr(1, 8);
var ConstSet22 = setConstr(1, 8);
              var mapTagCode_1308624024 = new Uint32Array([0, 1, 2, 3, 4, 5, 6, 7, 1, 0, 6]);
var ConstSet23 = setConstr(2);
var ConstSet24 = setConstr(3);
var ConstSet25 = setConstr(6);
var ConstSet26 = setConstr(6);
var ConstSet27 = setConstr(6);
var ConstSet28 = setConstr(6);
var ConstSet29 = setConstr(6);
var ConstSet30 = setConstr(6);
var ConstSet31 = setConstr(6);
var ConstSet32 = setConstr(6);
var ConstSet33 = setConstr(6);
var ConstSet34 = setConstr(0);
var ConstSet35 = setConstr(9);
var ConstSet36 = setConstr(7);
var ConstSet37 = setConstr(7);
var ConstSet38 = setConstr(7);
var ConstSet39 = setConstr(1, 8);
var ConstSet40 = setConstr(1, 8);
var ConstSet41 = setConstr(1, 8);

function cstrToNimstr(c_33556804) {
      var ln = c_33556804.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556804.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556804.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet42 = setConstr(4, 5);
var ConstSet43 = setConstr(4, 5);
var ConstSet44 = setConstr(4, 5);
var ConstSet45 = setConstr(4, 5);
var ConstSet46 = setConstr(4, 5);
var ConstSet47 = setConstr(4, 5);
var ConstSet48 = setConstr(4, 5);
var ConstSet49 = setConstr(4, 5);
var ConstSet50 = setConstr(4, 5);
var ConstSet51 = setConstr(4, 5);
var ConstSet52 = setConstr(4, 5);
var ConstSet53 = setConstr(4, 5);
var ConstSet54 = setConstr(4, 5);
var ConstSet55 = setConstr(4, 5);
var ConstSet56 = setConstr(0);
var ConstSet57 = setConstr(0);

function nimMin(a_33556994, b_33556995) {
    var Temporary1;

  var result_33556996 = 0;

  BeforeRet: do {
    if ((a_33556994 <= b_33556995)) {
    Temporary1 = a_33556994;
    }
    else {
    Temporary1 = b_33556995;
    }
    
    result_33556996 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556996;

}

function isObj(obj_33557238, subclass_33557239) {
  var result_33557240 = false;

  BeforeRet: do {
    var x_33557241 = obj_33557238;
    if ((x_33557241 == subclass_33557239)) {
    result_33557240 = true;
    break BeforeRet;
    }
    
    Label1: do {
        Label2: while (true) {
        if (!!((x_33557241 == subclass_33557239))) break Label2;
          if ((x_33557241 == null)) {
          result_33557240 = false;
          break BeforeRet;
          }
          
          x_33557241 = x_33557241.base;
        }
    } while (false);
    result_33557240 = true;
    break BeforeRet;
  } while (false);

  return result_33557240;

}

function addChar(x_33557255, c_33557256) {
    x_33557255.push(c_33557256);

  
}
var ConstSet58 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet59 = setConstr([65, 90]);

function absInt(a_33556988) {
    var Temporary1;

  var result_33556989 = 0;

    if ((a_33556988 < 0)) {
    Temporary1 = (a_33556988 * -1);
    }
    else {
    Temporary1 = a_33556988;
    }
    
    result_33556989 = Temporary1;

  return result_33556989;

}

function divInt(a_33556952, b_33556953) {
        if (b_33556953 == 0) raiseDivByZero();
    if (b_33556953 == -1 && a_33556952 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556952 / b_33556953);
  

  
}
    var unitWeights_671088786 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function modInt(a_33556956, b_33556957) {
        if (b_33556957 == 0) raiseDivByZero();
    if (b_33556957 == -1 && a_33556956 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556956 % b_33556957);
  

  
}
    var daysUntilMonthLeap_671088908 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_671088907 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_637534223 = [makeNimstrLit("DEBUG"), makeNimstrLit("DEBUG"), makeNimstrLit("INFO"), makeNimstrLit("NOTICE"), makeNimstrLit("WARN"), makeNimstrLit("ERROR"), makeNimstrLit("FATAL"), makeNimstrLit("NONE")];
if (globalThis.utcInstance_671090058 === undefined) {
  globalThis.utcInstance_671090058 = [null];
}
if (globalThis.localInstance_671090059 === undefined) {
  globalThis.localInstance_671090059 = [null];
}
if (globalThis.level_637534233 === undefined) {
  globalThis.level_637534233 = [0];
}
if (globalThis.handlers_637534234 === undefined) {
  globalThis.handlers_637534234 = [[]];
}
var objectID_1124073634 = [0];
var NOKEYDICT_1258291230 = [null];

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function newConsoleLogger_637534318(levelThreshold_637534319, fmtStr_637534320, useStderr_637534321) {
  var result_637534322 = null;

    result_637534322 = ({m_type: NTI637534221, useStderr: false, levelThreshold: 0, fmtStr: []});
    result_637534322.fmtStr = nimCopy(null, fmtStr_637534320, NTI33554439);
    result_637534322.levelThreshold = levelThreshold_637534319;
    result_637534322.useStderr = useStderr_637534321;

  return result_637534322;

}

function addHandler_637534397(handler_637534398) {
    handlers_637534234[0].push(handler_637534398);;

  
}
var consoleLog_503316493 = [newConsoleLogger_637534318(0, makeNimstrLit("$levelname "), false)];
addHandler_637534397(consoleLog_503316493[0]);
var bipfBufferSymbol_503316507 = [Symbol("nim_bipf_buffer")];
var BipfBuffer = {};

function isBipfBuffer_503316509(s_503316510) {
  var result_503316511 = false;

    result_503316511 = ((typeof(s_503316510) == "object") && s_503316510.hasOwnProperty(bipfBufferSymbol_503316507[0]));

  return result_503316511;

}
BipfBuffer.isBipfBuffer = isBipfBuffer_503316509;

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}
var valueAtomsMap_503316563 = [{}];
var valueAtoms_503316571 = [newSeq_33556825(0)];
var lastObjectVisited_503319705 = [null];
var lastBufferProduced_503319706 = [null];
var jsObjectFactory_503319749 = [0];
var seekKeyCache_503321206 = [{}];

function HEX5BHEX5DHEX3D_503321882(obj_503321884, field_503321885, val_503321886) {
    obj_503321884[toJSStr(field_503321885)] = val_503321886;

  
}
var typesConstants_503321864 = [{}];
HEX5BHEX5DHEX3D_503321882(typesConstants_503321864[0], makeNimstrLit("object"), 5);
HEX5BHEX5DHEX3D_503321882(typesConstants_503321864[0], makeNimstrLit("array"), 4);
HEX5BHEX5DHEX3D_503321882(typesConstants_503321864[0], makeNimstrLit("string"), 0);
HEX5BHEX5DHEX3D_503321882(typesConstants_503321864[0], makeNimstrLit("buffer"), 1);
HEX5BHEX5DHEX3D_503321882(typesConstants_503321864[0], makeNimstrLit("int"), 2);
HEX5BHEX5DHEX3D_503321882(typesConstants_503321864[0], makeNimstrLit("double"), 3);
HEX5BHEX5DHEX3D_503321882(typesConstants_503321864[0], makeNimstrLit("boolnull"), 6);
HEX5BHEX5DHEX3D_503321882(typesConstants_503321864[0], makeNimstrLit("atom"), 6);
HEX5BHEX5DHEX3D_503321882(typesConstants_503321864[0], makeNimstrLit("extended"), 7);

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function HEX5BHEX5D_1308623042(s_1308623044, i_1308623045) {
  var result_1308623046 = null;
  var result_1308623046_Idx = 0;

    result_1308623046 = s_1308623044; result_1308623046_Idx = subInt((s_1308623044).length, i_1308623045);

  return [result_1308623046, result_1308623046_Idx];

}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = addInt(old_251658421, n_251658420));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_503322478 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_503322478 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_503322478;
            result_251658417[result_251658417_Idx][addInt(old_251658421, iHEX60gensym4_251658435)] = x_251658418.charCodeAt(addInt(start_251658419, iHEX60gensym4_251658435));
            i_503322478 = addInt(i_503322478, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_352321539(x_352321540) {
  var result_352321541 = [[]];

    addInt_251658457(result_352321541, 0, x_352321540);

  return result_352321541[0];

}

function reprEnum(e_33557385, typ_33557386) {
  var result_33557387 = [];

    var tmp_33557388 = false;
    var item_33557389 = typ_33557386.node.sons[e_33557385];
    tmp_33557388 = item_33557389 !== undefined
    if (tmp_33557388) {
    result_33557387 = nimCopy(null, makeNimstrLit(item_33557389.name), NTI33554439);
    }
    else {
      result_33557387 = nimCopy(null, (HEX24_352321539(e_33557385) || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI33554439);
    }
    

  return result_33557387;

}

function startArray_1308623136(b_1308623137, b_1308623137_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

    var vHEX60gensym8_1308623150 = {tag: 4, size: 0, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, ext: null};
    if (((b_1308623137[b_1308623137_Idx].pointers).length == 0)) {
    if ((0 < (b_1308623137[b_1308623137_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    b_1308623137[b_1308623137_Idx].pointers.push((b_1308623137[b_1308623137_Idx].stack).length);;
    Temporary1 = vHEX60gensym8_1308623150;
    vHEX60gensym8_1308623150 = genericReset(vHEX60gensym8_1308623150, NTI1308622852);
    b_1308623137[b_1308623137_Idx].stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym8_1308623184 = (Temporary2 = HEX5BHEX5D_1308623042(b_1308623137[b_1308623137_Idx].pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1308623137[b_1308623137_Idx].stack[pHEX60gensym8_1308623184].tag == 4)) {
      var Temporary3 = b_1308623137[b_1308623137_Idx].stack[pHEX60gensym8_1308623184];
      if (ConstSet2[Temporary3.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1308622851)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym8_1308623193 = vHEX60gensym8_1308623150.encodedSize;
      b_1308623137[b_1308623137_Idx].pointers.push((b_1308623137[b_1308623137_Idx].stack).length);;
      b_1308623137[b_1308623137_Idx].stack[pHEX60gensym8_1308623184].encodedSize = addInt(b_1308623137[b_1308623137_Idx].stack[pHEX60gensym8_1308623184].encodedSize, addedHEX60gensym8_1308623193);
      Temporary4 = vHEX60gensym8_1308623150;
      vHEX60gensym8_1308623150 = genericReset(vHEX60gensym8_1308623150, NTI1308622852);
      b_1308623137[b_1308623137_Idx].stack.push(Temporary4);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function startArray_503317247(b_503317249, b_503317249_Idx, key_503317250) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

    if (((b_503317249[b_503317249_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym96_503317264 = (Temporary1 = HEX5BHEX5D_1308623042(b_503317249[b_503317249_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503317249[b_503317249_Idx].stack[pHEX60gensym96_503317264].tag == 5)) {
      var Temporary2 = b_503317249[b_503317249_Idx].stack[pHEX60gensym96_503317264];
      if (ConstSet3[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym96_503317273 = {tag: 9, cstr: key_503317250, encodedSize: Buffer.byteLength(key_503317250), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var vHEX60gensym96_503317283 = {tag: 4, size: 0, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, ext: null};
        if (!(0 <= kHEX60gensym96_503317273.encodedSize)) Temporary3 = false; else {          Temporary3 = (kHEX60gensym96_503317273.encodedSize <= 2147483647);        }      if (!(Temporary3)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym96.encodedSize >= 0 and k`gensym96.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym102_503317298 = (kHEX60gensym96_503317273.encodedSize << 3);
      if ((uHEX60gensym102_503317298 < 128)) {
      Temporary4 = 1;
      }
      else {
      if ((uHEX60gensym102_503317298 < 16384)) {
      Temporary4 = 2;
      }
      else {
      if ((uHEX60gensym102_503317298 < 2097152)) {
      Temporary4 = 3;
      }
      else {
      if ((uHEX60gensym102_503317298 < 268435456)) {
      Temporary4 = 4;
      }
      else {
      Temporary4 = 5;
      }
      }}}
      var addedHEX60gensym96_503317299 = addInt(addInt(kHEX60gensym96_503317273.encodedSize, vHEX60gensym96_503317283.encodedSize), Temporary4);
      Temporary5 = kHEX60gensym96_503317273;
      kHEX60gensym96_503317273 = genericReset(kHEX60gensym96_503317273, NTI1308622852);
      b_503317249[b_503317249_Idx].stack.push(Temporary5);;
      b_503317249[b_503317249_Idx].pointers.push((b_503317249[b_503317249_Idx].stack).length);;
      b_503317249[b_503317249_Idx].stack[pHEX60gensym96_503317264].encodedSize = addInt(b_503317249[b_503317249_Idx].stack[pHEX60gensym96_503317264].encodedSize, addedHEX60gensym96_503317299);
      Temporary6 = vHEX60gensym96_503317283;
      vHEX60gensym96_503317283 = genericReset(vHEX60gensym96_503317283, NTI1308622852);
      b_503317249[b_503317249_Idx].stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function toString_503316541(n_503316542) {
  var result_503316543 = null;

    result_503316543 = n_503316542;

  return result_503316543;

}

function pop_1308623861(s_1308623863, s_1308623863_Idx) {
  var result_1308623864 = 0;

    var L_1308623868 = subInt((s_1308623863[s_1308623863_Idx]).length, 1);
    result_1308623864 = s_1308623863[s_1308623863_Idx][L_1308623868];
    if (s_1308623863[s_1308623863_Idx].length < L_1308623868) { for (var i = s_1308623863[s_1308623863_Idx].length ; i < L_1308623868 ; ++i) s_1308623863[s_1308623863_Idx].push(0); }
               else { s_1308623863[s_1308623863_Idx].length = L_1308623868; };

  return result_1308623864;

}

function endArray_1308623848(b_1308623849, b_1308623849_Idx) {
      var Temporary1;
        var Temporary2;
      var Temporary3;

    if (((b_1308623849[b_1308623849_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot end svtARRAY before starting it"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym110_1308623873 = pop_1308623861(b_1308623849[b_1308623849_Idx], "pointers");
      if (!((b_1308623849[b_1308623849_Idx].stack[pHEX60gensym110_1308623873].tag == 4))) {
      raiseException({message: makeNimstrLit("Cannot end svtARRAY before starting it"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
      if ((0 < (b_1308623849[b_1308623849_Idx].pointers).length)) {
      var parentPHEX60gensym110_1308623889 = (Temporary1 = HEX5BHEX5D_1308623042(b_1308623849[b_1308623849_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      var pEncodedSizeHEX60gensym110_1308623890 = b_1308623849[b_1308623849_Idx].stack[pHEX60gensym110_1308623873].encodedSize;
        if (!(0 <= pEncodedSizeHEX60gensym110_1308623890)) Temporary2 = false; else {          Temporary2 = (pEncodedSizeHEX60gensym110_1308623890 <= 2147483647);        }      if (!(Temporary2)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `pEncodedSize`gensym110 >= 0 and pEncodedSize`gensym110 <= high(int32)` "));
      }
      
      var uHEX60gensym117_1308623905 = (pEncodedSizeHEX60gensym110_1308623890 << 3);
      if ((uHEX60gensym117_1308623905 < 128)) {
      Temporary3 = 1;
      }
      else {
      if ((uHEX60gensym117_1308623905 < 16384)) {
      Temporary3 = 2;
      }
      else {
      if ((uHEX60gensym117_1308623905 < 2097152)) {
      Temporary3 = 3;
      }
      else {
      if ((uHEX60gensym117_1308623905 < 268435456)) {
      Temporary3 = 4;
      }
      else {
      Temporary3 = 5;
      }
      }}}
      b_1308623849[b_1308623849_Idx].stack[parentPHEX60gensym110_1308623889].encodedSize = addInt(b_1308623849[b_1308623849_Idx].stack[parentPHEX60gensym110_1308623889].encodedSize, addInt(pEncodedSizeHEX60gensym110_1308623890, Temporary3));
      }
      
    }
    

  
}

function startMap_1308622970(b_1308622971, b_1308622971_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

    var vHEX60gensym0_1308622985 = {tag: 5, size: 0, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, ext: null};
    if (((b_1308622971[b_1308622971_Idx].pointers).length == 0)) {
    if ((0 < (b_1308622971[b_1308622971_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    b_1308622971[b_1308622971_Idx].pointers.push((b_1308622971[b_1308622971_Idx].stack).length);;
    Temporary1 = vHEX60gensym0_1308622985;
    vHEX60gensym0_1308622985 = genericReset(vHEX60gensym0_1308622985, NTI1308622852);
    b_1308622971[b_1308622971_Idx].stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym0_1308623059 = (Temporary2 = HEX5BHEX5D_1308623042(b_1308622971[b_1308622971_Idx].pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1308622971[b_1308622971_Idx].stack[pHEX60gensym0_1308623059].tag == 4)) {
      var Temporary3 = b_1308622971[b_1308622971_Idx].stack[pHEX60gensym0_1308623059];
      if (ConstSet4[Temporary3.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1308622851)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym0_1308623068 = vHEX60gensym0_1308622985.encodedSize;
      b_1308622971[b_1308622971_Idx].pointers.push((b_1308622971[b_1308622971_Idx].stack).length);;
      b_1308622971[b_1308622971_Idx].stack[pHEX60gensym0_1308623059].encodedSize = addInt(b_1308622971[b_1308622971_Idx].stack[pHEX60gensym0_1308623059].encodedSize, addedHEX60gensym0_1308623068);
      Temporary4 = vHEX60gensym0_1308622985;
      vHEX60gensym0_1308622985 = genericReset(vHEX60gensym0_1308622985, NTI1308622852);
      b_1308622971[b_1308622971_Idx].stack.push(Temporary4);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function startMap_503317480(b_503317482, b_503317482_Idx, key_503317483) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

    if (((b_503317482[b_503317482_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym124_503317497 = (Temporary1 = HEX5BHEX5D_1308623042(b_503317482[b_503317482_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503317482[b_503317482_Idx].stack[pHEX60gensym124_503317497].tag == 5)) {
      var Temporary2 = b_503317482[b_503317482_Idx].stack[pHEX60gensym124_503317497];
      if (ConstSet5[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym124_503317506 = {tag: 9, cstr: key_503317483, encodedSize: Buffer.byteLength(key_503317483), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var vHEX60gensym124_503317516 = {tag: 5, size: 0, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, ext: null};
        if (!(0 <= kHEX60gensym124_503317506.encodedSize)) Temporary3 = false; else {          Temporary3 = (kHEX60gensym124_503317506.encodedSize <= 2147483647);        }      if (!(Temporary3)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym124.encodedSize >= 0 and k`gensym124.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym130_503317531 = (kHEX60gensym124_503317506.encodedSize << 3);
      if ((uHEX60gensym130_503317531 < 128)) {
      Temporary4 = 1;
      }
      else {
      if ((uHEX60gensym130_503317531 < 16384)) {
      Temporary4 = 2;
      }
      else {
      if ((uHEX60gensym130_503317531 < 2097152)) {
      Temporary4 = 3;
      }
      else {
      if ((uHEX60gensym130_503317531 < 268435456)) {
      Temporary4 = 4;
      }
      else {
      Temporary4 = 5;
      }
      }}}
      var addedHEX60gensym124_503317532 = addInt(addInt(kHEX60gensym124_503317506.encodedSize, vHEX60gensym124_503317516.encodedSize), Temporary4);
      Temporary5 = kHEX60gensym124_503317506;
      kHEX60gensym124_503317506 = genericReset(kHEX60gensym124_503317506, NTI1308622852);
      b_503317482[b_503317482_Idx].stack.push(Temporary5);;
      b_503317482[b_503317482_Idx].pointers.push((b_503317482[b_503317482_Idx].stack).length);;
      b_503317482[b_503317482_Idx].stack[pHEX60gensym124_503317497].encodedSize = addInt(b_503317482[b_503317482_Idx].stack[pHEX60gensym124_503317497].encodedSize, addedHEX60gensym124_503317532);
      Temporary6 = vHEX60gensym124_503317516;
      vHEX60gensym124_503317516 = genericReset(vHEX60gensym124_503317516, NTI1308622852);
      b_503317482[b_503317482_Idx].stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function endMap_1308623910(b_1308623911, b_1308623911_Idx) {
      var Temporary1;
        var Temporary2;
      var Temporary3;

    if (((b_1308623911[b_1308623911_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot end svtOBJECT before starting it"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym121_1308623926 = pop_1308623861(b_1308623911[b_1308623911_Idx], "pointers");
      if (!((b_1308623911[b_1308623911_Idx].stack[pHEX60gensym121_1308623926].tag == 5))) {
      raiseException({message: makeNimstrLit("Cannot end svtOBJECT before starting it"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
      if ((0 < (b_1308623911[b_1308623911_Idx].pointers).length)) {
      var parentPHEX60gensym121_1308623942 = (Temporary1 = HEX5BHEX5D_1308623042(b_1308623911[b_1308623911_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      var pEncodedSizeHEX60gensym121_1308623943 = b_1308623911[b_1308623911_Idx].stack[pHEX60gensym121_1308623926].encodedSize;
        if (!(0 <= pEncodedSizeHEX60gensym121_1308623943)) Temporary2 = false; else {          Temporary2 = (pEncodedSizeHEX60gensym121_1308623943 <= 2147483647);        }      if (!(Temporary2)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `pEncodedSize`gensym121 >= 0 and pEncodedSize`gensym121 <= high(int32)` "));
      }
      
      var uHEX60gensym128_1308623958 = (pEncodedSizeHEX60gensym121_1308623943 << 3);
      if ((uHEX60gensym128_1308623958 < 128)) {
      Temporary3 = 1;
      }
      else {
      if ((uHEX60gensym128_1308623958 < 16384)) {
      Temporary3 = 2;
      }
      else {
      if ((uHEX60gensym128_1308623958 < 2097152)) {
      Temporary3 = 3;
      }
      else {
      if ((uHEX60gensym128_1308623958 < 268435456)) {
      Temporary3 = 4;
      }
      else {
      Temporary3 = 5;
      }
      }}}
      b_1308623911[b_1308623911_Idx].stack[parentPHEX60gensym121_1308623942].encodedSize = addInt(b_1308623911[b_1308623911_Idx].stack[parentPHEX60gensym121_1308623942].encodedSize, addInt(pEncodedSizeHEX60gensym121_1308623943, Temporary3));
      }
      
    }
    

  
}

function addNull_1308623663(b_1308623664, b_1308623664_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;

    var vHEX60gensym86_1308623669 = {tag: 10, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
    if (((b_1308623664[b_1308623664_Idx].pointers).length == 0)) {
    if ((0 < (b_1308623664[b_1308623664_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    Temporary1 = vHEX60gensym86_1308623669;
    vHEX60gensym86_1308623669 = genericReset(vHEX60gensym86_1308623669, NTI1308622852);
    b_1308623664[b_1308623664_Idx].stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym86_1308623688 = (Temporary2 = HEX5BHEX5D_1308623042(b_1308623664[b_1308623664_Idx].pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1308623664[b_1308623664_Idx].stack[pHEX60gensym86_1308623688].tag == 4)) {
      var Temporary3 = b_1308623664[b_1308623664_Idx].stack[pHEX60gensym86_1308623688];
      if (ConstSet6[Temporary3.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1308622851)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym86_1308623697 = vHEX60gensym86_1308623669.encodedSize;
        if (!(0 <= vHEX60gensym86_1308623669.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym86_1308623669.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym86.encodedSize >= 0 and v`gensym86.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym93_1308623712 = (vHEX60gensym86_1308623669.encodedSize << 3);
      if ((uHEX60gensym93_1308623712 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym93_1308623712 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym93_1308623712 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym93_1308623712 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym86_1308623697 = addInt(addedHEX60gensym86_1308623697, Temporary5);
      b_1308623664[b_1308623664_Idx].stack[pHEX60gensym86_1308623688].encodedSize = addInt(b_1308623664[b_1308623664_Idx].stack[pHEX60gensym86_1308623688].encodedSize, addedHEX60gensym86_1308623697);
      Temporary6 = vHEX60gensym86_1308623669;
      vHEX60gensym86_1308623669 = genericReset(vHEX60gensym86_1308623669, NTI1308622852);
      b_1308623664[b_1308623664_Idx].stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addNull_503316747(b_503316749, b_503316749_Idx, k_503316750) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;
      var Temporary8;

    if (((b_503316749[b_503316749_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym5_503316764 = (Temporary1 = HEX5BHEX5D_1308623042(b_503316749[b_503316749_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503316749[b_503316749_Idx].stack[pHEX60gensym5_503316764].tag == 5)) {
      var Temporary2 = b_503316749[b_503316749_Idx].stack[pHEX60gensym5_503316764];
      if (ConstSet7[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym5_503316773 = {tag: 9, cstr: k_503316750, encodedSize: Buffer.byteLength(k_503316750), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var vHEX60gensym5_503316775 = {tag: 10, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym5_503316773.encodedSize)) Temporary3 = false; else {          Temporary3 = (kHEX60gensym5_503316773.encodedSize <= 2147483647);        }      if (!(Temporary3)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym5.encodedSize >= 0 and k`gensym5.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym11_503316790 = (kHEX60gensym5_503316773.encodedSize << 3);
      if ((uHEX60gensym11_503316790 < 128)) {
      Temporary4 = 1;
      }
      else {
      if ((uHEX60gensym11_503316790 < 16384)) {
      Temporary4 = 2;
      }
      else {
      if ((uHEX60gensym11_503316790 < 2097152)) {
      Temporary4 = 3;
      }
      else {
      if ((uHEX60gensym11_503316790 < 268435456)) {
      Temporary4 = 4;
      }
      else {
      Temporary4 = 5;
      }
      }}}
      var addedHEX60gensym5_503316791 = addInt(addInt(kHEX60gensym5_503316773.encodedSize, vHEX60gensym5_503316775.encodedSize), Temporary4);
      Temporary5 = kHEX60gensym5_503316773;
      kHEX60gensym5_503316773 = genericReset(kHEX60gensym5_503316773, NTI1308622852);
      b_503316749[b_503316749_Idx].stack.push(Temporary5);;
        if (!(0 <= vHEX60gensym5_503316775.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym5_503316775.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym5.encodedSize >= 0 and v`gensym5.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym15_503316813 = (vHEX60gensym5_503316775.encodedSize << 3);
      if ((uHEX60gensym15_503316813 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym15_503316813 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym15_503316813 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym15_503316813 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym5_503316791 = addInt(addedHEX60gensym5_503316791, Temporary7);
      b_503316749[b_503316749_Idx].stack[pHEX60gensym5_503316764].encodedSize = addInt(b_503316749[b_503316749_Idx].stack[pHEX60gensym5_503316764].encodedSize, addedHEX60gensym5_503316791);
      Temporary8 = vHEX60gensym5_503316775;
      vHEX60gensym5_503316775 = genericReset(vHEX60gensym5_503316775, NTI1308622852);
      b_503316749[b_503316749_Idx].stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addString_503317361(b_503317363, b_503317363_Idx, s_503317364) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;

    var vHEX60gensym109_503317368 = {tag: 9, cstr: s_503317364, encodedSize: Buffer.byteLength(s_503317364), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
    if (((b_503317363[b_503317363_Idx].pointers).length == 0)) {
    if ((0 < (b_503317363[b_503317363_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    Temporary1 = vHEX60gensym109_503317368;
    vHEX60gensym109_503317368 = genericReset(vHEX60gensym109_503317368, NTI1308622852);
    b_503317363[b_503317363_Idx].stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym109_503317387 = (Temporary2 = HEX5BHEX5D_1308623042(b_503317363[b_503317363_Idx].pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_503317363[b_503317363_Idx].stack[pHEX60gensym109_503317387].tag == 4)) {
      var Temporary3 = b_503317363[b_503317363_Idx].stack[pHEX60gensym109_503317387];
      if (ConstSet8[Temporary3.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1308622851)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym109_503317396 = vHEX60gensym109_503317368.encodedSize;
        if (!(0 <= vHEX60gensym109_503317368.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym109_503317368.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym109.encodedSize >= 0 and v`gensym109.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym116_503317411 = (vHEX60gensym109_503317368.encodedSize << 3);
      if ((uHEX60gensym116_503317411 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym116_503317411 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym116_503317411 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym116_503317411 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym109_503317396 = addInt(addedHEX60gensym109_503317396, Temporary5);
      b_503317363[b_503317363_Idx].stack[pHEX60gensym109_503317387].encodedSize = addInt(b_503317363[b_503317363_Idx].stack[pHEX60gensym109_503317387].encodedSize, addedHEX60gensym109_503317396);
      Temporary6 = vHEX60gensym109_503317368;
      vHEX60gensym109_503317368 = genericReset(vHEX60gensym109_503317368, NTI1308622852);
      b_503317363[b_503317363_Idx].stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addString_503317080(b_503317083, b_503317083_Idx, k_503317084, s_503317085) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;
      var Temporary8;

    if (((b_503317083[b_503317083_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym66_503317099 = (Temporary1 = HEX5BHEX5D_1308623042(b_503317083[b_503317083_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503317083[b_503317083_Idx].stack[pHEX60gensym66_503317099].tag == 5)) {
      var Temporary2 = b_503317083[b_503317083_Idx].stack[pHEX60gensym66_503317099];
      if (ConstSet9[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym66_503317108 = {tag: 9, cstr: k_503317084, encodedSize: Buffer.byteLength(k_503317084), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var vHEX60gensym66_503317109 = {tag: 9, cstr: s_503317085, encodedSize: Buffer.byteLength(s_503317085), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym66_503317108.encodedSize)) Temporary3 = false; else {          Temporary3 = (kHEX60gensym66_503317108.encodedSize <= 2147483647);        }      if (!(Temporary3)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym66.encodedSize >= 0 and k`gensym66.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym72_503317124 = (kHEX60gensym66_503317108.encodedSize << 3);
      if ((uHEX60gensym72_503317124 < 128)) {
      Temporary4 = 1;
      }
      else {
      if ((uHEX60gensym72_503317124 < 16384)) {
      Temporary4 = 2;
      }
      else {
      if ((uHEX60gensym72_503317124 < 2097152)) {
      Temporary4 = 3;
      }
      else {
      if ((uHEX60gensym72_503317124 < 268435456)) {
      Temporary4 = 4;
      }
      else {
      Temporary4 = 5;
      }
      }}}
      var addedHEX60gensym66_503317125 = addInt(addInt(kHEX60gensym66_503317108.encodedSize, vHEX60gensym66_503317109.encodedSize), Temporary4);
      Temporary5 = kHEX60gensym66_503317108;
      kHEX60gensym66_503317108 = genericReset(kHEX60gensym66_503317108, NTI1308622852);
      b_503317083[b_503317083_Idx].stack.push(Temporary5);;
        if (!(0 <= vHEX60gensym66_503317109.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym66_503317109.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym66.encodedSize >= 0 and v`gensym66.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym76_503317147 = (vHEX60gensym66_503317109.encodedSize << 3);
      if ((uHEX60gensym76_503317147 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym76_503317147 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym76_503317147 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym76_503317147 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym66_503317125 = addInt(addedHEX60gensym66_503317125, Temporary7);
      b_503317083[b_503317083_Idx].stack[pHEX60gensym66_503317099].encodedSize = addInt(b_503317083[b_503317083_Idx].stack[pHEX60gensym66_503317099].encodedSize, addedHEX60gensym66_503317125);
      Temporary8 = vHEX60gensym66_503317109;
      vHEX60gensym66_503317109 = genericReset(vHEX60gensym66_503317109, NTI1308622852);
      b_503317083[b_503317083_Idx].stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addInt_1308623225(b_1308623226, b_1308623226_Idx, i_1308623227) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;

    var vHEX60gensym16_1308623231 = {tag: 2, i: i_1308623227, encodedSize: 4, str: [], cstr: null, buf: null, d: 0.0, b: 0, ext: null, size: 0};
    if (((b_1308623226[b_1308623226_Idx].pointers).length == 0)) {
    if ((0 < (b_1308623226[b_1308623226_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    Temporary1 = vHEX60gensym16_1308623231;
    vHEX60gensym16_1308623231 = genericReset(vHEX60gensym16_1308623231, NTI1308622852);
    b_1308623226[b_1308623226_Idx].stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym16_1308623250 = (Temporary2 = HEX5BHEX5D_1308623042(b_1308623226[b_1308623226_Idx].pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1308623226[b_1308623226_Idx].stack[pHEX60gensym16_1308623250].tag == 4)) {
      var Temporary3 = b_1308623226[b_1308623226_Idx].stack[pHEX60gensym16_1308623250];
      if (ConstSet10[Temporary3.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1308622851)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym16_1308623259 = vHEX60gensym16_1308623231.encodedSize;
        if (!(0 <= vHEX60gensym16_1308623231.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym16_1308623231.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym16.encodedSize >= 0 and v`gensym16.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym23_1308623274 = (vHEX60gensym16_1308623231.encodedSize << 3);
      if ((uHEX60gensym23_1308623274 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym23_1308623274 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym23_1308623274 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym23_1308623274 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym16_1308623259 = addInt(addedHEX60gensym16_1308623259, Temporary5);
      b_1308623226[b_1308623226_Idx].stack[pHEX60gensym16_1308623250].encodedSize = addInt(b_1308623226[b_1308623226_Idx].stack[pHEX60gensym16_1308623250].encodedSize, addedHEX60gensym16_1308623259);
      Temporary6 = vHEX60gensym16_1308623231;
      vHEX60gensym16_1308623231 = genericReset(vHEX60gensym16_1308623231, NTI1308622852);
      b_1308623226[b_1308623226_Idx].stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function toInt_503316535(n_503316536) {
  var result_503316537 = 0;

    result_503316537 = n_503316536;

  return result_503316537;

}

function addInt_503316914(b_503316916, b_503316916_Idx, k_503316917, i_503316918) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;
      var Temporary8;

    if (((b_503316916[b_503316916_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym36_503316932 = (Temporary1 = HEX5BHEX5D_1308623042(b_503316916[b_503316916_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503316916[b_503316916_Idx].stack[pHEX60gensym36_503316932].tag == 5)) {
      var Temporary2 = b_503316916[b_503316916_Idx].stack[pHEX60gensym36_503316932];
      if (ConstSet11[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym36_503316941 = {tag: 9, cstr: k_503316917, encodedSize: Buffer.byteLength(k_503316917), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var vHEX60gensym36_503316942 = {tag: 2, i: i_503316918, encodedSize: 4, str: [], cstr: null, buf: null, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym36_503316941.encodedSize)) Temporary3 = false; else {          Temporary3 = (kHEX60gensym36_503316941.encodedSize <= 2147483647);        }      if (!(Temporary3)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym36.encodedSize >= 0 and k`gensym36.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym42_503316957 = (kHEX60gensym36_503316941.encodedSize << 3);
      if ((uHEX60gensym42_503316957 < 128)) {
      Temporary4 = 1;
      }
      else {
      if ((uHEX60gensym42_503316957 < 16384)) {
      Temporary4 = 2;
      }
      else {
      if ((uHEX60gensym42_503316957 < 2097152)) {
      Temporary4 = 3;
      }
      else {
      if ((uHEX60gensym42_503316957 < 268435456)) {
      Temporary4 = 4;
      }
      else {
      Temporary4 = 5;
      }
      }}}
      var addedHEX60gensym36_503316958 = addInt(addInt(kHEX60gensym36_503316941.encodedSize, vHEX60gensym36_503316942.encodedSize), Temporary4);
      Temporary5 = kHEX60gensym36_503316941;
      kHEX60gensym36_503316941 = genericReset(kHEX60gensym36_503316941, NTI1308622852);
      b_503316916[b_503316916_Idx].stack.push(Temporary5);;
        if (!(0 <= vHEX60gensym36_503316942.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym36_503316942.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym36.encodedSize >= 0 and v`gensym36.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym46_503316980 = (vHEX60gensym36_503316942.encodedSize << 3);
      if ((uHEX60gensym46_503316980 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym46_503316980 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym46_503316980 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym46_503316980 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym36_503316958 = addInt(addedHEX60gensym36_503316958, Temporary7);
      b_503316916[b_503316916_Idx].stack[pHEX60gensym36_503316932].encodedSize = addInt(b_503316916[b_503316916_Idx].stack[pHEX60gensym36_503316932].encodedSize, addedHEX60gensym36_503316958);
      Temporary8 = vHEX60gensym36_503316942;
      vHEX60gensym36_503316942 = genericReset(vHEX60gensym36_503316942, NTI1308622852);
      b_503316916[b_503316916_Idx].stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addDouble_1308623300(b_1308623301, b_1308623301_Idx, d_1308623302) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;

    var vHEX60gensym28_1308623306 = {tag: 3, d: d_1308623302, encodedSize: 8, str: [], cstr: null, buf: null, i: 0, b: 0, ext: null, size: 0};
    if (((b_1308623301[b_1308623301_Idx].pointers).length == 0)) {
    if ((0 < (b_1308623301[b_1308623301_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    Temporary1 = vHEX60gensym28_1308623306;
    vHEX60gensym28_1308623306 = genericReset(vHEX60gensym28_1308623306, NTI1308622852);
    b_1308623301[b_1308623301_Idx].stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym28_1308623325 = (Temporary2 = HEX5BHEX5D_1308623042(b_1308623301[b_1308623301_Idx].pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1308623301[b_1308623301_Idx].stack[pHEX60gensym28_1308623325].tag == 4)) {
      var Temporary3 = b_1308623301[b_1308623301_Idx].stack[pHEX60gensym28_1308623325];
      if (ConstSet12[Temporary3.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1308622851)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym28_1308623334 = vHEX60gensym28_1308623306.encodedSize;
        if (!(0 <= vHEX60gensym28_1308623306.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym28_1308623306.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym28.encodedSize >= 0 and v`gensym28.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym35_1308623349 = (vHEX60gensym28_1308623306.encodedSize << 3);
      if ((uHEX60gensym35_1308623349 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym35_1308623349 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym35_1308623349 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym35_1308623349 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym28_1308623334 = addInt(addedHEX60gensym28_1308623334, Temporary5);
      b_1308623301[b_1308623301_Idx].stack[pHEX60gensym28_1308623325].encodedSize = addInt(b_1308623301[b_1308623301_Idx].stack[pHEX60gensym28_1308623325].encodedSize, addedHEX60gensym28_1308623334);
      Temporary6 = vHEX60gensym28_1308623306;
      vHEX60gensym28_1308623306 = genericReset(vHEX60gensym28_1308623306, NTI1308622852);
      b_1308623301[b_1308623301_Idx].stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function toDouble_503316538(n_503316539) {
  var result_503316540 = 0.0;

    result_503316540 = n_503316539;

  return result_503316540;

}

function addDouble_503316997(b_503316999, b_503316999_Idx, k_503317000, d_503317001) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;
      var Temporary8;

    if (((b_503316999[b_503316999_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym51_503317015 = (Temporary1 = HEX5BHEX5D_1308623042(b_503316999[b_503316999_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503316999[b_503316999_Idx].stack[pHEX60gensym51_503317015].tag == 5)) {
      var Temporary2 = b_503316999[b_503316999_Idx].stack[pHEX60gensym51_503317015];
      if (ConstSet13[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym51_503317024 = {tag: 9, cstr: k_503317000, encodedSize: Buffer.byteLength(k_503317000), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var vHEX60gensym51_503317025 = {tag: 3, d: d_503317001, encodedSize: 8, str: [], cstr: null, buf: null, i: 0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym51_503317024.encodedSize)) Temporary3 = false; else {          Temporary3 = (kHEX60gensym51_503317024.encodedSize <= 2147483647);        }      if (!(Temporary3)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym51.encodedSize >= 0 and k`gensym51.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym57_503317040 = (kHEX60gensym51_503317024.encodedSize << 3);
      if ((uHEX60gensym57_503317040 < 128)) {
      Temporary4 = 1;
      }
      else {
      if ((uHEX60gensym57_503317040 < 16384)) {
      Temporary4 = 2;
      }
      else {
      if ((uHEX60gensym57_503317040 < 2097152)) {
      Temporary4 = 3;
      }
      else {
      if ((uHEX60gensym57_503317040 < 268435456)) {
      Temporary4 = 4;
      }
      else {
      Temporary4 = 5;
      }
      }}}
      var addedHEX60gensym51_503317041 = addInt(addInt(kHEX60gensym51_503317024.encodedSize, vHEX60gensym51_503317025.encodedSize), Temporary4);
      Temporary5 = kHEX60gensym51_503317024;
      kHEX60gensym51_503317024 = genericReset(kHEX60gensym51_503317024, NTI1308622852);
      b_503316999[b_503316999_Idx].stack.push(Temporary5);;
        if (!(0 <= vHEX60gensym51_503317025.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym51_503317025.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym51.encodedSize >= 0 and v`gensym51.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym61_503317063 = (vHEX60gensym51_503317025.encodedSize << 3);
      if ((uHEX60gensym61_503317063 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym61_503317063 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym61_503317063 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym61_503317063 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym51_503317041 = addInt(addedHEX60gensym51_503317041, Temporary7);
      b_503316999[b_503316999_Idx].stack[pHEX60gensym51_503317015].encodedSize = addInt(b_503316999[b_503316999_Idx].stack[pHEX60gensym51_503317015].encodedSize, addedHEX60gensym51_503317041);
      Temporary8 = vHEX60gensym51_503317025;
      vHEX60gensym51_503317025 = genericReset(vHEX60gensym51_503317025, NTI1308622852);
      b_503316999[b_503316999_Idx].stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addBool_1308623587(b_1308623588, b_1308623588_Idx, v_1308623589) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
    var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
      var Temporary10;
      var Temporary11;

    if (v_1308623589) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
      if (v_1308623589) {
      Temporary3 = 1;
      }
      else {
      Temporary3 = 0;
      }
      
    if ((Temporary3 <= 255)) {
    Temporary2 = 1;
    }
    else {
      if (v_1308623589) {
      Temporary4 = 1;
      }
      else {
      Temporary4 = 0;
      }
      
    if ((Temporary4 <= 65535)) {
    Temporary2 = 2;
    }
    else {
      if (v_1308623589) {
      Temporary5 = 1;
      }
      else {
      Temporary5 = 0;
      }
      
    if ((Temporary5 <= 16777215)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = 4;
    }
    }}
    var vHEX60gensym73_1308623594 = {tag: 6, b: Temporary1, encodedSize: Temporary2, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
    if (((b_1308623588[b_1308623588_Idx].pointers).length == 0)) {
    if ((0 < (b_1308623588[b_1308623588_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    Temporary6 = vHEX60gensym73_1308623594;
    vHEX60gensym73_1308623594 = genericReset(vHEX60gensym73_1308623594, NTI1308622852);
    b_1308623588[b_1308623588_Idx].stack.push(Temporary6);;
    }
    else {
      var pHEX60gensym73_1308623613 = (Temporary7 = HEX5BHEX5D_1308623042(b_1308623588[b_1308623588_Idx].pointers, 1), Temporary7)[0][Temporary7[1]];
      if ((b_1308623588[b_1308623588_Idx].stack[pHEX60gensym73_1308623613].tag == 4)) {
      var Temporary8 = b_1308623588[b_1308623588_Idx].stack[pHEX60gensym73_1308623613];
      if (ConstSet14[Temporary8.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary8.tag, NTI1308622851)); }
      Temporary8.size = addInt(Temporary8.size, 1);
      var addedHEX60gensym73_1308623622 = vHEX60gensym73_1308623594.encodedSize;
        if (!(0 <= vHEX60gensym73_1308623594.encodedSize)) Temporary9 = false; else {          Temporary9 = (vHEX60gensym73_1308623594.encodedSize <= 2147483647);        }      if (!(Temporary9)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym73.encodedSize >= 0 and v`gensym73.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym81_1308623637 = (vHEX60gensym73_1308623594.encodedSize << 3);
      if ((uHEX60gensym81_1308623637 < 128)) {
      Temporary10 = 1;
      }
      else {
      if ((uHEX60gensym81_1308623637 < 16384)) {
      Temporary10 = 2;
      }
      else {
      if ((uHEX60gensym81_1308623637 < 2097152)) {
      Temporary10 = 3;
      }
      else {
      if ((uHEX60gensym81_1308623637 < 268435456)) {
      Temporary10 = 4;
      }
      else {
      Temporary10 = 5;
      }
      }}}
      addedHEX60gensym73_1308623622 = addInt(addedHEX60gensym73_1308623622, Temporary10);
      b_1308623588[b_1308623588_Idx].stack[pHEX60gensym73_1308623613].encodedSize = addInt(b_1308623588[b_1308623588_Idx].stack[pHEX60gensym73_1308623613].encodedSize, addedHEX60gensym73_1308623622);
      Temporary11 = vHEX60gensym73_1308623594;
      vHEX60gensym73_1308623594 = genericReset(vHEX60gensym73_1308623594, NTI1308622852);
      b_1308623588[b_1308623588_Idx].stack.push(Temporary11);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function toBool_503316544(n_503316545) {
  var result_503316546 = false;

    result_503316546 = n_503316545;

  return result_503316546;

}

function addBool_503316830(b_503316832, b_503316832_Idx, k_503316833, v_503316834) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
      var Temporary10;
        var Temporary11;
      var Temporary12;
      var Temporary13;

    if (((b_503316832[b_503316832_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym20_503316848 = (Temporary1 = HEX5BHEX5D_1308623042(b_503316832[b_503316832_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503316832[b_503316832_Idx].stack[pHEX60gensym20_503316848].tag == 5)) {
      var Temporary2 = b_503316832[b_503316832_Idx].stack[pHEX60gensym20_503316848];
      if (ConstSet15[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym20_503316857 = {tag: 9, cstr: k_503316833, encodedSize: Buffer.byteLength(k_503316833), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      if (v_503316834) {
      Temporary3 = 1;
      }
      else {
      Temporary3 = 0;
      }
      
        if (v_503316834) {
        Temporary5 = 1;
        }
        else {
        Temporary5 = 0;
        }
        
      if ((Temporary5 <= 255)) {
      Temporary4 = 1;
      }
      else {
        if (v_503316834) {
        Temporary6 = 1;
        }
        else {
        Temporary6 = 0;
        }
        
      if ((Temporary6 <= 65535)) {
      Temporary4 = 2;
      }
      else {
        if (v_503316834) {
        Temporary7 = 1;
        }
        else {
        Temporary7 = 0;
        }
        
      if ((Temporary7 <= 16777215)) {
      Temporary4 = 3;
      }
      else {
      Temporary4 = 4;
      }
      }}
      var vHEX60gensym20_503316859 = {tag: 6, b: Temporary3, encodedSize: Temporary4, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym20_503316857.encodedSize)) Temporary8 = false; else {          Temporary8 = (kHEX60gensym20_503316857.encodedSize <= 2147483647);        }      if (!(Temporary8)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym20.encodedSize >= 0 and k`gensym20.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym27_503316874 = (kHEX60gensym20_503316857.encodedSize << 3);
      if ((uHEX60gensym27_503316874 < 128)) {
      Temporary9 = 1;
      }
      else {
      if ((uHEX60gensym27_503316874 < 16384)) {
      Temporary9 = 2;
      }
      else {
      if ((uHEX60gensym27_503316874 < 2097152)) {
      Temporary9 = 3;
      }
      else {
      if ((uHEX60gensym27_503316874 < 268435456)) {
      Temporary9 = 4;
      }
      else {
      Temporary9 = 5;
      }
      }}}
      var addedHEX60gensym20_503316875 = addInt(addInt(kHEX60gensym20_503316857.encodedSize, vHEX60gensym20_503316859.encodedSize), Temporary9);
      Temporary10 = kHEX60gensym20_503316857;
      kHEX60gensym20_503316857 = genericReset(kHEX60gensym20_503316857, NTI1308622852);
      b_503316832[b_503316832_Idx].stack.push(Temporary10);;
        if (!(0 <= vHEX60gensym20_503316859.encodedSize)) Temporary11 = false; else {          Temporary11 = (vHEX60gensym20_503316859.encodedSize <= 2147483647);        }      if (!(Temporary11)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym20.encodedSize >= 0 and v`gensym20.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym31_503316897 = (vHEX60gensym20_503316859.encodedSize << 3);
      if ((uHEX60gensym31_503316897 < 128)) {
      Temporary12 = 1;
      }
      else {
      if ((uHEX60gensym31_503316897 < 16384)) {
      Temporary12 = 2;
      }
      else {
      if ((uHEX60gensym31_503316897 < 2097152)) {
      Temporary12 = 3;
      }
      else {
      if ((uHEX60gensym31_503316897 < 268435456)) {
      Temporary12 = 4;
      }
      else {
      Temporary12 = 5;
      }
      }}}
      addedHEX60gensym20_503316875 = addInt(addedHEX60gensym20_503316875, Temporary12);
      b_503316832[b_503316832_Idx].stack[pHEX60gensym20_503316848].encodedSize = addInt(b_503316832[b_503316832_Idx].stack[pHEX60gensym20_503316848].encodedSize, addedHEX60gensym20_503316875);
      Temporary13 = vHEX60gensym20_503316859;
      vHEX60gensym20_503316859 = genericReset(vHEX60gensym20_503316859, NTI1308622852);
      b_503316832[b_503316832_Idx].stack.push(Temporary13);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addBuffer_1308623379(b_1308623380, b_1308623380_Idx, buff_1308623381) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;

    var vHEX60gensym40_1308623385 = {tag: 1, buf: buff_1308623381, encodedSize: buff_1308623381.length, str: [], cstr: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
    if (((b_1308623380[b_1308623380_Idx].pointers).length == 0)) {
    if ((0 < (b_1308623380[b_1308623380_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    Temporary1 = vHEX60gensym40_1308623385;
    vHEX60gensym40_1308623385 = genericReset(vHEX60gensym40_1308623385, NTI1308622852);
    b_1308623380[b_1308623380_Idx].stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym40_1308623404 = (Temporary2 = HEX5BHEX5D_1308623042(b_1308623380[b_1308623380_Idx].pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1308623380[b_1308623380_Idx].stack[pHEX60gensym40_1308623404].tag == 4)) {
      var Temporary3 = b_1308623380[b_1308623380_Idx].stack[pHEX60gensym40_1308623404];
      if (ConstSet16[Temporary3.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1308622851)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym40_1308623413 = vHEX60gensym40_1308623385.encodedSize;
        if (!(0 <= vHEX60gensym40_1308623385.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym40_1308623385.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym40.encodedSize >= 0 and v`gensym40.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym47_1308623428 = (vHEX60gensym40_1308623385.encodedSize << 3);
      if ((uHEX60gensym47_1308623428 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym47_1308623428 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym47_1308623428 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym47_1308623428 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym40_1308623413 = addInt(addedHEX60gensym40_1308623413, Temporary5);
      b_1308623380[b_1308623380_Idx].stack[pHEX60gensym40_1308623404].encodedSize = addInt(b_1308623380[b_1308623380_Idx].stack[pHEX60gensym40_1308623404].encodedSize, addedHEX60gensym40_1308623413);
      Temporary6 = vHEX60gensym40_1308623385;
      vHEX60gensym40_1308623385 = genericReset(vHEX60gensym40_1308623385, NTI1308622852);
      b_1308623380[b_1308623380_Idx].stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function toBuffer_503316547(n_503316548) {
  var result_503316549 = null;

    result_503316549 = n_503316548;

  return result_503316549;

}

function addBuffer_503317164(b_503317166, b_503317166_Idx, k_503317167, buf_503317168) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;
      var Temporary8;

    if (((b_503317166[b_503317166_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym81_503317182 = (Temporary1 = HEX5BHEX5D_1308623042(b_503317166[b_503317166_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503317166[b_503317166_Idx].stack[pHEX60gensym81_503317182].tag == 5)) {
      var Temporary2 = b_503317166[b_503317166_Idx].stack[pHEX60gensym81_503317182];
      if (ConstSet17[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym81_503317191 = {tag: 9, cstr: k_503317167, encodedSize: Buffer.byteLength(k_503317167), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var vHEX60gensym81_503317192 = {tag: 1, buf: buf_503317168, encodedSize: buf_503317168.length, str: [], cstr: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym81_503317191.encodedSize)) Temporary3 = false; else {          Temporary3 = (kHEX60gensym81_503317191.encodedSize <= 2147483647);        }      if (!(Temporary3)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym81.encodedSize >= 0 and k`gensym81.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym87_503317207 = (kHEX60gensym81_503317191.encodedSize << 3);
      if ((uHEX60gensym87_503317207 < 128)) {
      Temporary4 = 1;
      }
      else {
      if ((uHEX60gensym87_503317207 < 16384)) {
      Temporary4 = 2;
      }
      else {
      if ((uHEX60gensym87_503317207 < 2097152)) {
      Temporary4 = 3;
      }
      else {
      if ((uHEX60gensym87_503317207 < 268435456)) {
      Temporary4 = 4;
      }
      else {
      Temporary4 = 5;
      }
      }}}
      var addedHEX60gensym81_503317208 = addInt(addInt(kHEX60gensym81_503317191.encodedSize, vHEX60gensym81_503317192.encodedSize), Temporary4);
      Temporary5 = kHEX60gensym81_503317191;
      kHEX60gensym81_503317191 = genericReset(kHEX60gensym81_503317191, NTI1308622852);
      b_503317166[b_503317166_Idx].stack.push(Temporary5);;
        if (!(0 <= vHEX60gensym81_503317192.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym81_503317192.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym81.encodedSize >= 0 and v`gensym81.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym91_503317230 = (vHEX60gensym81_503317192.encodedSize << 3);
      if ((uHEX60gensym91_503317230 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym91_503317230 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym91_503317230 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym91_503317230 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym81_503317208 = addInt(addedHEX60gensym81_503317208, Temporary7);
      b_503317166[b_503317166_Idx].stack[pHEX60gensym81_503317182].encodedSize = addInt(b_503317166[b_503317166_Idx].stack[pHEX60gensym81_503317182].encodedSize, addedHEX60gensym81_503317208);
      Temporary8 = vHEX60gensym81_503317192;
      vHEX60gensym81_503317192 = genericReset(vHEX60gensym81_503317192, NTI1308622852);
      b_503317166[b_503317166_Idx].stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addExtended_1308623729(b_1308623730, b_1308623730_Idx, ext_1308623731) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;

    var vHEX60gensym98_1308623736 = {tag: 7, ext: ext_1308623731, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, size: 0};
    if (((b_1308623730[b_1308623730_Idx].pointers).length == 0)) {
    if ((0 < (b_1308623730[b_1308623730_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    Temporary1 = vHEX60gensym98_1308623736;
    vHEX60gensym98_1308623736 = genericReset(vHEX60gensym98_1308623736, NTI1308622852);
    b_1308623730[b_1308623730_Idx].stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym98_1308623755 = (Temporary2 = HEX5BHEX5D_1308623042(b_1308623730[b_1308623730_Idx].pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1308623730[b_1308623730_Idx].stack[pHEX60gensym98_1308623755].tag == 4)) {
      var Temporary3 = b_1308623730[b_1308623730_Idx].stack[pHEX60gensym98_1308623755];
      if (ConstSet18[Temporary3.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1308622851)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym98_1308623764 = vHEX60gensym98_1308623736.encodedSize;
        if (!(0 <= vHEX60gensym98_1308623736.encodedSize)) Temporary4 = false; else {          Temporary4 = (vHEX60gensym98_1308623736.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym98.encodedSize >= 0 and v`gensym98.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym105_1308623779 = (vHEX60gensym98_1308623736.encodedSize << 3);
      if ((uHEX60gensym105_1308623779 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym105_1308623779 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym105_1308623779 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym105_1308623779 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      addedHEX60gensym98_1308623764 = addInt(addedHEX60gensym98_1308623764, Temporary5);
      b_1308623730[b_1308623730_Idx].stack[pHEX60gensym98_1308623755].encodedSize = addInt(b_1308623730[b_1308623730_Idx].stack[pHEX60gensym98_1308623755].encodedSize, addedHEX60gensym98_1308623764);
      Temporary6 = vHEX60gensym98_1308623736;
      vHEX60gensym98_1308623736 = genericReset(vHEX60gensym98_1308623736, NTI1308622852);
      b_1308623730[b_1308623730_Idx].stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addExtended_503319563(b_503319565, b_503319565_Idx, k_503319566, ext_503319567) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;
      var Temporary8;

    if (((b_503319565[b_503319565_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym368_503319581 = (Temporary1 = HEX5BHEX5D_1308623042(b_503319565[b_503319565_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503319565[b_503319565_Idx].stack[pHEX60gensym368_503319581].tag == 5)) {
      var Temporary2 = b_503319565[b_503319565_Idx].stack[pHEX60gensym368_503319581];
      if (ConstSet19[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym368_503319590 = {tag: 9, cstr: k_503319566, encodedSize: Buffer.byteLength(k_503319566), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var vHEX60gensym368_503319592 = {tag: 7, ext: ext_503319567, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, size: 0};
        if (!(0 <= kHEX60gensym368_503319590.encodedSize)) Temporary3 = false; else {          Temporary3 = (kHEX60gensym368_503319590.encodedSize <= 2147483647);        }      if (!(Temporary3)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym368.encodedSize >= 0 and k`gensym368.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym374_503319607 = (kHEX60gensym368_503319590.encodedSize << 3);
      if ((uHEX60gensym374_503319607 < 128)) {
      Temporary4 = 1;
      }
      else {
      if ((uHEX60gensym374_503319607 < 16384)) {
      Temporary4 = 2;
      }
      else {
      if ((uHEX60gensym374_503319607 < 2097152)) {
      Temporary4 = 3;
      }
      else {
      if ((uHEX60gensym374_503319607 < 268435456)) {
      Temporary4 = 4;
      }
      else {
      Temporary4 = 5;
      }
      }}}
      var addedHEX60gensym368_503319608 = addInt(addInt(kHEX60gensym368_503319590.encodedSize, vHEX60gensym368_503319592.encodedSize), Temporary4);
      Temporary5 = kHEX60gensym368_503319590;
      kHEX60gensym368_503319590 = genericReset(kHEX60gensym368_503319590, NTI1308622852);
      b_503319565[b_503319565_Idx].stack.push(Temporary5);;
        if (!(0 <= vHEX60gensym368_503319592.encodedSize)) Temporary6 = false; else {          Temporary6 = (vHEX60gensym368_503319592.encodedSize <= 2147483647);        }      if (!(Temporary6)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym368.encodedSize >= 0 and v`gensym368.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym378_503319630 = (vHEX60gensym368_503319592.encodedSize << 3);
      if ((uHEX60gensym378_503319630 < 128)) {
      Temporary7 = 1;
      }
      else {
      if ((uHEX60gensym378_503319630 < 16384)) {
      Temporary7 = 2;
      }
      else {
      if ((uHEX60gensym378_503319630 < 2097152)) {
      Temporary7 = 3;
      }
      else {
      if ((uHEX60gensym378_503319630 < 268435456)) {
      Temporary7 = 4;
      }
      else {
      Temporary7 = 5;
      }
      }}}
      addedHEX60gensym368_503319608 = addInt(addedHEX60gensym368_503319608, Temporary7);
      b_503319565[b_503319565_Idx].stack[pHEX60gensym368_503319581].encodedSize = addInt(b_503319565[b_503319565_Idx].stack[pHEX60gensym368_503319581].encodedSize, addedHEX60gensym368_503319608);
      Temporary8 = vHEX60gensym368_503319592;
      vHEX60gensym368_503319592 = genericReset(vHEX60gensym368_503319592, NTI1308622852);
      b_503319565[b_503319565_Idx].stack.push(Temporary8);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function encodingSize_1308623998(b_1308623999, b_1308623999_Idx) {
      var Temporary1;
    var Temporary2;

  var result_1308624000 = 0;

    if (((b_1308623999[b_1308623999_Idx].stack).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot get encoding size before adding any value"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    if ((0 < (b_1308623999[b_1308623999_Idx].pointers).length)) {
    raiseException({message: makeNimstrLit("Cannot get encoding size before ending all arrays and maps"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
      if (!(0 <= b_1308623999[b_1308623999_Idx].stack[0].encodedSize)) Temporary1 = false; else {        Temporary1 = (b_1308623999[b_1308623999_Idx].stack[0].encodedSize <= 2147483647);      }    if (!(Temporary1)) {
    failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `b.stack[0].encodedSize >= 0 and b.stack[0].encodedSize <= high(int32)` "));
    }
    
    var uHEX60gensym135_1308624023 = (b_1308623999[b_1308623999_Idx].stack[0].encodedSize << 3);
    if ((uHEX60gensym135_1308624023 < 128)) {
    Temporary2 = 1;
    }
    else {
    if ((uHEX60gensym135_1308624023 < 16384)) {
    Temporary2 = 2;
    }
    else {
    if ((uHEX60gensym135_1308624023 < 2097152)) {
    Temporary2 = 3;
    }
    else {
    if ((uHEX60gensym135_1308624023 < 268435456)) {
    Temporary2 = 4;
    }
    else {
    Temporary2 = 5;
    }
    }}}
    result_1308624000 = addInt(b_1308623999[b_1308623999_Idx].stack[0].encodedSize, Temporary2);

  return result_1308624000;

}

function writeVaruint32_1308624140(buf_1308624142, buf_1308624142_Idx, v_1308624143, p_1308624144, p_1308624144_Idx) {
    if ((v_1308624143 < 128)) {
    buf_1308624142[buf_1308624142_Idx][p_1308624144[p_1308624144_Idx]] = v_1308624143;
    p_1308624144[p_1308624144_Idx] += 1;
    }
    else {
    if ((v_1308624143 < 16384)) {
    buf_1308624142[buf_1308624142_Idx][p_1308624144[p_1308624144_Idx]] = (v_1308624143 | 128);
    buf_1308624142[buf_1308624142_Idx][(p_1308624144[p_1308624144_Idx] + 1)] = (v_1308624143 >>> 7);
    p_1308624144[p_1308624144_Idx] += 2;
    }
    else {
    if ((v_1308624143 < 2097152)) {
    buf_1308624142[buf_1308624142_Idx][p_1308624144[p_1308624144_Idx]] = (v_1308624143 | 128);
    buf_1308624142[buf_1308624142_Idx][(p_1308624144[p_1308624144_Idx] + 1)] = ((v_1308624143 >>> 7) | 128);
    buf_1308624142[buf_1308624142_Idx][(p_1308624144[p_1308624144_Idx] + 2)] = (v_1308624143 >>> 14);
    p_1308624144[p_1308624144_Idx] += 3;
    }
    else {
    if ((v_1308624143 < 268435456)) {
    buf_1308624142[buf_1308624142_Idx][p_1308624144[p_1308624144_Idx]] = (v_1308624143 | 128);
    buf_1308624142[buf_1308624142_Idx][(p_1308624144[p_1308624144_Idx] + 1)] = ((v_1308624143 >>> 7) | 128);
    buf_1308624142[buf_1308624142_Idx][(p_1308624144[p_1308624144_Idx] + 2)] = ((v_1308624143 >>> 14) | 128);
    buf_1308624142[buf_1308624142_Idx][(p_1308624144[p_1308624144_Idx] + 3)] = (v_1308624143 >>> 21);
    p_1308624144[p_1308624144_Idx] += 4;
    }
    else {
      buf_1308624142[buf_1308624142_Idx][p_1308624144[p_1308624144_Idx]] = (v_1308624143 | 128);
      buf_1308624142[buf_1308624142_Idx][(p_1308624144[p_1308624144_Idx] + 1)] = ((v_1308624143 >>> 7) | 128);
      buf_1308624142[buf_1308624142_Idx][(p_1308624144[p_1308624144_Idx] + 2)] = ((v_1308624143 >>> 14) | 128);
      buf_1308624142[buf_1308624142_Idx][(p_1308624144[p_1308624144_Idx] + 3)] = ((v_1308624143 >>> 21) | 128);
      buf_1308624142[buf_1308624142_Idx][(p_1308624144[p_1308624144_Idx] + 4)] = (v_1308624143 >>> 28);
      p_1308624144[p_1308624144_Idx] += 5;
    }
    }}}

  
}

function finish_1308624047(b_1308624049, b_1308624049_Idx, buffer_1308624050, buffer_1308624050_Idx) {
              var Temporary4;
              var Temporary5;
              var Temporary6;
                var Temporary7;
                var Temporary8;
                  var Temporary9;
                var Temporary10;
                  var Temporary11;
                var Temporary12;
                  var Temporary13;
                var Temporary14;
                var Temporary15;
                var Temporary16;
                  var Temporary17;
                var Temporary18;
                var Temporary19;
                  var Temporary20;
                  var Temporary21;
                  var Temporary22;
                  var Temporary23;
                  var Temporary24;
                  var Temporary25;

    var p_1308624051 = [0];
    Label1: do {
      var sv_1308624072 = ({encodedSize: 0, tag: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0});
      var i_503322482 = 0;
      var L_503322483 = (b_1308624049[b_1308624049_Idx].stack).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_503322482 < L_503322483)) break Label3;
            sv_1308624072 = b_1308624049[b_1308624049_Idx].stack[i_503322482];
            if ((sv_1308624072.tag == 8)) {
              var Temporary4 = sv_1308624072;
              if (ConstSet20[Temporary4.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'buf\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary4.tag, NTI1308622851)); }
            if ((Temporary4.buf.length == 0)) {
            }
            else {
              var Temporary5 = sv_1308624072;
              if (ConstSet21[Temporary5.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'buf\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary5.tag, NTI1308622851)); }
              buffer_1308624050[buffer_1308624050_Idx].set(Temporary5.buf,p_1308624051[0]);;
              var Temporary6 = sv_1308624072;
              if (ConstSet22[Temporary6.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'buf\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary6.tag, NTI1308622851)); }
              p_1308624051[0] = addInt(p_1308624051[0], Temporary6.buf.length);
            }
            
            }
            else {
              var tagCode_1308624134 = mapTagCode_1308624024[sv_1308624072.tag];
              var tag_1308624139 = ((tagCode_1308624134 + (sv_1308624072.encodedSize << 3)) >>> 0);
              writeVaruint32_1308624140(buffer_1308624050, buffer_1308624050_Idx, tag_1308624139, p_1308624051, 0);
              switch (sv_1308624072.tag) {
              case 5:
              case 4:
                break;
              case 2:
                var Temporary7 = sv_1308624072;
                if (ConstSet23[Temporary7.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'i\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary7.tag, NTI1308622851)); }
                buffer_1308624050[buffer_1308624050_Idx].writeInt32LE(Temporary7.i, p_1308624051[0]);
                p_1308624051[0] = addInt(p_1308624051[0], 4);
                break;
              case 3:
                var Temporary8 = sv_1308624072;
                if (ConstSet24[Temporary8.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'d\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary8.tag, NTI1308622851)); }
                buffer_1308624050[buffer_1308624050_Idx].writeDoubleLE(Temporary8.d, p_1308624051[0]);
                p_1308624051[0] = addInt(p_1308624051[0], 8);
                break;
              case 6:
                  var Temporary9 = sv_1308624072;
                  if (ConstSet25[Temporary9.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary9.tag, NTI1308622851)); }
                if ((Temporary9.b <= 255)) {
                var Temporary10 = sv_1308624072;
                if (ConstSet26[Temporary10.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary10.tag, NTI1308622851)); }
                buffer_1308624050[buffer_1308624050_Idx][p_1308624051[0]] = Temporary10.b;
                p_1308624051[0] = addInt(p_1308624051[0], 1);
                }
                else {
                  var Temporary11 = sv_1308624072;
                  if (ConstSet27[Temporary11.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary11.tag, NTI1308622851)); }
                if ((Temporary11.b <= 65535)) {
                var Temporary12 = sv_1308624072;
                if (ConstSet28[Temporary12.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary12.tag, NTI1308622851)); }
                buffer_1308624050[buffer_1308624050_Idx].writeUInt16LE(Temporary12.b, p_1308624051[0]);
                p_1308624051[0] = addInt(p_1308624051[0], 2);
                }
                else {
                  var Temporary13 = sv_1308624072;
                  if (ConstSet29[Temporary13.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary13.tag, NTI1308622851)); }
                if ((Temporary13.b <= 16777215)) {
                var Temporary14 = sv_1308624072;
                if (ConstSet30[Temporary14.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary14.tag, NTI1308622851)); }
                buffer_1308624050[buffer_1308624050_Idx][p_1308624051[0]] = (Temporary14.b >>> 16);
                var Temporary15 = sv_1308624072;
                if (ConstSet31[Temporary15.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary15.tag, NTI1308622851)); }
                buffer_1308624050[buffer_1308624050_Idx][addInt(p_1308624051[0], 1)] = (Temporary15.b >>> 8);
                var Temporary16 = sv_1308624072;
                if (ConstSet32[Temporary16.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary16.tag, NTI1308622851)); }
                buffer_1308624050[buffer_1308624050_Idx][addInt(p_1308624051[0], 2)] = Temporary16.b;
                p_1308624051[0] = addInt(p_1308624051[0], 3);
                }
                else {
                  var Temporary17 = sv_1308624072;
                  if (ConstSet33[Temporary17.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'b\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary17.tag, NTI1308622851)); }
                  buffer_1308624050[buffer_1308624050_Idx].writeUInt32LE(Temporary17.b, p_1308624051[0]);
                  p_1308624051[0] = addInt(p_1308624051[0], 4);
                }
                }}
                break;
              case 10:
                break;
              case 0:
                var Temporary18 = sv_1308624072;
                if (ConstSet34[Temporary18.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary18.tag, NTI1308622851)); }
                p_1308624051[0] = addInt(p_1308624051[0], (Temporary18.str).length);
                break;
              case 9:
                var Temporary19 = sv_1308624072;
                if (ConstSet35[Temporary19.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'cstr\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary19.tag, NTI1308622851)); }
                p_1308624051[0] = addInt(p_1308624051[0], buffer_1308624050[buffer_1308624050_Idx].write(Temporary19.cstr, p_1308624051[0]));
                break;
              case 7:
                  var Temporary20 = sv_1308624072;
                  if (ConstSet36[Temporary20.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'ext\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary20.tag, NTI1308622851)); }
                if ((Temporary20.ext.length == 0)) {
                }
                else {
                  var Temporary21 = sv_1308624072;
                  if (ConstSet37[Temporary21.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'ext\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary21.tag, NTI1308622851)); }
                  buffer_1308624050[buffer_1308624050_Idx].set(Temporary21.ext,p_1308624051[0]);;
                  var Temporary22 = sv_1308624072;
                  if (ConstSet38[Temporary22.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'ext\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary22.tag, NTI1308622851)); }
                  p_1308624051[0] = addInt(p_1308624051[0], Temporary22.ext.length);
                }
                
                break;
              case 1:
                  var Temporary23 = sv_1308624072;
                  if (ConstSet39[Temporary23.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'buf\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary23.tag, NTI1308622851)); }
                if ((Temporary23.buf.length == 0)) {
                }
                else {
                  var Temporary24 = sv_1308624072;
                  if (ConstSet40[Temporary24.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'buf\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary24.tag, NTI1308622851)); }
                  buffer_1308624050[buffer_1308624050_Idx].set(Temporary24.buf,p_1308624051[0]);;
                  var Temporary25 = sv_1308624072;
                  if (ConstSet41[Temporary25.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'buf\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary25.tag, NTI1308622851)); }
                  p_1308624051[0] = addInt(p_1308624051[0], Temporary25.buf.length);
                }
                
                break;
              case 8:
                break;
              }
            }
            
            i_503322482 = addInt(i_503322482, 1);
            if (!(((b_1308624049[b_1308624049_Idx].stack).length == L_503322483))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);

  
}

function finish_1308624042(b_1308624043, b_1308624043_Idx) {
  var result_1308624044 = null;

    var encodedSize_1308624045 = encodingSize_1308623998(b_1308624043, b_1308624043_Idx);
    var r_1308624046 = [Buffer.allocUnsafe(encodedSize_1308624045)];
    finish_1308624047(b_1308624043, b_1308624043_Idx, r_1308624046, 0);
    result_1308624044 = r_1308624046[0];

  return result_1308624044;

}

function newBipfBuilder_503319259() {

function HEX3Aanonymous_503319265(thisHEX60gensym339_503319266, arg0HEX60gensym339_503319267) {
    var thatHEX60gensym339_503319268 = [thisHEX60gensym339_503319266];
    if ((arg0HEX60gensym339_503319267 === undefined)) {
    startArray_1308623136(thatHEX60gensym339_503319268, 0);
    }
    else {
    startArray_503317247(thatHEX60gensym339_503319268, 0, toString_503316541(arg0HEX60gensym339_503319267));
    }
    

  
}
    
function HEX3Aanonymous_503319284(arg0HEX60gensym339_503319285) {
        HEX3Aanonymous_503319265(this, arg0HEX60gensym339_503319285);

      
    }

function HEX3Aanonymous_503319298(this_503319299) {
    var that_503319300 = [this_503319299];
    endArray_1308623848(that_503319300, 0);

  
}
    
function HEX3Aanonymous_503319301() {
        HEX3Aanonymous_503319298(this);

      
    }

function HEX3Aanonymous_503319317(thisHEX60gensym344_503319318, arg0HEX60gensym344_503319319) {
    var thatHEX60gensym344_503319320 = [thisHEX60gensym344_503319318];
    if ((arg0HEX60gensym344_503319319 === undefined)) {
    startMap_1308622970(thatHEX60gensym344_503319320, 0);
    }
    else {
    startMap_503317480(thatHEX60gensym344_503319320, 0, toString_503316541(arg0HEX60gensym344_503319319));
    }
    

  
}
    
function HEX3Aanonymous_503319328(arg0HEX60gensym344_503319329) {
        HEX3Aanonymous_503319317(this, arg0HEX60gensym344_503319329);

      
    }

function HEX3Aanonymous_503319342(this_503319343) {
    var that_503319344 = [this_503319343];
    endMap_1308623910(that_503319344, 0);

  
}
    
function HEX3Aanonymous_503319345() {
        HEX3Aanonymous_503319342(this);

      
    }

function HEX3Aanonymous_503319361(thisHEX60gensym349_503319362, arg0HEX60gensym349_503319363) {
    var thatHEX60gensym349_503319364 = [thisHEX60gensym349_503319362];
    if ((arg0HEX60gensym349_503319363 === undefined)) {
    addNull_1308623663(thatHEX60gensym349_503319364, 0);
    }
    else {
    addNull_503316747(thatHEX60gensym349_503319364, 0, toString_503316541(arg0HEX60gensym349_503319363));
    }
    

  
}
    
function HEX3Aanonymous_503319372(arg0HEX60gensym349_503319373) {
        HEX3Aanonymous_503319361(this, arg0HEX60gensym349_503319373);

      
    }

function HEX3Aanonymous_503319390(thisHEX60gensym352_503319391, arg0HEX60gensym352_503319392, arg1HEX60gensym352_503319393) {
    var thatHEX60gensym352_503319394 = [thisHEX60gensym352_503319391];
    if ((arg1HEX60gensym352_503319393 === undefined)) {
    addString_503317361(thatHEX60gensym352_503319394, 0, toString_503316541(arg0HEX60gensym352_503319392));
    }
    else {
    addString_503317080(thatHEX60gensym352_503319394, 0, toString_503316541(arg0HEX60gensym352_503319392), toString_503316541(arg1HEX60gensym352_503319393));
    }
    

  
}
    
function HEX3Aanonymous_503319408(arg0HEX60gensym352_503319409, arg1HEX60gensym352_503319410) {
        HEX3Aanonymous_503319390(this, arg0HEX60gensym352_503319409, arg1HEX60gensym352_503319410);

      
    }

function HEX3Aanonymous_503319427(thisHEX60gensym355_503319428, arg0HEX60gensym355_503319429, arg1HEX60gensym355_503319430) {
    var thatHEX60gensym355_503319431 = [thisHEX60gensym355_503319428];
    if ((arg1HEX60gensym355_503319430 === undefined)) {
    addInt_1308623225(thatHEX60gensym355_503319431, 0, toInt_503316535(arg0HEX60gensym355_503319429));
    }
    else {
    addInt_503316914(thatHEX60gensym355_503319431, 0, toString_503316541(arg0HEX60gensym355_503319429), toInt_503316535(arg1HEX60gensym355_503319430));
    }
    

  
}
    
function HEX3Aanonymous_503319440(arg0HEX60gensym355_503319441, arg1HEX60gensym355_503319442) {
        HEX3Aanonymous_503319427(this, arg0HEX60gensym355_503319441, arg1HEX60gensym355_503319442);

      
    }

function HEX3Aanonymous_503319459(thisHEX60gensym358_503319460, arg0HEX60gensym358_503319461, arg1HEX60gensym358_503319462) {
    var thatHEX60gensym358_503319463 = [thisHEX60gensym358_503319460];
    if ((arg1HEX60gensym358_503319462 === undefined)) {
    addDouble_1308623300(thatHEX60gensym358_503319463, 0, toDouble_503316538(arg0HEX60gensym358_503319461));
    }
    else {
    addDouble_503316997(thatHEX60gensym358_503319463, 0, toString_503316541(arg0HEX60gensym358_503319461), toDouble_503316538(arg1HEX60gensym358_503319462));
    }
    

  
}
    
function HEX3Aanonymous_503319472(arg0HEX60gensym358_503319473, arg1HEX60gensym358_503319474) {
        HEX3Aanonymous_503319459(this, arg0HEX60gensym358_503319473, arg1HEX60gensym358_503319474);

      
    }

function HEX3Aanonymous_503319491(thisHEX60gensym361_503319492, arg0HEX60gensym361_503319493, arg1HEX60gensym361_503319494) {
    var thatHEX60gensym361_503319495 = [thisHEX60gensym361_503319492];
    if ((arg1HEX60gensym361_503319494 === undefined)) {
    addBool_1308623587(thatHEX60gensym361_503319495, 0, toBool_503316544(arg0HEX60gensym361_503319493));
    }
    else {
    addBool_503316830(thatHEX60gensym361_503319495, 0, toString_503316541(arg0HEX60gensym361_503319493), toBool_503316544(arg1HEX60gensym361_503319494));
    }
    

  
}
    
function HEX3Aanonymous_503319504(arg0HEX60gensym361_503319505, arg1HEX60gensym361_503319506) {
        HEX3Aanonymous_503319491(this, arg0HEX60gensym361_503319505, arg1HEX60gensym361_503319506);

      
    }

function HEX3Aanonymous_503319523(thisHEX60gensym364_503319524, arg0HEX60gensym364_503319525, arg1HEX60gensym364_503319526) {
    var thatHEX60gensym364_503319527 = [thisHEX60gensym364_503319524];
    if ((arg1HEX60gensym364_503319526 === undefined)) {
    addBuffer_1308623379(thatHEX60gensym364_503319527, 0, toBuffer_503316547(arg0HEX60gensym364_503319525));
    }
    else {
    addBuffer_503317164(thatHEX60gensym364_503319527, 0, toString_503316541(arg0HEX60gensym364_503319525), toBuffer_503316547(arg1HEX60gensym364_503319526));
    }
    

  
}
    
function HEX3Aanonymous_503319536(arg0HEX60gensym364_503319537, arg1HEX60gensym364_503319538) {
        HEX3Aanonymous_503319523(this, arg0HEX60gensym364_503319537, arg1HEX60gensym364_503319538);

      
    }

function HEX3Aanonymous_503319555(thisHEX60gensym367_503319556, arg0HEX60gensym367_503319557, arg1HEX60gensym367_503319558) {
    var thatHEX60gensym367_503319559 = [thisHEX60gensym367_503319556];
    if ((arg1HEX60gensym367_503319558 === undefined)) {
    addExtended_1308623729(thatHEX60gensym367_503319559, 0, toBuffer_503316547(arg0HEX60gensym367_503319557));
    }
    else {
    addExtended_503319563(thatHEX60gensym367_503319559, 0, toString_503316541(arg0HEX60gensym367_503319557), toBuffer_503316547(arg1HEX60gensym367_503319558));
    }
    

  
}
    
function HEX3Aanonymous_503319647(arg0HEX60gensym367_503319648, arg1HEX60gensym367_503319649) {
        HEX3Aanonymous_503319555(this, arg0HEX60gensym367_503319648, arg1HEX60gensym367_503319649);

      
    }

function HEX3Aanonymous_503319662(this_503319663) {
  var result_503319664 = null;

    var that_503319665 = [this_503319663];
    result_503319664 = finish_1308624042(that_503319665, 0);
    (result_503319664)[bipfBufferSymbol_503316507[0]] = true;

  return result_503319664;

}
    
function HEX3Aanonymous_503319674() {
      var result_503319675 = null;

        result_503319675 = HEX3Aanonymous_503319662(this);

      return result_503319675;

    }

  var result_503319260 = null;

    result_503319260 = {stack: [], pointers: []};
    var prototype_503319261 = result_503319260;
    prototype_503319261.startArray = HEX3Aanonymous_503319284;
    prototype_503319261.endArray = HEX3Aanonymous_503319301;
    prototype_503319261.startMap = HEX3Aanonymous_503319328;
    prototype_503319261.endMap = HEX3Aanonymous_503319345;
    prototype_503319261.addNull = HEX3Aanonymous_503319372;
    prototype_503319261.addString = HEX3Aanonymous_503319408;
    prototype_503319261.addInt = HEX3Aanonymous_503319440;
    prototype_503319261.addDouble = HEX3Aanonymous_503319472;
    prototype_503319261.addBool = HEX3Aanonymous_503319504;
    prototype_503319261.addBuffer = HEX3Aanonymous_503319536;
    prototype_503319261.addExtended = HEX3Aanonymous_503319647;
    prototype_503319261.finish = HEX3Aanonymous_503319674;

  return result_503319260;

}

function dnKind_503316618(obj_503316619) {
      var Temporary1;
      var Temporary2;

  var result_503316620 = 0;

    var jsType_503316621 = typeof(obj_503316619);
    if ((jsType_503316621 == "undefined")) {
    result_503316620 = 0;
    }
    else {
    if ((jsType_503316621 == "boolean")) {
    result_503316620 = 2;
    }
    else {
    if ((jsType_503316621 == "number")) {
      if (!(Number.isSafeInteger(obj_503316619))) Temporary2 = false; else {        Temporary2 = (-2147483648 <= toInt_503316535(obj_503316619));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (toInt_503316535(obj_503316619) <= 2147483647);      }    if (Temporary1) {
    result_503316620 = 3;
    }
    else {
    if ((Number.isFinite(obj_503316619))) {
    result_503316620 = 4;
    }
    else {
      raiseException({message: makeNimstrLit("Unsupported number (formely \'unknown type\' error)"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    }
    }
    else {
    if ((jsType_503316621 == "string")) {
    result_503316620 = 5;
    }
    else {
    if ((jsType_503316621 == "object")) {
    if ((obj_503316619 === null)) {
    result_503316620 = 1;
    }
    else {
    if ((obj_503316619 instanceof Uint8Array)) {
    if (isBipfBuffer_503316509(obj_503316619)) {
    result_503316620 = 7;
    }
    else {
      result_503316620 = 6;
    }
    
    }
    else {
    if ((Array.isArray(obj_503316619))) {
    result_503316620 = 8;
    }
    else {
      result_503316620 = 9;
    }
    }}
    }
    else {
      raiseException({message: (makeNimstrLit("Unsupported type (formely \'unknown type\'): ") || []).concat(cstrToNimstr(jsType_503316621) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    }}}}

  return result_503316620;

}

function addBipfBuffer_1308623454(b_1308623455, b_1308623455_Idx, buff_1308623456) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

    var vHEX60gensym52_1308623461 = {tag: 8, buf: buff_1308623456, encodedSize: buff_1308623456.length, str: [], cstr: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
    if (((b_1308623455[b_1308623455_Idx].pointers).length == 0)) {
    if ((0 < (b_1308623455[b_1308623455_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    Temporary1 = vHEX60gensym52_1308623461;
    vHEX60gensym52_1308623461 = genericReset(vHEX60gensym52_1308623461, NTI1308622852);
    b_1308623455[b_1308623455_Idx].stack.push(Temporary1);;
    }
    else {
      var pHEX60gensym52_1308623480 = (Temporary2 = HEX5BHEX5D_1308623042(b_1308623455[b_1308623455_Idx].pointers, 1), Temporary2)[0][Temporary2[1]];
      if ((b_1308623455[b_1308623455_Idx].stack[pHEX60gensym52_1308623480].tag == 4)) {
      var Temporary3 = b_1308623455[b_1308623455_Idx].stack[pHEX60gensym52_1308623480];
      if (ConstSet42[Temporary3.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary3.tag, NTI1308622851)); }
      Temporary3.size = addInt(Temporary3.size, 1);
      var addedHEX60gensym52_1308623489 = vHEX60gensym52_1308623461.encodedSize;
      b_1308623455[b_1308623455_Idx].stack[pHEX60gensym52_1308623480].encodedSize = addInt(b_1308623455[b_1308623455_Idx].stack[pHEX60gensym52_1308623480].encodedSize, addedHEX60gensym52_1308623489);
      Temporary4 = vHEX60gensym52_1308623461;
      vHEX60gensym52_1308623461 = genericReset(vHEX60gensym52_1308623461, NTI1308622852);
      b_1308623455[b_1308623455_Idx].stack.push(Temporary4);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function toBipfBuffer_503316550(n_503316551) {
  var result_503316552 = null;

    result_503316552 = n_503316551;

  return result_503316552;

}

function addAtom_1308623511(b_1308623512, b_1308623512_Idx, v_1308623513) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
      var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

    if ((v_1308623513 <= 255)) {
    Temporary1 = 1;
    }
    else {
    if ((v_1308623513 <= 65535)) {
    Temporary1 = 2;
    }
    else {
    if ((v_1308623513 <= 16777215)) {
    Temporary1 = 3;
    }
    else {
    Temporary1 = 4;
    }
    }}
    var vHEX60gensym60_1308623518 = {tag: 6, b: v_1308623513, encodedSize: Temporary1, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
    if (((b_1308623512[b_1308623512_Idx].pointers).length == 0)) {
    if ((0 < (b_1308623512[b_1308623512_Idx].stack).length)) {
    raiseException({message: makeNimstrLit("Cannot add value at root when root is not empty"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    Temporary2 = vHEX60gensym60_1308623518;
    vHEX60gensym60_1308623518 = genericReset(vHEX60gensym60_1308623518, NTI1308622852);
    b_1308623512[b_1308623512_Idx].stack.push(Temporary2);;
    }
    else {
      var pHEX60gensym60_1308623537 = (Temporary3 = HEX5BHEX5D_1308623042(b_1308623512[b_1308623512_Idx].pointers, 1), Temporary3)[0][Temporary3[1]];
      if ((b_1308623512[b_1308623512_Idx].stack[pHEX60gensym60_1308623537].tag == 4)) {
      var Temporary4 = b_1308623512[b_1308623512_Idx].stack[pHEX60gensym60_1308623537];
      if (ConstSet43[Temporary4.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary4.tag, NTI1308622851)); }
      Temporary4.size = addInt(Temporary4.size, 1);
      var addedHEX60gensym60_1308623546 = vHEX60gensym60_1308623518.encodedSize;
        if (!(0 <= vHEX60gensym60_1308623518.encodedSize)) Temporary5 = false; else {          Temporary5 = (vHEX60gensym60_1308623518.encodedSize <= 2147483647);        }      if (!(Temporary5)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym60.encodedSize >= 0 and v`gensym60.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym68_1308623561 = (vHEX60gensym60_1308623518.encodedSize << 3);
      if ((uHEX60gensym68_1308623561 < 128)) {
      Temporary6 = 1;
      }
      else {
      if ((uHEX60gensym68_1308623561 < 16384)) {
      Temporary6 = 2;
      }
      else {
      if ((uHEX60gensym68_1308623561 < 2097152)) {
      Temporary6 = 3;
      }
      else {
      if ((uHEX60gensym68_1308623561 < 268435456)) {
      Temporary6 = 4;
      }
      else {
      Temporary6 = 5;
      }
      }}}
      addedHEX60gensym60_1308623546 = addInt(addedHEX60gensym60_1308623546, Temporary6);
      b_1308623512[b_1308623512_Idx].stack[pHEX60gensym60_1308623537].encodedSize = addInt(b_1308623512[b_1308623512_Idx].stack[pHEX60gensym60_1308623537].encodedSize, addedHEX60gensym60_1308623546);
      Temporary7 = vHEX60gensym60_1308623518;
      vHEX60gensym60_1308623518 = genericReset(vHEX60gensym60_1308623518, NTI1308622852);
      b_1308623512[b_1308623512_Idx].stack.push(Temporary7);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value in a map without a key"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function toAtom_503316581(n_503316582) {
  var result_503316583 = 0;

    result_503316583 = valueAtomsMap_503316563[0][toString_503316541(n_503316582)];
    if ((result_503316583 === undefined)) {
    result_503316583 = (valueAtoms_503316571[0]).length;
    valueAtomsMap_503316563[0][toString_503316541(n_503316582)] = result_503316583;
    valueAtoms_503316571[0].push(toString_503316541(n_503316582));;
    }
    

  return result_503316583;

}

function addNode_503317351(builder_503317356, builder_503317356_Idx, obj_503317357, keyDict_503317359) {
    var nodeKind_503317360 = dnKind_503316618(obj_503317357);
    switch (nodeKind_503317360) {
    case 0:
      break;
    case 1:
      addNull_1308623663(builder_503317356, builder_503317356_Idx);
      break;
    case 2:
      addBool_1308623587(builder_503317356, builder_503317356_Idx, toBool_503316544(obj_503317357));
      break;
    case 3:
      addInt_1308623225(builder_503317356, builder_503317356_Idx, toInt_503316535(obj_503317357));
      break;
    case 4:
      addDouble_1308623300(builder_503317356, builder_503317356_Idx, toDouble_503316538(obj_503317357));
      break;
    case 5:
      addString_503317361(builder_503317356, builder_503317356_Idx, toString_503316541(obj_503317357));
      break;
    case 6:
      addBuffer_1308623379(builder_503317356, builder_503317356_Idx, toBuffer_503316547(obj_503317357));
      break;
    case 8:
      startArray_1308623136(builder_503317356, builder_503317356_Idx);
      Label1: do {
        var value_503317428 = null;
        var v_503322505 = null;
        for (var k in obj_503317357) {
          if (!obj_503317357.hasOwnProperty(k)) continue;
          v_503322505=obj_503317357[k];
        value_503317428 = v_503322505;
        addNode_503317351(builder_503317356, builder_503317356_Idx, value_503317428, keyDict_503317359);
        }
      } while (false);
      endArray_1308623848(builder_503317356, builder_503317356_Idx);
      break;
    case 9:
      startMap_1308622970(builder_503317356, builder_503317356_Idx);
      Label2: do {
        var key_503317454 = null;
        var value_503317455 = null;
        Label3: do {
          var key_503322508 = null;
          var value_503322509 = null;
          var k_503322510 = null;
          var v_503322511 = null;
          for (var k_503322510 in obj_503317357) {
            if (!obj_503317357.hasOwnProperty(k_503322510)) continue;
            v_503322511=obj_503317357[k_503322510];
          key_503322508 = k_503322510;
          value_503322509 = v_503322511;
          key_503317454 = key_503322508;
          value_503317455 = (value_503322509);
          addNodeWithKey_503316738(builder_503317356, builder_503317356_Idx, key_503317454, value_503317455, keyDict_503317359);
          }
        } while (false);
      } while (false);
      endMap_1308623910(builder_503317356, builder_503317356_Idx);
      break;
    case 7:
      addBipfBuffer_1308623454(builder_503317356, builder_503317356_Idx, toBipfBuffer_503316550(obj_503317357));
      break;
    case 10:
      addAtom_1308623511(builder_503317356, builder_503317356_Idx, toAtom_503316581(obj_503317357));
      break;
    }

  
}

function addBipfBuffer_503317593(b_503317595, b_503317595_Idx, k_503317596, buf_503317597) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

    if (((b_503317595[b_503317595_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym136_503317611 = (Temporary1 = HEX5BHEX5D_1308623042(b_503317595[b_503317595_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503317595[b_503317595_Idx].stack[pHEX60gensym136_503317611].tag == 5)) {
      var Temporary2 = b_503317595[b_503317595_Idx].stack[pHEX60gensym136_503317611];
      if (ConstSet44[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym136_503317620 = {tag: 9, cstr: k_503317596, encodedSize: Buffer.byteLength(k_503317596), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      var vHEX60gensym136_503317622 = {tag: 8, buf: buf_503317597, encodedSize: buf_503317597.length, str: [], cstr: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym136_503317620.encodedSize)) Temporary3 = false; else {          Temporary3 = (kHEX60gensym136_503317620.encodedSize <= 2147483647);        }      if (!(Temporary3)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym136.encodedSize >= 0 and k`gensym136.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym142_503317637 = (kHEX60gensym136_503317620.encodedSize << 3);
      if ((uHEX60gensym142_503317637 < 128)) {
      Temporary4 = 1;
      }
      else {
      if ((uHEX60gensym142_503317637 < 16384)) {
      Temporary4 = 2;
      }
      else {
      if ((uHEX60gensym142_503317637 < 2097152)) {
      Temporary4 = 3;
      }
      else {
      if ((uHEX60gensym142_503317637 < 268435456)) {
      Temporary4 = 4;
      }
      else {
      Temporary4 = 5;
      }
      }}}
      var addedHEX60gensym136_503317638 = addInt(addInt(kHEX60gensym136_503317620.encodedSize, vHEX60gensym136_503317622.encodedSize), Temporary4);
      Temporary5 = kHEX60gensym136_503317620;
      kHEX60gensym136_503317620 = genericReset(kHEX60gensym136_503317620, NTI1308622852);
      b_503317595[b_503317595_Idx].stack.push(Temporary5);;
      b_503317595[b_503317595_Idx].stack[pHEX60gensym136_503317611].encodedSize = addInt(b_503317595[b_503317595_Idx].stack[pHEX60gensym136_503317611].encodedSize, addedHEX60gensym136_503317638);
      Temporary6 = vHEX60gensym136_503317622;
      vHEX60gensym136_503317622 = genericReset(vHEX60gensym136_503317622, NTI1308622852);
      b_503317595[b_503317595_Idx].stack.push(Temporary6);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addAtom_503317658(b_503317660, b_503317660_Idx, k_503317661, v_503317662) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
      var Temporary8;
      var Temporary9;

    if (((b_503317660[b_503317660_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym147_503317676 = (Temporary1 = HEX5BHEX5D_1308623042(b_503317660[b_503317660_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503317660[b_503317660_Idx].stack[pHEX60gensym147_503317676].tag == 5)) {
      var Temporary2 = b_503317660[b_503317660_Idx].stack[pHEX60gensym147_503317676];
      if (ConstSet45[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      var kHEX60gensym147_503317685 = {tag: 9, cstr: k_503317661, encodedSize: Buffer.byteLength(k_503317661), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
      if ((v_503317662 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((v_503317662 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((v_503317662 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var vHEX60gensym147_503317687 = {tag: 6, b: v_503317662, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym147_503317685.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym147_503317685.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym147.encodedSize >= 0 and k`gensym147.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym154_503317702 = (kHEX60gensym147_503317685.encodedSize << 3);
      if ((uHEX60gensym154_503317702 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym154_503317702 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym154_503317702 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym154_503317702 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym147_503317703 = addInt(addInt(kHEX60gensym147_503317685.encodedSize, vHEX60gensym147_503317687.encodedSize), Temporary5);
      Temporary6 = kHEX60gensym147_503317685;
      kHEX60gensym147_503317685 = genericReset(kHEX60gensym147_503317685, NTI1308622852);
      b_503317660[b_503317660_Idx].stack.push(Temporary6);;
        if (!(0 <= vHEX60gensym147_503317687.encodedSize)) Temporary7 = false; else {          Temporary7 = (vHEX60gensym147_503317687.encodedSize <= 2147483647);        }      if (!(Temporary7)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym147.encodedSize >= 0 and v`gensym147.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym158_503317725 = (vHEX60gensym147_503317687.encodedSize << 3);
      if ((uHEX60gensym158_503317725 < 128)) {
      Temporary8 = 1;
      }
      else {
      if ((uHEX60gensym158_503317725 < 16384)) {
      Temporary8 = 2;
      }
      else {
      if ((uHEX60gensym158_503317725 < 2097152)) {
      Temporary8 = 3;
      }
      else {
      if ((uHEX60gensym158_503317725 < 268435456)) {
      Temporary8 = 4;
      }
      else {
      Temporary8 = 5;
      }
      }}}
      addedHEX60gensym147_503317703 = addInt(addedHEX60gensym147_503317703, Temporary8);
      b_503317660[b_503317660_Idx].stack[pHEX60gensym147_503317676].encodedSize = addInt(b_503317660[b_503317660_Idx].stack[pHEX60gensym147_503317676].encodedSize, addedHEX60gensym147_503317703);
      Temporary9 = vHEX60gensym147_503317687;
      vHEX60gensym147_503317687 = genericReset(vHEX60gensym147_503317687, NTI1308622852);
      b_503317660[b_503317660_Idx].stack.push(Temporary9);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addNodeWithKey_503316738(builder_503316742, builder_503316742_Idx, key_503316743, obj_503316744, keyDict_503316745) {
    var nodeKind_503316746 = dnKind_503316618(obj_503316744);
    switch (nodeKind_503316746) {
    case 0:
      break;
    case 1:
      addNull_503316747(builder_503316742, builder_503316742_Idx, key_503316743);
      break;
    case 2:
      addBool_503316830(builder_503316742, builder_503316742_Idx, key_503316743, toBool_503316544(obj_503316744));
      break;
    case 3:
      addInt_503316914(builder_503316742, builder_503316742_Idx, key_503316743, toInt_503316535(obj_503316744));
      break;
    case 4:
      addDouble_503316997(builder_503316742, builder_503316742_Idx, key_503316743, toDouble_503316538(obj_503316744));
      break;
    case 5:
      addString_503317080(builder_503316742, builder_503316742_Idx, key_503316743, toString_503316541(obj_503316744));
      break;
    case 6:
      addBuffer_503317164(builder_503316742, builder_503316742_Idx, key_503316743, toBuffer_503316547(obj_503316744));
      break;
    case 8:
      startArray_503317247(builder_503316742, builder_503316742_Idx, key_503316743);
      Label1: do {
        var value_503317334 = null;
        var v_503322497 = null;
        for (var k in obj_503316744) {
          if (!obj_503316744.hasOwnProperty(k)) continue;
          v_503322497=obj_503316744[k];
        value_503317334 = v_503322497;
        addNode_503317351(builder_503316742, builder_503316742_Idx, value_503317334, keyDict_503316745);
        }
      } while (false);
      endArray_1308623848(builder_503316742, builder_503316742_Idx);
      break;
    case 9:
      startMap_503317480(builder_503316742, builder_503316742_Idx, key_503316743);
      Label2: do {
        var key_503317567 = null;
        var value_503317568 = null;
        Label3: do {
          var key_503322500 = null;
          var value_503322501 = null;
          var k_503322502 = null;
          var v_503322503 = null;
          for (var k_503322502 in obj_503316744) {
            if (!obj_503316744.hasOwnProperty(k_503322502)) continue;
            v_503322503=obj_503316744[k_503322502];
          key_503322500 = k_503322502;
          value_503322501 = v_503322503;
          key_503317567 = key_503322500;
          value_503317568 = (value_503322501);
          addNodeWithKey_503316738(builder_503316742, builder_503316742_Idx, key_503317567, value_503317568, keyDict_503316745);
          }
        } while (false);
      } while (false);
      endMap_1308623910(builder_503316742, builder_503316742_Idx);
      break;
    case 7:
      addBipfBuffer_503317593(builder_503316742, builder_503316742_Idx, key_503316743, toBipfBuffer_503316550(obj_503316744));
      break;
    case 10:
      addAtom_503317658(builder_503316742, builder_503316742_Idx, key_503316743, toAtom_503316581(obj_503316744));
      break;
    }

  
}

function addNode_503317770(builder_503317775, builder_503317775_Idx, obj_503317776, keyDict_503317778) {
    var nodeKind_503317779 = dnKind_503316618(obj_503317776);
    switch (nodeKind_503317779) {
    case 0:
      break;
    case 1:
      addNull_1308623663(builder_503317775, builder_503317775_Idx);
      break;
    case 2:
      addBool_1308623587(builder_503317775, builder_503317775_Idx, toBool_503316544(obj_503317776));
      break;
    case 3:
      addInt_1308623225(builder_503317775, builder_503317775_Idx, toInt_503316535(obj_503317776));
      break;
    case 4:
      addDouble_1308623300(builder_503317775, builder_503317775_Idx, toDouble_503316538(obj_503317776));
      break;
    case 5:
      addString_503317361(builder_503317775, builder_503317775_Idx, toString_503316541(obj_503317776));
      break;
    case 6:
      addBuffer_1308623379(builder_503317775, builder_503317775_Idx, toBuffer_503316547(obj_503317776));
      break;
    case 8:
      startArray_1308623136(builder_503317775, builder_503317775_Idx);
      Label1: do {
        var value_503317784 = null;
        var v_503322486 = null;
        for (var k in obj_503317776) {
          if (!obj_503317776.hasOwnProperty(k)) continue;
          v_503322486=obj_503317776[k];
        value_503317784 = v_503322486;
        addNode_503317770(builder_503317775, builder_503317775_Idx, value_503317784, keyDict_503317778);
        }
      } while (false);
      endArray_1308623848(builder_503317775, builder_503317775_Idx);
      break;
    case 9:
      startMap_1308622970(builder_503317775, builder_503317775_Idx);
      Label2: do {
        var key_503317810 = null;
        var value_503317811 = null;
        Label3: do {
          var key_503322492 = null;
          var value_503322493 = null;
          var k_503322494 = null;
          var v_503322495 = null;
          for (var k_503322494 in obj_503317776) {
            if (!obj_503317776.hasOwnProperty(k_503322494)) continue;
            v_503322495=obj_503317776[k_503322494];
          key_503322492 = k_503322494;
          value_503322493 = v_503322495;
          key_503317810 = key_503322492;
          value_503317811 = (value_503322493);
          addNodeWithKey_503316738(builder_503317775, builder_503317775_Idx, key_503317810, value_503317811, keyDict_503317778);
          }
        } while (false);
      } while (false);
      endMap_1308623910(builder_503317775, builder_503317775_Idx);
      break;
    case 7:
      addBipfBuffer_1308623454(builder_503317775, builder_503317775_Idx, toBipfBuffer_503316550(obj_503317776));
      break;
    case 10:
      addAtom_1308623511(builder_503317775, builder_503317775_Idx, toAtom_503316581(obj_503317776));
      break;
    }

  
}

function addJsObject_503317751(b_503317752, b_503317752_Idx, node_503317753) {
    addNode_503317770(b_503317752, b_503317752_Idx, node_503317753, NOKEYDICT_1258291230[0]);

  
}

function addNull_503318022(b_503318024, b_503318024_Idx, k_503318025) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
      var Temporary8;
      var Temporary9;

    if (((b_503318024[b_503318024_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym174_503318039 = (Temporary1 = HEX5BHEX5D_1308623042(b_503318024[b_503318024_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503318024[b_503318024_Idx].stack[pHEX60gensym174_503318039].tag == 5)) {
      var Temporary2 = b_503318024[b_503318024_Idx].stack[pHEX60gensym174_503318039];
      if (ConstSet46[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      if ((k_503318025 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((k_503318025 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((k_503318025 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var kHEX60gensym174_503318049 = {tag: 6, b: k_503318025, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
      var vHEX60gensym174_503318051 = {tag: 10, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym174_503318049.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym174_503318049.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym174.encodedSize >= 0 and k`gensym174.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym181_503318066 = (kHEX60gensym174_503318049.encodedSize << 3);
      if ((uHEX60gensym181_503318066 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym181_503318066 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym181_503318066 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym181_503318066 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym174_503318067 = addInt(addInt(kHEX60gensym174_503318049.encodedSize, vHEX60gensym174_503318051.encodedSize), Temporary5);
      Temporary6 = kHEX60gensym174_503318049;
      kHEX60gensym174_503318049 = genericReset(kHEX60gensym174_503318049, NTI1308622852);
      b_503318024[b_503318024_Idx].stack.push(Temporary6);;
        if (!(0 <= vHEX60gensym174_503318051.encodedSize)) Temporary7 = false; else {          Temporary7 = (vHEX60gensym174_503318051.encodedSize <= 2147483647);        }      if (!(Temporary7)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym174.encodedSize >= 0 and v`gensym174.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym185_503318089 = (vHEX60gensym174_503318051.encodedSize << 3);
      if ((uHEX60gensym185_503318089 < 128)) {
      Temporary8 = 1;
      }
      else {
      if ((uHEX60gensym185_503318089 < 16384)) {
      Temporary8 = 2;
      }
      else {
      if ((uHEX60gensym185_503318089 < 2097152)) {
      Temporary8 = 3;
      }
      else {
      if ((uHEX60gensym185_503318089 < 268435456)) {
      Temporary8 = 4;
      }
      else {
      Temporary8 = 5;
      }
      }}}
      addedHEX60gensym174_503318067 = addInt(addedHEX60gensym174_503318067, Temporary8);
      b_503318024[b_503318024_Idx].stack[pHEX60gensym174_503318039].encodedSize = addInt(b_503318024[b_503318024_Idx].stack[pHEX60gensym174_503318039].encodedSize, addedHEX60gensym174_503318067);
      Temporary9 = vHEX60gensym174_503318051;
      vHEX60gensym174_503318051 = genericReset(vHEX60gensym174_503318051, NTI1308622852);
      b_503318024[b_503318024_Idx].stack.push(Temporary9);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addBool_503318106(b_503318108, b_503318108_Idx, k_503318109, v_503318110) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
      var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary13;
      var Temporary14;

    if (((b_503318108[b_503318108_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym190_503318124 = (Temporary1 = HEX5BHEX5D_1308623042(b_503318108[b_503318108_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503318108[b_503318108_Idx].stack[pHEX60gensym190_503318124].tag == 5)) {
      var Temporary2 = b_503318108[b_503318108_Idx].stack[pHEX60gensym190_503318124];
      if (ConstSet47[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      if ((k_503318109 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((k_503318109 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((k_503318109 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var kHEX60gensym190_503318134 = {tag: 6, b: k_503318109, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
      if (v_503318110) {
      Temporary4 = 1;
      }
      else {
      Temporary4 = 0;
      }
      
        if (v_503318110) {
        Temporary6 = 1;
        }
        else {
        Temporary6 = 0;
        }
        
      if ((Temporary6 <= 255)) {
      Temporary5 = 1;
      }
      else {
        if (v_503318110) {
        Temporary7 = 1;
        }
        else {
        Temporary7 = 0;
        }
        
      if ((Temporary7 <= 65535)) {
      Temporary5 = 2;
      }
      else {
        if (v_503318110) {
        Temporary8 = 1;
        }
        else {
        Temporary8 = 0;
        }
        
      if ((Temporary8 <= 16777215)) {
      Temporary5 = 3;
      }
      else {
      Temporary5 = 4;
      }
      }}
      var vHEX60gensym190_503318136 = {tag: 6, b: Temporary4, encodedSize: Temporary5, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym190_503318134.encodedSize)) Temporary9 = false; else {          Temporary9 = (kHEX60gensym190_503318134.encodedSize <= 2147483647);        }      if (!(Temporary9)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym190.encodedSize >= 0 and k`gensym190.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym198_503318151 = (kHEX60gensym190_503318134.encodedSize << 3);
      if ((uHEX60gensym198_503318151 < 128)) {
      Temporary10 = 1;
      }
      else {
      if ((uHEX60gensym198_503318151 < 16384)) {
      Temporary10 = 2;
      }
      else {
      if ((uHEX60gensym198_503318151 < 2097152)) {
      Temporary10 = 3;
      }
      else {
      if ((uHEX60gensym198_503318151 < 268435456)) {
      Temporary10 = 4;
      }
      else {
      Temporary10 = 5;
      }
      }}}
      var addedHEX60gensym190_503318152 = addInt(addInt(kHEX60gensym190_503318134.encodedSize, vHEX60gensym190_503318136.encodedSize), Temporary10);
      Temporary11 = kHEX60gensym190_503318134;
      kHEX60gensym190_503318134 = genericReset(kHEX60gensym190_503318134, NTI1308622852);
      b_503318108[b_503318108_Idx].stack.push(Temporary11);;
        if (!(0 <= vHEX60gensym190_503318136.encodedSize)) Temporary12 = false; else {          Temporary12 = (vHEX60gensym190_503318136.encodedSize <= 2147483647);        }      if (!(Temporary12)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym190.encodedSize >= 0 and v`gensym190.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym202_503318174 = (vHEX60gensym190_503318136.encodedSize << 3);
      if ((uHEX60gensym202_503318174 < 128)) {
      Temporary13 = 1;
      }
      else {
      if ((uHEX60gensym202_503318174 < 16384)) {
      Temporary13 = 2;
      }
      else {
      if ((uHEX60gensym202_503318174 < 2097152)) {
      Temporary13 = 3;
      }
      else {
      if ((uHEX60gensym202_503318174 < 268435456)) {
      Temporary13 = 4;
      }
      else {
      Temporary13 = 5;
      }
      }}}
      addedHEX60gensym190_503318152 = addInt(addedHEX60gensym190_503318152, Temporary13);
      b_503318108[b_503318108_Idx].stack[pHEX60gensym190_503318124].encodedSize = addInt(b_503318108[b_503318108_Idx].stack[pHEX60gensym190_503318124].encodedSize, addedHEX60gensym190_503318152);
      Temporary14 = vHEX60gensym190_503318136;
      vHEX60gensym190_503318136 = genericReset(vHEX60gensym190_503318136, NTI1308622852);
      b_503318108[b_503318108_Idx].stack.push(Temporary14);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addInt_503318191(b_503318193, b_503318193_Idx, k_503318194, i_503318195) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
      var Temporary8;
      var Temporary9;

    if (((b_503318193[b_503318193_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym207_503318209 = (Temporary1 = HEX5BHEX5D_1308623042(b_503318193[b_503318193_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503318193[b_503318193_Idx].stack[pHEX60gensym207_503318209].tag == 5)) {
      var Temporary2 = b_503318193[b_503318193_Idx].stack[pHEX60gensym207_503318209];
      if (ConstSet48[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      if ((k_503318194 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((k_503318194 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((k_503318194 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var kHEX60gensym207_503318219 = {tag: 6, b: k_503318194, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
      var vHEX60gensym207_503318220 = {tag: 2, i: i_503318195, encodedSize: 4, str: [], cstr: null, buf: null, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym207_503318219.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym207_503318219.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym207.encodedSize >= 0 and k`gensym207.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym214_503318235 = (kHEX60gensym207_503318219.encodedSize << 3);
      if ((uHEX60gensym214_503318235 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym214_503318235 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym214_503318235 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym214_503318235 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym207_503318236 = addInt(addInt(kHEX60gensym207_503318219.encodedSize, vHEX60gensym207_503318220.encodedSize), Temporary5);
      Temporary6 = kHEX60gensym207_503318219;
      kHEX60gensym207_503318219 = genericReset(kHEX60gensym207_503318219, NTI1308622852);
      b_503318193[b_503318193_Idx].stack.push(Temporary6);;
        if (!(0 <= vHEX60gensym207_503318220.encodedSize)) Temporary7 = false; else {          Temporary7 = (vHEX60gensym207_503318220.encodedSize <= 2147483647);        }      if (!(Temporary7)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym207.encodedSize >= 0 and v`gensym207.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym218_503318258 = (vHEX60gensym207_503318220.encodedSize << 3);
      if ((uHEX60gensym218_503318258 < 128)) {
      Temporary8 = 1;
      }
      else {
      if ((uHEX60gensym218_503318258 < 16384)) {
      Temporary8 = 2;
      }
      else {
      if ((uHEX60gensym218_503318258 < 2097152)) {
      Temporary8 = 3;
      }
      else {
      if ((uHEX60gensym218_503318258 < 268435456)) {
      Temporary8 = 4;
      }
      else {
      Temporary8 = 5;
      }
      }}}
      addedHEX60gensym207_503318236 = addInt(addedHEX60gensym207_503318236, Temporary8);
      b_503318193[b_503318193_Idx].stack[pHEX60gensym207_503318209].encodedSize = addInt(b_503318193[b_503318193_Idx].stack[pHEX60gensym207_503318209].encodedSize, addedHEX60gensym207_503318236);
      Temporary9 = vHEX60gensym207_503318220;
      vHEX60gensym207_503318220 = genericReset(vHEX60gensym207_503318220, NTI1308622852);
      b_503318193[b_503318193_Idx].stack.push(Temporary9);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addDouble_503318275(b_503318277, b_503318277_Idx, k_503318278, d_503318279) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
      var Temporary8;
      var Temporary9;

    if (((b_503318277[b_503318277_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym223_503318293 = (Temporary1 = HEX5BHEX5D_1308623042(b_503318277[b_503318277_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503318277[b_503318277_Idx].stack[pHEX60gensym223_503318293].tag == 5)) {
      var Temporary2 = b_503318277[b_503318277_Idx].stack[pHEX60gensym223_503318293];
      if (ConstSet49[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      if ((k_503318278 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((k_503318278 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((k_503318278 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var kHEX60gensym223_503318303 = {tag: 6, b: k_503318278, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
      var vHEX60gensym223_503318304 = {tag: 3, d: d_503318279, encodedSize: 8, str: [], cstr: null, buf: null, i: 0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym223_503318303.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym223_503318303.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym223.encodedSize >= 0 and k`gensym223.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym230_503318319 = (kHEX60gensym223_503318303.encodedSize << 3);
      if ((uHEX60gensym230_503318319 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym230_503318319 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym230_503318319 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym230_503318319 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym223_503318320 = addInt(addInt(kHEX60gensym223_503318303.encodedSize, vHEX60gensym223_503318304.encodedSize), Temporary5);
      Temporary6 = kHEX60gensym223_503318303;
      kHEX60gensym223_503318303 = genericReset(kHEX60gensym223_503318303, NTI1308622852);
      b_503318277[b_503318277_Idx].stack.push(Temporary6);;
        if (!(0 <= vHEX60gensym223_503318304.encodedSize)) Temporary7 = false; else {          Temporary7 = (vHEX60gensym223_503318304.encodedSize <= 2147483647);        }      if (!(Temporary7)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym223.encodedSize >= 0 and v`gensym223.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym234_503318342 = (vHEX60gensym223_503318304.encodedSize << 3);
      if ((uHEX60gensym234_503318342 < 128)) {
      Temporary8 = 1;
      }
      else {
      if ((uHEX60gensym234_503318342 < 16384)) {
      Temporary8 = 2;
      }
      else {
      if ((uHEX60gensym234_503318342 < 2097152)) {
      Temporary8 = 3;
      }
      else {
      if ((uHEX60gensym234_503318342 < 268435456)) {
      Temporary8 = 4;
      }
      else {
      Temporary8 = 5;
      }
      }}}
      addedHEX60gensym223_503318320 = addInt(addedHEX60gensym223_503318320, Temporary8);
      b_503318277[b_503318277_Idx].stack[pHEX60gensym223_503318293].encodedSize = addInt(b_503318277[b_503318277_Idx].stack[pHEX60gensym223_503318293].encodedSize, addedHEX60gensym223_503318320);
      Temporary9 = vHEX60gensym223_503318304;
      vHEX60gensym223_503318304 = genericReset(vHEX60gensym223_503318304, NTI1308622852);
      b_503318277[b_503318277_Idx].stack.push(Temporary9);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addString_503318359(b_503318362, b_503318362_Idx, k_503318363, s_503318364) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
      var Temporary8;
      var Temporary9;

    if (((b_503318362[b_503318362_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym239_503318378 = (Temporary1 = HEX5BHEX5D_1308623042(b_503318362[b_503318362_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503318362[b_503318362_Idx].stack[pHEX60gensym239_503318378].tag == 5)) {
      var Temporary2 = b_503318362[b_503318362_Idx].stack[pHEX60gensym239_503318378];
      if (ConstSet50[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      if ((k_503318363 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((k_503318363 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((k_503318363 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var kHEX60gensym239_503318388 = {tag: 6, b: k_503318363, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
      var vHEX60gensym239_503318389 = {tag: 9, cstr: s_503318364, encodedSize: Buffer.byteLength(s_503318364), str: [], buf: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym239_503318388.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym239_503318388.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym239.encodedSize >= 0 and k`gensym239.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym246_503318404 = (kHEX60gensym239_503318388.encodedSize << 3);
      if ((uHEX60gensym246_503318404 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym246_503318404 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym246_503318404 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym246_503318404 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym239_503318405 = addInt(addInt(kHEX60gensym239_503318388.encodedSize, vHEX60gensym239_503318389.encodedSize), Temporary5);
      Temporary6 = kHEX60gensym239_503318388;
      kHEX60gensym239_503318388 = genericReset(kHEX60gensym239_503318388, NTI1308622852);
      b_503318362[b_503318362_Idx].stack.push(Temporary6);;
        if (!(0 <= vHEX60gensym239_503318389.encodedSize)) Temporary7 = false; else {          Temporary7 = (vHEX60gensym239_503318389.encodedSize <= 2147483647);        }      if (!(Temporary7)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym239.encodedSize >= 0 and v`gensym239.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym250_503318427 = (vHEX60gensym239_503318389.encodedSize << 3);
      if ((uHEX60gensym250_503318427 < 128)) {
      Temporary8 = 1;
      }
      else {
      if ((uHEX60gensym250_503318427 < 16384)) {
      Temporary8 = 2;
      }
      else {
      if ((uHEX60gensym250_503318427 < 2097152)) {
      Temporary8 = 3;
      }
      else {
      if ((uHEX60gensym250_503318427 < 268435456)) {
      Temporary8 = 4;
      }
      else {
      Temporary8 = 5;
      }
      }}}
      addedHEX60gensym239_503318405 = addInt(addedHEX60gensym239_503318405, Temporary8);
      b_503318362[b_503318362_Idx].stack[pHEX60gensym239_503318378].encodedSize = addInt(b_503318362[b_503318362_Idx].stack[pHEX60gensym239_503318378].encodedSize, addedHEX60gensym239_503318405);
      Temporary9 = vHEX60gensym239_503318389;
      vHEX60gensym239_503318389 = genericReset(vHEX60gensym239_503318389, NTI1308622852);
      b_503318362[b_503318362_Idx].stack.push(Temporary9);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addBuffer_503318444(b_503318446, b_503318446_Idx, k_503318447, buf_503318448) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
      var Temporary8;
      var Temporary9;

    if (((b_503318446[b_503318446_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym255_503318462 = (Temporary1 = HEX5BHEX5D_1308623042(b_503318446[b_503318446_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503318446[b_503318446_Idx].stack[pHEX60gensym255_503318462].tag == 5)) {
      var Temporary2 = b_503318446[b_503318446_Idx].stack[pHEX60gensym255_503318462];
      if (ConstSet51[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      if ((k_503318447 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((k_503318447 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((k_503318447 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var kHEX60gensym255_503318472 = {tag: 6, b: k_503318447, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
      var vHEX60gensym255_503318473 = {tag: 1, buf: buf_503318448, encodedSize: buf_503318448.length, str: [], cstr: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym255_503318472.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym255_503318472.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym255.encodedSize >= 0 and k`gensym255.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym262_503318488 = (kHEX60gensym255_503318472.encodedSize << 3);
      if ((uHEX60gensym262_503318488 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym262_503318488 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym262_503318488 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym262_503318488 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym255_503318489 = addInt(addInt(kHEX60gensym255_503318472.encodedSize, vHEX60gensym255_503318473.encodedSize), Temporary5);
      Temporary6 = kHEX60gensym255_503318472;
      kHEX60gensym255_503318472 = genericReset(kHEX60gensym255_503318472, NTI1308622852);
      b_503318446[b_503318446_Idx].stack.push(Temporary6);;
        if (!(0 <= vHEX60gensym255_503318473.encodedSize)) Temporary7 = false; else {          Temporary7 = (vHEX60gensym255_503318473.encodedSize <= 2147483647);        }      if (!(Temporary7)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym255.encodedSize >= 0 and v`gensym255.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym266_503318511 = (vHEX60gensym255_503318473.encodedSize << 3);
      if ((uHEX60gensym266_503318511 < 128)) {
      Temporary8 = 1;
      }
      else {
      if ((uHEX60gensym266_503318511 < 16384)) {
      Temporary8 = 2;
      }
      else {
      if ((uHEX60gensym266_503318511 < 2097152)) {
      Temporary8 = 3;
      }
      else {
      if ((uHEX60gensym266_503318511 < 268435456)) {
      Temporary8 = 4;
      }
      else {
      Temporary8 = 5;
      }
      }}}
      addedHEX60gensym255_503318489 = addInt(addedHEX60gensym255_503318489, Temporary8);
      b_503318446[b_503318446_Idx].stack[pHEX60gensym255_503318462].encodedSize = addInt(b_503318446[b_503318446_Idx].stack[pHEX60gensym255_503318462].encodedSize, addedHEX60gensym255_503318489);
      Temporary9 = vHEX60gensym255_503318473;
      vHEX60gensym255_503318473 = genericReset(vHEX60gensym255_503318473, NTI1308622852);
      b_503318446[b_503318446_Idx].stack.push(Temporary9);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function startArray_503318528(b_503318530, b_503318530_Idx, key_503318531) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;

    if (((b_503318530[b_503318530_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym271_503318545 = (Temporary1 = HEX5BHEX5D_1308623042(b_503318530[b_503318530_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503318530[b_503318530_Idx].stack[pHEX60gensym271_503318545].tag == 5)) {
      var Temporary2 = b_503318530[b_503318530_Idx].stack[pHEX60gensym271_503318545];
      if (ConstSet52[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      if ((key_503318531 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((key_503318531 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((key_503318531 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var kHEX60gensym271_503318555 = {tag: 6, b: key_503318531, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
      var vHEX60gensym271_503318565 = {tag: 4, size: 0, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, ext: null};
        if (!(0 <= kHEX60gensym271_503318555.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym271_503318555.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym271.encodedSize >= 0 and k`gensym271.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym278_503318580 = (kHEX60gensym271_503318555.encodedSize << 3);
      if ((uHEX60gensym278_503318580 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym278_503318580 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym278_503318580 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym278_503318580 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym271_503318581 = addInt(addInt(kHEX60gensym271_503318555.encodedSize, vHEX60gensym271_503318565.encodedSize), Temporary5);
      Temporary6 = kHEX60gensym271_503318555;
      kHEX60gensym271_503318555 = genericReset(kHEX60gensym271_503318555, NTI1308622852);
      b_503318530[b_503318530_Idx].stack.push(Temporary6);;
      b_503318530[b_503318530_Idx].pointers.push((b_503318530[b_503318530_Idx].stack).length);;
      b_503318530[b_503318530_Idx].stack[pHEX60gensym271_503318545].encodedSize = addInt(b_503318530[b_503318530_Idx].stack[pHEX60gensym271_503318545].encodedSize, addedHEX60gensym271_503318581);
      Temporary7 = vHEX60gensym271_503318565;
      vHEX60gensym271_503318565 = genericReset(vHEX60gensym271_503318565, NTI1308622852);
      b_503318530[b_503318530_Idx].stack.push(Temporary7);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addNode_503318633(builder_503318638, builder_503318638_Idx, obj_503318639, keyDict_503318641) {
    var nodeKind_503318642 = dnKind_503316618(obj_503318639);
    switch (nodeKind_503318642) {
    case 0:
      break;
    case 1:
      addNull_1308623663(builder_503318638, builder_503318638_Idx);
      break;
    case 2:
      addBool_1308623587(builder_503318638, builder_503318638_Idx, toBool_503316544(obj_503318639));
      break;
    case 3:
      addInt_1308623225(builder_503318638, builder_503318638_Idx, toInt_503316535(obj_503318639));
      break;
    case 4:
      addDouble_1308623300(builder_503318638, builder_503318638_Idx, toDouble_503316538(obj_503318639));
      break;
    case 5:
      addString_503317361(builder_503318638, builder_503318638_Idx, toString_503316541(obj_503318639));
      break;
    case 6:
      addBuffer_1308623379(builder_503318638, builder_503318638_Idx, toBuffer_503316547(obj_503318639));
      break;
    case 8:
      startArray_1308623136(builder_503318638, builder_503318638_Idx);
      Label1: do {
        var value_503318647 = null;
        var v_503322529 = null;
        for (var k in obj_503318639) {
          if (!obj_503318639.hasOwnProperty(k)) continue;
          v_503322529=obj_503318639[k];
        value_503318647 = v_503322529;
        addNode_503318633(builder_503318638, builder_503318638_Idx, value_503318647, keyDict_503318641);
        }
      } while (false);
      endArray_1308623848(builder_503318638, builder_503318638_Idx);
      break;
    case 9:
      startMap_1308622970(builder_503318638, builder_503318638_Idx);
      Label2: do {
        var key_503318673 = null;
        var value_503318674 = null;
        Label3: do {
          var key_503322532 = null;
          var value_503322533 = null;
          var k_503322534 = null;
          var v_503322535 = null;
          for (var k_503322534 in obj_503318639) {
            if (!obj_503318639.hasOwnProperty(k_503322534)) continue;
            v_503322535=obj_503318639[k_503322534];
          key_503322532 = k_503322534;
          value_503322533 = v_503322535;
          key_503318673 = key_503322532;
          value_503318674 = (value_503322533);
          var resultHEX60gensym287_503318688 = keyDict_503318641.map[key_503318673];
          if ((resultHEX60gensym287_503318688 === undefined)) {
          resultHEX60gensym287_503318688 = (keyDict_503318641.values).length;
          keyDict_503318641.map[key_503318673] = resultHEX60gensym287_503318688;
          keyDict_503318641.values.push(key_503318673);;
          }
          
          var atom_503318712 = resultHEX60gensym287_503318688;
          addNodeWithKey_503318013(builder_503318638, builder_503318638_Idx, atom_503318712, value_503318674, keyDict_503318641);
          }
        } while (false);
      } while (false);
      endMap_1308623910(builder_503318638, builder_503318638_Idx);
      break;
    case 7:
      addBipfBuffer_1308623454(builder_503318638, builder_503318638_Idx, toBipfBuffer_503316550(obj_503318639));
      break;
    case 10:
      addAtom_1308623511(builder_503318638, builder_503318638_Idx, toAtom_503316581(obj_503318639));
      break;
    }

  
}

function startMap_503318737(b_503318739, b_503318739_Idx, key_503318740) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;

    if (((b_503318739[b_503318739_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym289_503318754 = (Temporary1 = HEX5BHEX5D_1308623042(b_503318739[b_503318739_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503318739[b_503318739_Idx].stack[pHEX60gensym289_503318754].tag == 5)) {
      var Temporary2 = b_503318739[b_503318739_Idx].stack[pHEX60gensym289_503318754];
      if (ConstSet53[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      if ((key_503318740 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((key_503318740 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((key_503318740 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var kHEX60gensym289_503318764 = {tag: 6, b: key_503318740, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
      var vHEX60gensym289_503318774 = {tag: 5, size: 0, encodedSize: 0, str: [], cstr: null, buf: null, i: 0, d: 0.0, b: 0, ext: null};
        if (!(0 <= kHEX60gensym289_503318764.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym289_503318764.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym289.encodedSize >= 0 and k`gensym289.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym296_503318789 = (kHEX60gensym289_503318764.encodedSize << 3);
      if ((uHEX60gensym296_503318789 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym296_503318789 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym296_503318789 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym296_503318789 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym289_503318790 = addInt(addInt(kHEX60gensym289_503318764.encodedSize, vHEX60gensym289_503318774.encodedSize), Temporary5);
      Temporary6 = kHEX60gensym289_503318764;
      kHEX60gensym289_503318764 = genericReset(kHEX60gensym289_503318764, NTI1308622852);
      b_503318739[b_503318739_Idx].stack.push(Temporary6);;
      b_503318739[b_503318739_Idx].pointers.push((b_503318739[b_503318739_Idx].stack).length);;
      b_503318739[b_503318739_Idx].stack[pHEX60gensym289_503318754].encodedSize = addInt(b_503318739[b_503318739_Idx].stack[pHEX60gensym289_503318754].encodedSize, addedHEX60gensym289_503318790);
      Temporary7 = vHEX60gensym289_503318774;
      vHEX60gensym289_503318774 = genericReset(vHEX60gensym289_503318774, NTI1308622852);
      b_503318739[b_503318739_Idx].stack.push(Temporary7);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addBipfBuffer_503318889(b_503318891, b_503318891_Idx, k_503318892, buf_503318893) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;

    if (((b_503318891[b_503318891_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym303_503318907 = (Temporary1 = HEX5BHEX5D_1308623042(b_503318891[b_503318891_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503318891[b_503318891_Idx].stack[pHEX60gensym303_503318907].tag == 5)) {
      var Temporary2 = b_503318891[b_503318891_Idx].stack[pHEX60gensym303_503318907];
      if (ConstSet54[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      if ((k_503318892 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((k_503318892 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((k_503318892 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var kHEX60gensym303_503318917 = {tag: 6, b: k_503318892, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
      var vHEX60gensym303_503318919 = {tag: 8, buf: buf_503318893, encodedSize: buf_503318893.length, str: [], cstr: null, i: 0, d: 0.0, b: 0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym303_503318917.encodedSize)) Temporary4 = false; else {          Temporary4 = (kHEX60gensym303_503318917.encodedSize <= 2147483647);        }      if (!(Temporary4)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym303.encodedSize >= 0 and k`gensym303.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym310_503318934 = (kHEX60gensym303_503318917.encodedSize << 3);
      if ((uHEX60gensym310_503318934 < 128)) {
      Temporary5 = 1;
      }
      else {
      if ((uHEX60gensym310_503318934 < 16384)) {
      Temporary5 = 2;
      }
      else {
      if ((uHEX60gensym310_503318934 < 2097152)) {
      Temporary5 = 3;
      }
      else {
      if ((uHEX60gensym310_503318934 < 268435456)) {
      Temporary5 = 4;
      }
      else {
      Temporary5 = 5;
      }
      }}}
      var addedHEX60gensym303_503318935 = addInt(addInt(kHEX60gensym303_503318917.encodedSize, vHEX60gensym303_503318919.encodedSize), Temporary5);
      Temporary6 = kHEX60gensym303_503318917;
      kHEX60gensym303_503318917 = genericReset(kHEX60gensym303_503318917, NTI1308622852);
      b_503318891[b_503318891_Idx].stack.push(Temporary6);;
      b_503318891[b_503318891_Idx].stack[pHEX60gensym303_503318907].encodedSize = addInt(b_503318891[b_503318891_Idx].stack[pHEX60gensym303_503318907].encodedSize, addedHEX60gensym303_503318935);
      Temporary7 = vHEX60gensym303_503318919;
      vHEX60gensym303_503318919 = genericReset(vHEX60gensym303_503318919, NTI1308622852);
      b_503318891[b_503318891_Idx].stack.push(Temporary7);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addAtom_503318955(b_503318957, b_503318957_Idx, k_503318958, v_503318959) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary8;
      var Temporary9;
      var Temporary10;

    if (((b_503318957[b_503318957_Idx].pointers).length == 0)) {
    raiseException({message: makeNimstrLit("Cannot add value with a key at root"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    else {
      var pHEX60gensym315_503318973 = (Temporary1 = HEX5BHEX5D_1308623042(b_503318957[b_503318957_Idx].pointers, 1), Temporary1)[0][Temporary1[1]];
      if ((b_503318957[b_503318957_Idx].stack[pHEX60gensym315_503318973].tag == 5)) {
      var Temporary2 = b_503318957[b_503318957_Idx].stack[pHEX60gensym315_503318973];
      if (ConstSet55[Temporary2.tag]===undefined) { raiseFieldError2(makeNimstrLit("field \'size\' is not accessible for type \'StackValue\' using \'tag = "), reprDiscriminant(Temporary2.tag, NTI1308622851)); }
      Temporary2.size = addInt(Temporary2.size, 1);
      if ((k_503318958 <= 255)) {
      Temporary3 = 1;
      }
      else {
      if ((k_503318958 <= 65535)) {
      Temporary3 = 2;
      }
      else {
      if ((k_503318958 <= 16777215)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = 4;
      }
      }}
      var kHEX60gensym315_503318983 = {tag: 6, b: k_503318958, encodedSize: Temporary3, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
      if ((v_503318959 <= 255)) {
      Temporary4 = 1;
      }
      else {
      if ((v_503318959 <= 65535)) {
      Temporary4 = 2;
      }
      else {
      if ((v_503318959 <= 16777215)) {
      Temporary4 = 3;
      }
      else {
      Temporary4 = 4;
      }
      }}
      var vHEX60gensym315_503318985 = {tag: 6, b: v_503318959, encodedSize: Temporary4, str: [], cstr: null, buf: null, i: 0, d: 0.0, ext: null, size: 0};
        if (!(0 <= kHEX60gensym315_503318983.encodedSize)) Temporary5 = false; else {          Temporary5 = (kHEX60gensym315_503318983.encodedSize <= 2147483647);        }      if (!(Temporary5)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `k`gensym315.encodedSize >= 0 and k`gensym315.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym323_503319000 = (kHEX60gensym315_503318983.encodedSize << 3);
      if ((uHEX60gensym323_503319000 < 128)) {
      Temporary6 = 1;
      }
      else {
      if ((uHEX60gensym323_503319000 < 16384)) {
      Temporary6 = 2;
      }
      else {
      if ((uHEX60gensym323_503319000 < 2097152)) {
      Temporary6 = 3;
      }
      else {
      if ((uHEX60gensym323_503319000 < 268435456)) {
      Temporary6 = 4;
      }
      else {
      Temporary6 = 5;
      }
      }}}
      var addedHEX60gensym315_503319001 = addInt(addInt(kHEX60gensym315_503318983.encodedSize, vHEX60gensym315_503318985.encodedSize), Temporary6);
      Temporary7 = kHEX60gensym315_503318983;
      kHEX60gensym315_503318983 = genericReset(kHEX60gensym315_503318983, NTI1308622852);
      b_503318957[b_503318957_Idx].stack.push(Temporary7);;
        if (!(0 <= vHEX60gensym315_503318985.encodedSize)) Temporary8 = false; else {          Temporary8 = (vHEX60gensym315_503318985.encodedSize <= 2147483647);        }      if (!(Temporary8)) {
      failedAssertImpl_218103864(makeNimstrLit("builder.nim(106, 10) `v`gensym315.encodedSize >= 0 and v`gensym315.encodedSize <= high(int32)` "));
      }
      
      var uHEX60gensym327_503319023 = (vHEX60gensym315_503318985.encodedSize << 3);
      if ((uHEX60gensym327_503319023 < 128)) {
      Temporary9 = 1;
      }
      else {
      if ((uHEX60gensym327_503319023 < 16384)) {
      Temporary9 = 2;
      }
      else {
      if ((uHEX60gensym327_503319023 < 2097152)) {
      Temporary9 = 3;
      }
      else {
      if ((uHEX60gensym327_503319023 < 268435456)) {
      Temporary9 = 4;
      }
      else {
      Temporary9 = 5;
      }
      }}}
      addedHEX60gensym315_503319001 = addInt(addedHEX60gensym315_503319001, Temporary9);
      b_503318957[b_503318957_Idx].stack[pHEX60gensym315_503318973].encodedSize = addInt(b_503318957[b_503318957_Idx].stack[pHEX60gensym315_503318973].encodedSize, addedHEX60gensym315_503319001);
      Temporary10 = vHEX60gensym315_503318985;
      vHEX60gensym315_503318985 = genericReset(vHEX60gensym315_503318985, NTI1308622852);
      b_503318957[b_503318957_Idx].stack.push(Temporary10);;
      }
      else {
        raiseException({message: makeNimstrLit("Cannot add a value with a key in an array"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
      }
      
    }
    

  
}

function addNodeWithKey_503318013(builder_503318017, builder_503318017_Idx, key_503318018, obj_503318019, keyDict_503318020) {
    var nodeKind_503318021 = dnKind_503316618(obj_503318019);
    switch (nodeKind_503318021) {
    case 0:
      break;
    case 1:
      addNull_503318022(builder_503318017, builder_503318017_Idx, key_503318018);
      break;
    case 2:
      addBool_503318106(builder_503318017, builder_503318017_Idx, key_503318018, toBool_503316544(obj_503318019));
      break;
    case 3:
      addInt_503318191(builder_503318017, builder_503318017_Idx, key_503318018, toInt_503316535(obj_503318019));
      break;
    case 4:
      addDouble_503318275(builder_503318017, builder_503318017_Idx, key_503318018, toDouble_503316538(obj_503318019));
      break;
    case 5:
      addString_503318359(builder_503318017, builder_503318017_Idx, key_503318018, toString_503316541(obj_503318019));
      break;
    case 6:
      addBuffer_503318444(builder_503318017, builder_503318017_Idx, key_503318018, toBuffer_503316547(obj_503318019));
      break;
    case 8:
      startArray_503318528(builder_503318017, builder_503318017_Idx, key_503318018);
      Label1: do {
        var value_503318616 = null;
        var v_503322521 = null;
        for (var k in obj_503318019) {
          if (!obj_503318019.hasOwnProperty(k)) continue;
          v_503322521=obj_503318019[k];
        value_503318616 = v_503322521;
        addNode_503318633(builder_503318017, builder_503318017_Idx, value_503318616, keyDict_503318020);
        }
      } while (false);
      endArray_1308623848(builder_503318017, builder_503318017_Idx);
      break;
    case 9:
      startMap_503318737(builder_503318017, builder_503318017_Idx, key_503318018);
      Label2: do {
        var key_503318825 = null;
        var value_503318826 = null;
        Label3: do {
          var key_503322524 = null;
          var value_503322525 = null;
          var k_503322526 = null;
          var v_503322527 = null;
          for (var k_503322526 in obj_503318019) {
            if (!obj_503318019.hasOwnProperty(k_503322526)) continue;
            v_503322527=obj_503318019[k_503322526];
          key_503322524 = k_503322526;
          value_503322525 = v_503322527;
          key_503318825 = key_503322524;
          value_503318826 = (value_503322525);
          var resultHEX60gensym301_503318840 = keyDict_503318020.map[key_503318825];
          if ((resultHEX60gensym301_503318840 === undefined)) {
          resultHEX60gensym301_503318840 = (keyDict_503318020.values).length;
          keyDict_503318020.map[key_503318825] = resultHEX60gensym301_503318840;
          keyDict_503318020.values.push(key_503318825);;
          }
          
          var atom_503318864 = resultHEX60gensym301_503318840;
          addNodeWithKey_503318013(builder_503318017, builder_503318017_Idx, atom_503318864, value_503318826, keyDict_503318020);
          }
        } while (false);
      } while (false);
      endMap_1308623910(builder_503318017, builder_503318017_Idx);
      break;
    case 7:
      addBipfBuffer_503318889(builder_503318017, builder_503318017_Idx, key_503318018, toBipfBuffer_503316550(obj_503318019));
      break;
    case 10:
      addAtom_503318955(builder_503318017, builder_503318017_Idx, key_503318018, toAtom_503316581(obj_503318019));
      break;
    }

  
}

function addNode_503319138(builder_503319143, builder_503319143_Idx, obj_503319144, keyDict_503319146) {
    var nodeKind_503319147 = dnKind_503316618(obj_503319144);
    switch (nodeKind_503319147) {
    case 0:
      break;
    case 1:
      addNull_1308623663(builder_503319143, builder_503319143_Idx);
      break;
    case 2:
      addBool_1308623587(builder_503319143, builder_503319143_Idx, toBool_503316544(obj_503319144));
      break;
    case 3:
      addInt_1308623225(builder_503319143, builder_503319143_Idx, toInt_503316535(obj_503319144));
      break;
    case 4:
      addDouble_1308623300(builder_503319143, builder_503319143_Idx, toDouble_503316538(obj_503319144));
      break;
    case 5:
      addString_503317361(builder_503319143, builder_503319143_Idx, toString_503316541(obj_503319144));
      break;
    case 6:
      addBuffer_1308623379(builder_503319143, builder_503319143_Idx, toBuffer_503316547(obj_503319144));
      break;
    case 8:
      startArray_1308623136(builder_503319143, builder_503319143_Idx);
      Label1: do {
        var value_503319152 = null;
        var v_503322513 = null;
        for (var k in obj_503319144) {
          if (!obj_503319144.hasOwnProperty(k)) continue;
          v_503322513=obj_503319144[k];
        value_503319152 = v_503322513;
        addNode_503319138(builder_503319143, builder_503319143_Idx, value_503319152, keyDict_503319146);
        }
      } while (false);
      endArray_1308623848(builder_503319143, builder_503319143_Idx);
      break;
    case 9:
      startMap_1308622970(builder_503319143, builder_503319143_Idx);
      Label2: do {
        var key_503319178 = null;
        var value_503319179 = null;
        Label3: do {
          var key_503322516 = null;
          var value_503322517 = null;
          var k_503322518 = null;
          var v_503322519 = null;
          for (var k_503322518 in obj_503319144) {
            if (!obj_503319144.hasOwnProperty(k_503322518)) continue;
            v_503322519=obj_503319144[k_503322518];
          key_503322516 = k_503322518;
          value_503322517 = v_503322519;
          key_503319178 = key_503322516;
          value_503319179 = (value_503322517);
          var resultHEX60gensym337_503319193 = keyDict_503319146.map[key_503319178];
          if ((resultHEX60gensym337_503319193 === undefined)) {
          resultHEX60gensym337_503319193 = (keyDict_503319146.values).length;
          keyDict_503319146.map[key_503319178] = resultHEX60gensym337_503319193;
          keyDict_503319146.values.push(key_503319178);;
          }
          
          var atom_503319217 = resultHEX60gensym337_503319193;
          addNodeWithKey_503318013(builder_503319143, builder_503319143_Idx, atom_503319217, value_503319179, keyDict_503319146);
          }
        } while (false);
      } while (false);
      endMap_1308623910(builder_503319143, builder_503319143_Idx);
      break;
    case 7:
      addBipfBuffer_1308623454(builder_503319143, builder_503319143_Idx, toBipfBuffer_503316550(obj_503319144));
      break;
    case 10:
      addAtom_1308623511(builder_503319143, builder_503319143_Idx, toAtom_503316581(obj_503319144));
      break;
    }

  
}

function addJsObjectWithKeyDict_503319118(b_503319119, b_503319119_Idx, node_503319120, keyDict_503319121) {
    addNode_503319138(b_503319119, b_503319119_Idx, node_503319120, keyDict_503319121);

  
}

function serialize_503319688(obj_503319689, maybeKeyDict_503319690) {
  var result_503319691 = null;

    var builder_503319692 = [newBipfBuilder_503319259()];
    if ((maybeKeyDict_503319690 === undefined)) {
    addJsObject_503317751(builder_503319692, 0, obj_503319689);
    }
    else {
    addJsObjectWithKeyDict_503319118(builder_503319692, 0, obj_503319689, maybeKeyDict_503319690);
    }
    
    result_503319691 = finish_1308624042(builder_503319692, 0);
    (result_503319691)[bipfBufferSymbol_503316507[0]] = true;

  return result_503319691;

}

function newSeq_503319980(len_503319982) {
  var result_503319983 = [];

    result_503319983 = new Array(len_503319982); for (var i = 0 ; i < len_503319982 ; ++i) { result_503319983[i] = null; }
  return result_503319983;

}

function deserializeMap_503320119(ctx_503320121, ctx_503320121_Idx, buffer_503320125, p_503320126, p_503320126_Idx, size_503320127) {
          var Temporary4;
              var Temporary10;
              var Temporary11;

  var result_503320131 = null;

    result_503320131 = {};
    var endOffset_503320133 = (p_503320126[p_503320126_Idx] + size_503320127);
    Label1: do {
        Label2: while (true) {
        if (!(p_503320126[p_503320126_Idx] < endOffset_503320133)) break Label2;
          var bHEX60gensym435_503320137 = buffer_503320125[p_503320126[p_503320126_Idx]];
          var resultHEX60gensym435_503320138 = ((bHEX60gensym435_503320137 & 127) >>> 0);
          p_503320126[p_503320126_Idx] += 1;
          if (!(((bHEX60gensym435_503320137 & 128) == 0))) {
          bHEX60gensym435_503320137 = buffer_503320125[p_503320126[p_503320126_Idx]];
          resultHEX60gensym435_503320138 = ((resultHEX60gensym435_503320138 + (((bHEX60gensym435_503320137 & 127) >>> 0) << 7)) >>> 0);
          p_503320126[p_503320126_Idx] += 1;
          if (!(((bHEX60gensym435_503320137 & 128) == 0))) {
          bHEX60gensym435_503320137 = buffer_503320125[p_503320126[p_503320126_Idx]];
          resultHEX60gensym435_503320138 = ((resultHEX60gensym435_503320138 + (((bHEX60gensym435_503320137 & 127) >>> 0) << 14)) >>> 0);
          p_503320126[p_503320126_Idx] += 1;
          if (!(((bHEX60gensym435_503320137 & 128) == 0))) {
          bHEX60gensym435_503320137 = buffer_503320125[p_503320126[p_503320126_Idx]];
          resultHEX60gensym435_503320138 = ((resultHEX60gensym435_503320138 + (((bHEX60gensym435_503320137 & 127) >>> 0) << 21)) >>> 0);
          p_503320126[p_503320126_Idx] += 1;
          if (!(((bHEX60gensym435_503320137 & 128) == 0))) {
          bHEX60gensym435_503320137 = buffer_503320125[p_503320126[p_503320126_Idx]];
          resultHEX60gensym435_503320138 = ((resultHEX60gensym435_503320138 + (((bHEX60gensym435_503320137 & 127) >>> 0) << 28)) >>> 0);
          p_503320126[p_503320126_Idx] += 1;
          if (!(((bHEX60gensym435_503320137 & 128) == 0))) {
          raiseException({message: makeNimstrLit("Malformed Varint"), parent: null, m_type: NTI33555112, name: null, trace: [], up: null}, "Exception");
          }
          
          }
          
          }
          
          }
          
          }
          
          var prefix_503320192 = resultHEX60gensym435_503320138;
          if (!(((prefix_503320192 & 7) == 0))) {
          failedAssertImpl_218103864(makeNimstrLit("deser.nim(44, 14) `prefix.tag == BipfTag.STRING` Expected string, got [formely \'required type:string\']: "));
          }
          
          Label3: do {
            var pendHEX60gensym446_503320209 = (p_503320126[p_503320126_Idx] + (prefix_503320192 >>> 3));
            var resultHEX60gensym446_503320213 = (buffer_503320125.toString('utf8', p_503320126[p_503320126_Idx], pendHEX60gensym446_503320209));
            p_503320126[p_503320126_Idx] = pendHEX60gensym446_503320209;
          } while (false);
          var key_503320214 = resultHEX60gensym446_503320213;
          var bHEX60gensym450_503320225 = buffer_503320125[p_503320126[p_503320126_Idx]];
          var resultHEX60gensym450_503320226 = ((bHEX60gensym450_503320225 & 127) >>> 0);
          p_503320126[p_503320126_Idx] += 1;
          if (!(((bHEX60gensym450_503320225 & 128) == 0))) {
          bHEX60gensym450_503320225 = buffer_503320125[p_503320126[p_503320126_Idx]];
          resultHEX60gensym450_503320226 = ((resultHEX60gensym450_503320226 + (((bHEX60gensym450_503320225 & 127) >>> 0) << 7)) >>> 0);
          p_503320126[p_503320126_Idx] += 1;
          if (!(((bHEX60gensym450_503320225 & 128) == 0))) {
          bHEX60gensym450_503320225 = buffer_503320125[p_503320126[p_503320126_Idx]];
          resultHEX60gensym450_503320226 = ((resultHEX60gensym450_503320226 + (((bHEX60gensym450_503320225 & 127) >>> 0) << 14)) >>> 0);
          p_503320126[p_503320126_Idx] += 1;
          if (!(((bHEX60gensym450_503320225 & 128) == 0))) {
          bHEX60gensym450_503320225 = buffer_503320125[p_503320126[p_503320126_Idx]];
          resultHEX60gensym450_503320226 = ((resultHEX60gensym450_503320226 + (((bHEX60gensym450_503320225 & 127) >>> 0) << 21)) >>> 0);
          p_503320126[p_503320126_Idx] += 1;
          if (!(((bHEX60gensym450_503320225 & 128) == 0))) {
          bHEX60gensym450_503320225 = buffer_503320125[p_503320126[p_503320126_Idx]];
          resultHEX60gensym450_503320226 = ((resultHEX60gensym450_503320226 + (((bHEX60gensym450_503320225 & 127) >>> 0) << 28)) >>> 0);
          p_503320126[p_503320126_Idx] += 1;
          if (!(((bHEX60gensym450_503320225 & 128) == 0))) {
          raiseException({message: makeNimstrLit("Malformed Varint"), parent: null, m_type: NTI33555112, name: null, trace: [], up: null}, "Exception");
          }
          
          }
          
          }
          
          }
          
          }
          
          var prefixHEX60gensym448_503320280 = resultHEX60gensym450_503320226;
          var sizeHEX60gensym448_503320285 = (prefixHEX60gensym448_503320280 >>> 3);
          var tagHEX60gensym448_503320286 = (prefixHEX60gensym448_503320280 & 7);
          switch (tagHEX60gensym448_503320286) {
          case 0:
            Label5: do {
              var pendHEX60gensym459_503320290 = (p_503320126[p_503320126_Idx] + sizeHEX60gensym448_503320285);
              var resultHEX60gensym459_503320294 = (buffer_503320125.toString('utf8', p_503320126[p_503320126_Idx], pendHEX60gensym459_503320290));
              p_503320126[p_503320126_Idx] = pendHEX60gensym459_503320290;
            } while (false);
            Temporary4 = resultHEX60gensym459_503320294;
            break;
          case 1:
            Label6: do {
              var pendHEX60gensym460_503320298 = (p_503320126[p_503320126_Idx] + sizeHEX60gensym448_503320285);
              var resultHEX60gensym460_503320302 = (buffer_503320125.subarray(p_503320126[p_503320126_Idx], pendHEX60gensym460_503320298));
              p_503320126[p_503320126_Idx] = pendHEX60gensym460_503320298;
            } while (false);
            Temporary4 = resultHEX60gensym460_503320302;
            break;
          case 2:
            Label7: do {
              var resultHEX60gensym461_503320308 = (buffer_503320125.readInt32LE(p_503320126[p_503320126_Idx]));
              p_503320126[p_503320126_Idx] += sizeHEX60gensym448_503320285;
            } while (false);
            Temporary4 = resultHEX60gensym461_503320308;
            break;
          case 3:
            Label8: do {
              var resultHEX60gensym462_503320318 = (buffer_503320125.readDoubleLE(p_503320126[p_503320126_Idx]));
              p_503320126[p_503320126_Idx] += sizeHEX60gensym448_503320285;
            } while (false);
            Temporary4 = resultHEX60gensym462_503320318;
            break;
          case 4:
            Temporary4 = deserializeArray_503319967(ctx_503320121, ctx_503320121_Idx, buffer_503320125, p_503320126, p_503320126_Idx, sizeHEX60gensym448_503320285);
            break;
          case 5:
            Temporary4 = deserializeMap_503320119(ctx_503320121, ctx_503320121_Idx, buffer_503320125, p_503320126, p_503320126_Idx, sizeHEX60gensym448_503320285);
            break;
          case 6:
            Label9: do {
              var lenHEX60gensym468_503320352 = sizeHEX60gensym448_503320285;
              switch (lenHEX60gensym468_503320352) {
              case 0:
                Temporary10 = -1;
                break;
              case 1:
                Temporary10 = (buffer_503320125[p_503320126[p_503320126_Idx]] >>> 0);
                break;
              case 2:
                Temporary10 = (buffer_503320125.readUInt16LE(p_503320126[p_503320126_Idx]) >>> 0);
                break;
              case 3:
                Temporary10 = ((((buffer_503320125[p_503320126[p_503320126_Idx]] >>> 0) << 16) | ((buffer_503320125[(p_503320126[p_503320126_Idx] + 1)] >>> 0) << 8)) | (buffer_503320125[(p_503320126[p_503320126_Idx] + 2)] >>> 0));
                break;
              case 4:
                Temporary10 = buffer_503320125.readUInt32LE(p_503320126[p_503320126_Idx]);
                break;
              default: 
                raiseException({message: (makeNimstrLit("Invalid length for Atom value (must be 0, 1, 2, 3 or 4). Got: ") || []).concat(HEX24_352321539(lenHEX60gensym468_503320352) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
                break;
              }
              var resultHEX60gensym468_503320362 = Temporary10;
              p_503320126[p_503320126_Idx] += lenHEX60gensym468_503320352;
              var resultHEX60gensym467_503320367 = resultHEX60gensym468_503320362;
              switch (resultHEX60gensym467_503320367) {
              case -1:
                Temporary11 = null;
                break;
              case 0:
                Temporary11 = false;
                break;
              case 1:
                Temporary11 = true;
                break;
              default: 
                Temporary11 = (resultHEX60gensym467_503320367);
                break;
              }
            } while (false);
            Temporary4 = Temporary11;
            break;
          case 7:
            Label12: do {
              var pendHEX60gensym470_503320374 = (p_503320126[p_503320126_Idx] + sizeHEX60gensym448_503320285);
              var resultHEX60gensym470_503320378 = (buffer_503320125.subarray(p_503320126[p_503320126_Idx], pendHEX60gensym470_503320374));
              p_503320126[p_503320126_Idx] = pendHEX60gensym470_503320374;
            } while (false);
            Temporary4 = resultHEX60gensym470_503320378;
            break;
          }
          var value_503320379 = Temporary4;
          result_503320131[toString_503316541(key_503320214)] = value_503320379;
        }
    } while (false);

  return result_503320131;

}

function deserializeArray_503319967(ctx_503319969, ctx_503319969_Idx, buffer_503319973, p_503319974, p_503319974_Idx, size_503319975) {
          var Temporary3;
              var Temporary9;
              var Temporary10;

  var result_503319979 = null;

  BeforeRet: do {
    var stack_503319997 = newSeq_503319980(0);
    var endOffset_503319998 = (p_503319974[p_503319974_Idx] + size_503319975);
    Label1: do {
        Label2: while (true) {
        if (!(p_503319974[p_503319974_Idx] < endOffset_503319998)) break Label2;
          var bHEX60gensym416_503320009 = buffer_503319973[p_503319974[p_503319974_Idx]];
          var resultHEX60gensym416_503320010 = ((bHEX60gensym416_503320009 & 127) >>> 0);
          p_503319974[p_503319974_Idx] += 1;
          if (!(((bHEX60gensym416_503320009 & 128) == 0))) {
          bHEX60gensym416_503320009 = buffer_503319973[p_503319974[p_503319974_Idx]];
          resultHEX60gensym416_503320010 = ((resultHEX60gensym416_503320010 + (((bHEX60gensym416_503320009 & 127) >>> 0) << 7)) >>> 0);
          p_503319974[p_503319974_Idx] += 1;
          if (!(((bHEX60gensym416_503320009 & 128) == 0))) {
          bHEX60gensym416_503320009 = buffer_503319973[p_503319974[p_503319974_Idx]];
          resultHEX60gensym416_503320010 = ((resultHEX60gensym416_503320010 + (((bHEX60gensym416_503320009 & 127) >>> 0) << 14)) >>> 0);
          p_503319974[p_503319974_Idx] += 1;
          if (!(((bHEX60gensym416_503320009 & 128) == 0))) {
          bHEX60gensym416_503320009 = buffer_503319973[p_503319974[p_503319974_Idx]];
          resultHEX60gensym416_503320010 = ((resultHEX60gensym416_503320010 + (((bHEX60gensym416_503320009 & 127) >>> 0) << 21)) >>> 0);
          p_503319974[p_503319974_Idx] += 1;
          if (!(((bHEX60gensym416_503320009 & 128) == 0))) {
          bHEX60gensym416_503320009 = buffer_503319973[p_503319974[p_503319974_Idx]];
          resultHEX60gensym416_503320010 = ((resultHEX60gensym416_503320010 + (((bHEX60gensym416_503320009 & 127) >>> 0) << 28)) >>> 0);
          p_503319974[p_503319974_Idx] += 1;
          if (!(((bHEX60gensym416_503320009 & 128) == 0))) {
          raiseException({message: makeNimstrLit("Malformed Varint"), parent: null, m_type: NTI33555112, name: null, trace: [], up: null}, "Exception");
          }
          
          }
          
          }
          
          }
          
          }
          
          var prefixHEX60gensym414_503320064 = resultHEX60gensym416_503320010;
          var sizeHEX60gensym414_503320069 = (prefixHEX60gensym414_503320064 >>> 3);
          var tagHEX60gensym414_503320070 = (prefixHEX60gensym414_503320064 & 7);
          switch (tagHEX60gensym414_503320070) {
          case 0:
            Label4: do {
              var pendHEX60gensym425_503320074 = (p_503319974[p_503319974_Idx] + sizeHEX60gensym414_503320069);
              var resultHEX60gensym425_503320078 = (buffer_503319973.toString('utf8', p_503319974[p_503319974_Idx], pendHEX60gensym425_503320074));
              p_503319974[p_503319974_Idx] = pendHEX60gensym425_503320074;
            } while (false);
            Temporary3 = resultHEX60gensym425_503320078;
            break;
          case 1:
            Label5: do {
              var pendHEX60gensym426_503320082 = (p_503319974[p_503319974_Idx] + sizeHEX60gensym414_503320069);
              var resultHEX60gensym426_503320086 = (buffer_503319973.subarray(p_503319974[p_503319974_Idx], pendHEX60gensym426_503320082));
              p_503319974[p_503319974_Idx] = pendHEX60gensym426_503320082;
            } while (false);
            Temporary3 = resultHEX60gensym426_503320086;
            break;
          case 2:
            Label6: do {
              var resultHEX60gensym427_503320092 = (buffer_503319973.readInt32LE(p_503319974[p_503319974_Idx]));
              p_503319974[p_503319974_Idx] += sizeHEX60gensym414_503320069;
            } while (false);
            Temporary3 = resultHEX60gensym427_503320092;
            break;
          case 3:
            Label7: do {
              var resultHEX60gensym428_503320102 = (buffer_503319973.readDoubleLE(p_503319974[p_503319974_Idx]));
              p_503319974[p_503319974_Idx] += sizeHEX60gensym414_503320069;
            } while (false);
            Temporary3 = resultHEX60gensym428_503320102;
            break;
          case 4:
            Temporary3 = deserializeArray_503319967(ctx_503319969, ctx_503319969_Idx, buffer_503319973, p_503319974, p_503319974_Idx, sizeHEX60gensym414_503320069);
            break;
          case 5:
            Temporary3 = deserializeMap_503320119(ctx_503319969, ctx_503319969_Idx, buffer_503319973, p_503319974, p_503319974_Idx, sizeHEX60gensym414_503320069);
            break;
          case 6:
            Label8: do {
              var lenHEX60gensym473_503320391 = sizeHEX60gensym414_503320069;
              switch (lenHEX60gensym473_503320391) {
              case 0:
                Temporary9 = -1;
                break;
              case 1:
                Temporary9 = (buffer_503319973[p_503319974[p_503319974_Idx]] >>> 0);
                break;
              case 2:
                Temporary9 = (buffer_503319973.readUInt16LE(p_503319974[p_503319974_Idx]) >>> 0);
                break;
              case 3:
                Temporary9 = ((((buffer_503319973[p_503319974[p_503319974_Idx]] >>> 0) << 16) | ((buffer_503319973[(p_503319974[p_503319974_Idx] + 1)] >>> 0) << 8)) | (buffer_503319973[(p_503319974[p_503319974_Idx] + 2)] >>> 0));
                break;
              case 4:
                Temporary9 = buffer_503319973.readUInt32LE(p_503319974[p_503319974_Idx]);
                break;
              default: 
                raiseException({message: (makeNimstrLit("Invalid length for Atom value (must be 0, 1, 2, 3 or 4). Got: ") || []).concat(HEX24_352321539(lenHEX60gensym473_503320391) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
                break;
              }
              var resultHEX60gensym473_503320401 = Temporary9;
              p_503319974[p_503319974_Idx] += lenHEX60gensym473_503320391;
              var resultHEX60gensym472_503320406 = resultHEX60gensym473_503320401;
              switch (resultHEX60gensym472_503320406) {
              case -1:
                Temporary10 = null;
                break;
              case 0:
                Temporary10 = false;
                break;
              case 1:
                Temporary10 = true;
                break;
              default: 
                Temporary10 = (resultHEX60gensym472_503320406);
                break;
              }
            } while (false);
            Temporary3 = Temporary10;
            break;
          case 7:
            Label11: do {
              var pendHEX60gensym475_503320413 = (p_503319974[p_503319974_Idx] + sizeHEX60gensym414_503320069);
              var resultHEX60gensym475_503320417 = (buffer_503319973.subarray(p_503319974[p_503319974_Idx], pendHEX60gensym475_503320413));
              p_503319974[p_503319974_Idx] = pendHEX60gensym475_503320413;
            } while (false);
            Temporary3 = resultHEX60gensym475_503320417;
            break;
          }
          stack_503319997.push(Temporary3);;
        }
    } while (false);
    result_503319979 = (stack_503319997);
    break BeforeRet;
  } while (false);

  return result_503319979;

}

function deserialize_503319846(ctx_503319848, ctx_503319848_Idx, buffer_503319852, at_503319853) {
    var Temporary1;
        var Temporary7;
        var Temporary8;

  var result_503319857 = null;

    var p_503319858 = [at_503319853];
    var bHEX60gensym398_503319869 = buffer_503319852[p_503319858[0]];
    var resultHEX60gensym398_503319870 = ((bHEX60gensym398_503319869 & 127) >>> 0);
    p_503319858[0] += 1;
    if (!(((bHEX60gensym398_503319869 & 128) == 0))) {
    bHEX60gensym398_503319869 = buffer_503319852[p_503319858[0]];
    resultHEX60gensym398_503319870 = ((resultHEX60gensym398_503319870 + (((bHEX60gensym398_503319869 & 127) >>> 0) << 7)) >>> 0);
    p_503319858[0] += 1;
    if (!(((bHEX60gensym398_503319869 & 128) == 0))) {
    bHEX60gensym398_503319869 = buffer_503319852[p_503319858[0]];
    resultHEX60gensym398_503319870 = ((resultHEX60gensym398_503319870 + (((bHEX60gensym398_503319869 & 127) >>> 0) << 14)) >>> 0);
    p_503319858[0] += 1;
    if (!(((bHEX60gensym398_503319869 & 128) == 0))) {
    bHEX60gensym398_503319869 = buffer_503319852[p_503319858[0]];
    resultHEX60gensym398_503319870 = ((resultHEX60gensym398_503319870 + (((bHEX60gensym398_503319869 & 127) >>> 0) << 21)) >>> 0);
    p_503319858[0] += 1;
    if (!(((bHEX60gensym398_503319869 & 128) == 0))) {
    bHEX60gensym398_503319869 = buffer_503319852[p_503319858[0]];
    resultHEX60gensym398_503319870 = ((resultHEX60gensym398_503319870 + (((bHEX60gensym398_503319869 & 127) >>> 0) << 28)) >>> 0);
    p_503319858[0] += 1;
    if (!(((bHEX60gensym398_503319869 & 128) == 0))) {
    raiseException({message: makeNimstrLit("Malformed Varint"), parent: null, m_type: NTI33555112, name: null, trace: [], up: null}, "Exception");
    }
    
    }
    
    }
    
    }
    
    }
    
    var prefixHEX60gensym396_503319924 = resultHEX60gensym398_503319870;
    var sizeHEX60gensym396_503319929 = (prefixHEX60gensym396_503319924 >>> 3);
    var tagHEX60gensym396_503319930 = (prefixHEX60gensym396_503319924 & 7);
    switch (tagHEX60gensym396_503319930) {
    case 0:
      Label2: do {
        var pendHEX60gensym407_503319934 = (p_503319858[0] + sizeHEX60gensym396_503319929);
        var resultHEX60gensym407_503319938 = (buffer_503319852.toString('utf8', p_503319858[0], pendHEX60gensym407_503319934));
        p_503319858[0] = pendHEX60gensym407_503319934;
      } while (false);
      Temporary1 = resultHEX60gensym407_503319938;
      break;
    case 1:
      Label3: do {
        var pendHEX60gensym408_503319942 = (p_503319858[0] + sizeHEX60gensym396_503319929);
        var resultHEX60gensym408_503319946 = (buffer_503319852.subarray(p_503319858[0], pendHEX60gensym408_503319942));
        p_503319858[0] = pendHEX60gensym408_503319942;
      } while (false);
      Temporary1 = resultHEX60gensym408_503319946;
      break;
    case 2:
      Label4: do {
        var resultHEX60gensym409_503319952 = (buffer_503319852.readInt32LE(p_503319858[0]));
        p_503319858[0] += sizeHEX60gensym396_503319929;
      } while (false);
      Temporary1 = resultHEX60gensym409_503319952;
      break;
    case 3:
      Label5: do {
        var resultHEX60gensym410_503319962 = (buffer_503319852.readDoubleLE(p_503319858[0]));
        p_503319858[0] += sizeHEX60gensym396_503319929;
      } while (false);
      Temporary1 = resultHEX60gensym410_503319962;
      break;
    case 4:
      Temporary1 = deserializeArray_503319967(ctx_503319848, ctx_503319848_Idx, buffer_503319852, p_503319858, 0, sizeHEX60gensym396_503319929);
      break;
    case 5:
      Temporary1 = deserializeMap_503320119(ctx_503319848, ctx_503319848_Idx, buffer_503319852, p_503319858, 0, sizeHEX60gensym396_503319929);
      break;
    case 6:
      Label6: do {
        var lenHEX60gensym480_503320443 = sizeHEX60gensym396_503319929;
        switch (lenHEX60gensym480_503320443) {
        case 0:
          Temporary7 = -1;
          break;
        case 1:
          Temporary7 = (buffer_503319852[p_503319858[0]] >>> 0);
          break;
        case 2:
          Temporary7 = (buffer_503319852.readUInt16LE(p_503319858[0]) >>> 0);
          break;
        case 3:
          Temporary7 = ((((buffer_503319852[p_503319858[0]] >>> 0) << 16) | ((buffer_503319852[(p_503319858[0] + 1)] >>> 0) << 8)) | (buffer_503319852[(p_503319858[0] + 2)] >>> 0));
          break;
        case 4:
          Temporary7 = buffer_503319852.readUInt32LE(p_503319858[0]);
          break;
        default: 
          raiseException({message: (makeNimstrLit("Invalid length for Atom value (must be 0, 1, 2, 3 or 4). Got: ") || []).concat(HEX24_352321539(lenHEX60gensym480_503320443) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
          break;
        }
        var resultHEX60gensym480_503320453 = Temporary7;
        p_503319858[0] += lenHEX60gensym480_503320443;
        var resultHEX60gensym479_503320458 = resultHEX60gensym480_503320453;
        switch (resultHEX60gensym479_503320458) {
        case -1:
          Temporary8 = null;
          break;
        case 0:
          Temporary8 = false;
          break;
        case 1:
          Temporary8 = true;
          break;
        default: 
          Temporary8 = (resultHEX60gensym479_503320458);
          break;
        }
      } while (false);
      Temporary1 = Temporary8;
      break;
    case 7:
      Label9: do {
        var pendHEX60gensym482_503320465 = (p_503319858[0] + sizeHEX60gensym396_503319929);
        var resultHEX60gensym482_503320469 = (buffer_503319852.subarray(p_503319858[0], pendHEX60gensym482_503320465));
        p_503319858[0] = pendHEX60gensym482_503320465;
      } while (false);
      Temporary1 = resultHEX60gensym482_503320469;
      break;
    }
    result_503319857 = Temporary1;

  return result_503319857;

}

function deserializeMap_503320733(ctx_503320735, buffer_503320739, p_503320740, p_503320740_Idx, size_503320741) {
          var Temporary3;
            var Temporary5;
            var Temporary6;
          var Temporary7;
              var Temporary13;
              var Temporary14;

  var result_503320745 = null;

    result_503320745 = {};
    var endOffset_503320747 = (p_503320740[p_503320740_Idx] + size_503320741);
    Label1: do {
        Label2: while (true) {
        if (!(p_503320740[p_503320740_Idx] < endOffset_503320747)) break Label2;
          var bHEX60gensym525_503320751 = buffer_503320739[p_503320740[p_503320740_Idx]];
          var resultHEX60gensym525_503320752 = ((bHEX60gensym525_503320751 & 127) >>> 0);
          p_503320740[p_503320740_Idx] += 1;
          if (!(((bHEX60gensym525_503320751 & 128) == 0))) {
          bHEX60gensym525_503320751 = buffer_503320739[p_503320740[p_503320740_Idx]];
          resultHEX60gensym525_503320752 = ((resultHEX60gensym525_503320752 + (((bHEX60gensym525_503320751 & 127) >>> 0) << 7)) >>> 0);
          p_503320740[p_503320740_Idx] += 1;
          if (!(((bHEX60gensym525_503320751 & 128) == 0))) {
          bHEX60gensym525_503320751 = buffer_503320739[p_503320740[p_503320740_Idx]];
          resultHEX60gensym525_503320752 = ((resultHEX60gensym525_503320752 + (((bHEX60gensym525_503320751 & 127) >>> 0) << 14)) >>> 0);
          p_503320740[p_503320740_Idx] += 1;
          if (!(((bHEX60gensym525_503320751 & 128) == 0))) {
          bHEX60gensym525_503320751 = buffer_503320739[p_503320740[p_503320740_Idx]];
          resultHEX60gensym525_503320752 = ((resultHEX60gensym525_503320752 + (((bHEX60gensym525_503320751 & 127) >>> 0) << 21)) >>> 0);
          p_503320740[p_503320740_Idx] += 1;
          if (!(((bHEX60gensym525_503320751 & 128) == 0))) {
          bHEX60gensym525_503320751 = buffer_503320739[p_503320740[p_503320740_Idx]];
          resultHEX60gensym525_503320752 = ((resultHEX60gensym525_503320752 + (((bHEX60gensym525_503320751 & 127) >>> 0) << 28)) >>> 0);
          p_503320740[p_503320740_Idx] += 1;
          if (!(((bHEX60gensym525_503320751 & 128) == 0))) {
          raiseException({message: makeNimstrLit("Malformed Varint"), parent: null, m_type: NTI33555112, name: null, trace: [], up: null}, "Exception");
          }
          
          }
          
          }
          
          }
          
          }
          
          var prefix_503320806 = resultHEX60gensym525_503320752;
          switch ((prefix_503320806 & 7)) {
          case 0:
            Label4: do {
              var pendHEX60gensym536_503320820 = (p_503320740[p_503320740_Idx] + (prefix_503320806 >>> 3));
              var resultHEX60gensym536_503320824 = (buffer_503320739.toString('utf8', p_503320740[p_503320740_Idx], pendHEX60gensym536_503320820));
              p_503320740[p_503320740_Idx] = pendHEX60gensym536_503320820;
            } while (false);
            Temporary3 = resultHEX60gensym536_503320824;
            break;
          case 6:
            var lenHEX60gensym538_503320832 = (prefix_503320806 >>> 3);
            switch (lenHEX60gensym538_503320832) {
            case 0:
              Temporary5 = -1;
              break;
            case 1:
              Temporary5 = (buffer_503320739[p_503320740[p_503320740_Idx]] >>> 0);
              break;
            case 2:
              Temporary5 = (buffer_503320739.readUInt16LE(p_503320740[p_503320740_Idx]) >>> 0);
              break;
            case 3:
              Temporary5 = ((((buffer_503320739[p_503320740[p_503320740_Idx]] >>> 0) << 16) | ((buffer_503320739[(p_503320740[p_503320740_Idx] + 1)] >>> 0) << 8)) | (buffer_503320739[(p_503320740[p_503320740_Idx] + 2)] >>> 0));
              break;
            case 4:
              Temporary5 = buffer_503320739.readUInt32LE(p_503320740[p_503320740_Idx]);
              break;
            default: 
              raiseException({message: (makeNimstrLit("Invalid length for Atom value (must be 0, 1, 2, 3 or 4). Got: ") || []).concat(HEX24_352321539(lenHEX60gensym538_503320832) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
              break;
            }
            var resultHEX60gensym538_503320842 = Temporary5;
            p_503320740[p_503320740_Idx] += lenHEX60gensym538_503320832;
            var atom_503320847 = resultHEX60gensym538_503320842;
            if ((atom_503320847 <= 1)) {
            raiseException({message: (makeNimstrLit("boolean is invalid key, got [formely \'required type:string\']: ") || []).concat(reprEnum((prefix_503320806 & 7), NTI1258291204) || []), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
            }
            else {
            Temporary6 = ((ctx_503320735.keyDict.values[atom_503320847]));
            }
            
            Temporary3 = Temporary6;
            break;
          default: 
            raiseException({message: (makeNimstrLit("Expected string or atom, got [formely \'required type:string\']: ") || []).concat(reprEnum((prefix_503320806 & 7), NTI1258291204) || []), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
            break;
          }
          var key_503320862 = Temporary3;
          var bHEX60gensym549_503320873 = buffer_503320739[p_503320740[p_503320740_Idx]];
          var resultHEX60gensym549_503320874 = ((bHEX60gensym549_503320873 & 127) >>> 0);
          p_503320740[p_503320740_Idx] += 1;
          if (!(((bHEX60gensym549_503320873 & 128) == 0))) {
          bHEX60gensym549_503320873 = buffer_503320739[p_503320740[p_503320740_Idx]];
          resultHEX60gensym549_503320874 = ((resultHEX60gensym549_503320874 + (((bHEX60gensym549_503320873 & 127) >>> 0) << 7)) >>> 0);
          p_503320740[p_503320740_Idx] += 1;
          if (!(((bHEX60gensym549_503320873 & 128) == 0))) {
          bHEX60gensym549_503320873 = buffer_503320739[p_503320740[p_503320740_Idx]];
          resultHEX60gensym549_503320874 = ((resultHEX60gensym549_503320874 + (((bHEX60gensym549_503320873 & 127) >>> 0) << 14)) >>> 0);
          p_503320740[p_503320740_Idx] += 1;
          if (!(((bHEX60gensym549_503320873 & 128) == 0))) {
          bHEX60gensym549_503320873 = buffer_503320739[p_503320740[p_503320740_Idx]];
          resultHEX60gensym549_503320874 = ((resultHEX60gensym549_503320874 + (((bHEX60gensym549_503320873 & 127) >>> 0) << 21)) >>> 0);
          p_503320740[p_503320740_Idx] += 1;
          if (!(((bHEX60gensym549_503320873 & 128) == 0))) {
          bHEX60gensym549_503320873 = buffer_503320739[p_503320740[p_503320740_Idx]];
          resultHEX60gensym549_503320874 = ((resultHEX60gensym549_503320874 + (((bHEX60gensym549_503320873 & 127) >>> 0) << 28)) >>> 0);
          p_503320740[p_503320740_Idx] += 1;
          if (!(((bHEX60gensym549_503320873 & 128) == 0))) {
          raiseException({message: makeNimstrLit("Malformed Varint"), parent: null, m_type: NTI33555112, name: null, trace: [], up: null}, "Exception");
          }
          
          }
          
          }
          
          }
          
          }
          
          var prefixHEX60gensym547_503320928 = resultHEX60gensym549_503320874;
          var sizeHEX60gensym547_503320933 = (prefixHEX60gensym547_503320928 >>> 3);
          var tagHEX60gensym547_503320934 = (prefixHEX60gensym547_503320928 & 7);
          switch (tagHEX60gensym547_503320934) {
          case 0:
            Label8: do {
              var pendHEX60gensym558_503320938 = (p_503320740[p_503320740_Idx] + sizeHEX60gensym547_503320933);
              var resultHEX60gensym558_503320942 = (buffer_503320739.toString('utf8', p_503320740[p_503320740_Idx], pendHEX60gensym558_503320938));
              p_503320740[p_503320740_Idx] = pendHEX60gensym558_503320938;
            } while (false);
            Temporary7 = resultHEX60gensym558_503320942;
            break;
          case 1:
            Label9: do {
              var pendHEX60gensym559_503320946 = (p_503320740[p_503320740_Idx] + sizeHEX60gensym547_503320933);
              var resultHEX60gensym559_503320950 = (buffer_503320739.subarray(p_503320740[p_503320740_Idx], pendHEX60gensym559_503320946));
              p_503320740[p_503320740_Idx] = pendHEX60gensym559_503320946;
            } while (false);
            Temporary7 = resultHEX60gensym559_503320950;
            break;
          case 2:
            Label10: do {
              var resultHEX60gensym560_503320956 = (buffer_503320739.readInt32LE(p_503320740[p_503320740_Idx]));
              p_503320740[p_503320740_Idx] += sizeHEX60gensym547_503320933;
            } while (false);
            Temporary7 = resultHEX60gensym560_503320956;
            break;
          case 3:
            Label11: do {
              var resultHEX60gensym561_503320966 = (buffer_503320739.readDoubleLE(p_503320740[p_503320740_Idx]));
              p_503320740[p_503320740_Idx] += sizeHEX60gensym547_503320933;
            } while (false);
            Temporary7 = resultHEX60gensym561_503320966;
            break;
          case 4:
            Temporary7 = deserializeArray_503320595(ctx_503320735, buffer_503320739, p_503320740, p_503320740_Idx, sizeHEX60gensym547_503320933);
            break;
          case 5:
            Temporary7 = deserializeMap_503320733(ctx_503320735, buffer_503320739, p_503320740, p_503320740_Idx, sizeHEX60gensym547_503320933);
            break;
          case 6:
            Label12: do {
              var lenHEX60gensym567_503321000 = sizeHEX60gensym547_503320933;
              switch (lenHEX60gensym567_503321000) {
              case 0:
                Temporary13 = -1;
                break;
              case 1:
                Temporary13 = (buffer_503320739[p_503320740[p_503320740_Idx]] >>> 0);
                break;
              case 2:
                Temporary13 = (buffer_503320739.readUInt16LE(p_503320740[p_503320740_Idx]) >>> 0);
                break;
              case 3:
                Temporary13 = ((((buffer_503320739[p_503320740[p_503320740_Idx]] >>> 0) << 16) | ((buffer_503320739[(p_503320740[p_503320740_Idx] + 1)] >>> 0) << 8)) | (buffer_503320739[(p_503320740[p_503320740_Idx] + 2)] >>> 0));
                break;
              case 4:
                Temporary13 = buffer_503320739.readUInt32LE(p_503320740[p_503320740_Idx]);
                break;
              default: 
                raiseException({message: (makeNimstrLit("Invalid length for Atom value (must be 0, 1, 2, 3 or 4). Got: ") || []).concat(HEX24_352321539(lenHEX60gensym567_503321000) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
                break;
              }
              var resultHEX60gensym567_503321010 = Temporary13;
              p_503320740[p_503320740_Idx] += lenHEX60gensym567_503321000;
              var resultHEX60gensym566_503321015 = resultHEX60gensym567_503321010;
              switch (resultHEX60gensym566_503321015) {
              case -1:
                Temporary14 = null;
                break;
              case 0:
                Temporary14 = false;
                break;
              case 1:
                Temporary14 = true;
                break;
              default: 
                Temporary14 = (resultHEX60gensym566_503321015);
                break;
              }
            } while (false);
            Temporary7 = Temporary14;
            break;
          case 7:
            Label15: do {
              var pendHEX60gensym569_503321022 = (p_503320740[p_503320740_Idx] + sizeHEX60gensym547_503320933);
              var resultHEX60gensym569_503321026 = (buffer_503320739.subarray(p_503320740[p_503320740_Idx], pendHEX60gensym569_503321022));
              p_503320740[p_503320740_Idx] = pendHEX60gensym569_503321022;
            } while (false);
            Temporary7 = resultHEX60gensym569_503321026;
            break;
          }
          var value_503321027 = Temporary7;
          result_503320745[toString_503316541(key_503320862)] = value_503321027;
        }
    } while (false);

  return result_503320745;

}

function deserializeArray_503320595(ctx_503320597, buffer_503320601, p_503320602, p_503320602_Idx, size_503320603) {
          var Temporary3;
              var Temporary9;
              var Temporary10;

  var result_503320607 = null;

  BeforeRet: do {
    var stack_503320611 = newSeq_503319980(0);
    var endOffset_503320612 = (p_503320602[p_503320602_Idx] + size_503320603);
    Label1: do {
        Label2: while (true) {
        if (!(p_503320602[p_503320602_Idx] < endOffset_503320612)) break Label2;
          var bHEX60gensym506_503320623 = buffer_503320601[p_503320602[p_503320602_Idx]];
          var resultHEX60gensym506_503320624 = ((bHEX60gensym506_503320623 & 127) >>> 0);
          p_503320602[p_503320602_Idx] += 1;
          if (!(((bHEX60gensym506_503320623 & 128) == 0))) {
          bHEX60gensym506_503320623 = buffer_503320601[p_503320602[p_503320602_Idx]];
          resultHEX60gensym506_503320624 = ((resultHEX60gensym506_503320624 + (((bHEX60gensym506_503320623 & 127) >>> 0) << 7)) >>> 0);
          p_503320602[p_503320602_Idx] += 1;
          if (!(((bHEX60gensym506_503320623 & 128) == 0))) {
          bHEX60gensym506_503320623 = buffer_503320601[p_503320602[p_503320602_Idx]];
          resultHEX60gensym506_503320624 = ((resultHEX60gensym506_503320624 + (((bHEX60gensym506_503320623 & 127) >>> 0) << 14)) >>> 0);
          p_503320602[p_503320602_Idx] += 1;
          if (!(((bHEX60gensym506_503320623 & 128) == 0))) {
          bHEX60gensym506_503320623 = buffer_503320601[p_503320602[p_503320602_Idx]];
          resultHEX60gensym506_503320624 = ((resultHEX60gensym506_503320624 + (((bHEX60gensym506_503320623 & 127) >>> 0) << 21)) >>> 0);
          p_503320602[p_503320602_Idx] += 1;
          if (!(((bHEX60gensym506_503320623 & 128) == 0))) {
          bHEX60gensym506_503320623 = buffer_503320601[p_503320602[p_503320602_Idx]];
          resultHEX60gensym506_503320624 = ((resultHEX60gensym506_503320624 + (((bHEX60gensym506_503320623 & 127) >>> 0) << 28)) >>> 0);
          p_503320602[p_503320602_Idx] += 1;
          if (!(((bHEX60gensym506_503320623 & 128) == 0))) {
          raiseException({message: makeNimstrLit("Malformed Varint"), parent: null, m_type: NTI33555112, name: null, trace: [], up: null}, "Exception");
          }
          
          }
          
          }
          
          }
          
          }
          
          var prefixHEX60gensym504_503320678 = resultHEX60gensym506_503320624;
          var sizeHEX60gensym504_503320683 = (prefixHEX60gensym504_503320678 >>> 3);
          var tagHEX60gensym504_503320684 = (prefixHEX60gensym504_503320678 & 7);
          switch (tagHEX60gensym504_503320684) {
          case 0:
            Label4: do {
              var pendHEX60gensym515_503320688 = (p_503320602[p_503320602_Idx] + sizeHEX60gensym504_503320683);
              var resultHEX60gensym515_503320692 = (buffer_503320601.toString('utf8', p_503320602[p_503320602_Idx], pendHEX60gensym515_503320688));
              p_503320602[p_503320602_Idx] = pendHEX60gensym515_503320688;
            } while (false);
            Temporary3 = resultHEX60gensym515_503320692;
            break;
          case 1:
            Label5: do {
              var pendHEX60gensym516_503320696 = (p_503320602[p_503320602_Idx] + sizeHEX60gensym504_503320683);
              var resultHEX60gensym516_503320700 = (buffer_503320601.subarray(p_503320602[p_503320602_Idx], pendHEX60gensym516_503320696));
              p_503320602[p_503320602_Idx] = pendHEX60gensym516_503320696;
            } while (false);
            Temporary3 = resultHEX60gensym516_503320700;
            break;
          case 2:
            Label6: do {
              var resultHEX60gensym517_503320706 = (buffer_503320601.readInt32LE(p_503320602[p_503320602_Idx]));
              p_503320602[p_503320602_Idx] += sizeHEX60gensym504_503320683;
            } while (false);
            Temporary3 = resultHEX60gensym517_503320706;
            break;
          case 3:
            Label7: do {
              var resultHEX60gensym518_503320716 = (buffer_503320601.readDoubleLE(p_503320602[p_503320602_Idx]));
              p_503320602[p_503320602_Idx] += sizeHEX60gensym504_503320683;
            } while (false);
            Temporary3 = resultHEX60gensym518_503320716;
            break;
          case 4:
            Temporary3 = deserializeArray_503320595(ctx_503320597, buffer_503320601, p_503320602, p_503320602_Idx, sizeHEX60gensym504_503320683);
            break;
          case 5:
            Temporary3 = deserializeMap_503320733(ctx_503320597, buffer_503320601, p_503320602, p_503320602_Idx, sizeHEX60gensym504_503320683);
            break;
          case 6:
            Label8: do {
              var lenHEX60gensym572_503321039 = sizeHEX60gensym504_503320683;
              switch (lenHEX60gensym572_503321039) {
              case 0:
                Temporary9 = -1;
                break;
              case 1:
                Temporary9 = (buffer_503320601[p_503320602[p_503320602_Idx]] >>> 0);
                break;
              case 2:
                Temporary9 = (buffer_503320601.readUInt16LE(p_503320602[p_503320602_Idx]) >>> 0);
                break;
              case 3:
                Temporary9 = ((((buffer_503320601[p_503320602[p_503320602_Idx]] >>> 0) << 16) | ((buffer_503320601[(p_503320602[p_503320602_Idx] + 1)] >>> 0) << 8)) | (buffer_503320601[(p_503320602[p_503320602_Idx] + 2)] >>> 0));
                break;
              case 4:
                Temporary9 = buffer_503320601.readUInt32LE(p_503320602[p_503320602_Idx]);
                break;
              default: 
                raiseException({message: (makeNimstrLit("Invalid length for Atom value (must be 0, 1, 2, 3 or 4). Got: ") || []).concat(HEX24_352321539(lenHEX60gensym572_503321039) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
                break;
              }
              var resultHEX60gensym572_503321049 = Temporary9;
              p_503320602[p_503320602_Idx] += lenHEX60gensym572_503321039;
              var resultHEX60gensym571_503321054 = resultHEX60gensym572_503321049;
              switch (resultHEX60gensym571_503321054) {
              case -1:
                Temporary10 = null;
                break;
              case 0:
                Temporary10 = false;
                break;
              case 1:
                Temporary10 = true;
                break;
              default: 
                Temporary10 = (resultHEX60gensym571_503321054);
                break;
              }
            } while (false);
            Temporary3 = Temporary10;
            break;
          case 7:
            Label11: do {
              var pendHEX60gensym574_503321061 = (p_503320602[p_503320602_Idx] + sizeHEX60gensym504_503320683);
              var resultHEX60gensym574_503321065 = (buffer_503320601.subarray(p_503320602[p_503320602_Idx], pendHEX60gensym574_503321061));
              p_503320602[p_503320602_Idx] = pendHEX60gensym574_503321061;
            } while (false);
            Temporary3 = resultHEX60gensym574_503321065;
            break;
          }
          stack_503320611.push(Temporary3);;
        }
    } while (false);
    result_503320607 = (stack_503320611);
    break BeforeRet;
  } while (false);

  return result_503320607;

}

function deserialize_503320474(ctx_503320476, buffer_503320480, at_503320481) {
    var Temporary1;
        var Temporary7;
        var Temporary8;

  var result_503320485 = null;

    var p_503320486 = [at_503320481];
    var bHEX60gensym488_503320497 = buffer_503320480[p_503320486[0]];
    var resultHEX60gensym488_503320498 = ((bHEX60gensym488_503320497 & 127) >>> 0);
    p_503320486[0] += 1;
    if (!(((bHEX60gensym488_503320497 & 128) == 0))) {
    bHEX60gensym488_503320497 = buffer_503320480[p_503320486[0]];
    resultHEX60gensym488_503320498 = ((resultHEX60gensym488_503320498 + (((bHEX60gensym488_503320497 & 127) >>> 0) << 7)) >>> 0);
    p_503320486[0] += 1;
    if (!(((bHEX60gensym488_503320497 & 128) == 0))) {
    bHEX60gensym488_503320497 = buffer_503320480[p_503320486[0]];
    resultHEX60gensym488_503320498 = ((resultHEX60gensym488_503320498 + (((bHEX60gensym488_503320497 & 127) >>> 0) << 14)) >>> 0);
    p_503320486[0] += 1;
    if (!(((bHEX60gensym488_503320497 & 128) == 0))) {
    bHEX60gensym488_503320497 = buffer_503320480[p_503320486[0]];
    resultHEX60gensym488_503320498 = ((resultHEX60gensym488_503320498 + (((bHEX60gensym488_503320497 & 127) >>> 0) << 21)) >>> 0);
    p_503320486[0] += 1;
    if (!(((bHEX60gensym488_503320497 & 128) == 0))) {
    bHEX60gensym488_503320497 = buffer_503320480[p_503320486[0]];
    resultHEX60gensym488_503320498 = ((resultHEX60gensym488_503320498 + (((bHEX60gensym488_503320497 & 127) >>> 0) << 28)) >>> 0);
    p_503320486[0] += 1;
    if (!(((bHEX60gensym488_503320497 & 128) == 0))) {
    raiseException({message: makeNimstrLit("Malformed Varint"), parent: null, m_type: NTI33555112, name: null, trace: [], up: null}, "Exception");
    }
    
    }
    
    }
    
    }
    
    }
    
    var prefixHEX60gensym486_503320552 = resultHEX60gensym488_503320498;
    var sizeHEX60gensym486_503320557 = (prefixHEX60gensym486_503320552 >>> 3);
    var tagHEX60gensym486_503320558 = (prefixHEX60gensym486_503320552 & 7);
    switch (tagHEX60gensym486_503320558) {
    case 0:
      Label2: do {
        var pendHEX60gensym497_503320562 = (p_503320486[0] + sizeHEX60gensym486_503320557);
        var resultHEX60gensym497_503320566 = (buffer_503320480.toString('utf8', p_503320486[0], pendHEX60gensym497_503320562));
        p_503320486[0] = pendHEX60gensym497_503320562;
      } while (false);
      Temporary1 = resultHEX60gensym497_503320566;
      break;
    case 1:
      Label3: do {
        var pendHEX60gensym498_503320570 = (p_503320486[0] + sizeHEX60gensym486_503320557);
        var resultHEX60gensym498_503320574 = (buffer_503320480.subarray(p_503320486[0], pendHEX60gensym498_503320570));
        p_503320486[0] = pendHEX60gensym498_503320570;
      } while (false);
      Temporary1 = resultHEX60gensym498_503320574;
      break;
    case 2:
      Label4: do {
        var resultHEX60gensym499_503320580 = (buffer_503320480.readInt32LE(p_503320486[0]));
        p_503320486[0] += sizeHEX60gensym486_503320557;
      } while (false);
      Temporary1 = resultHEX60gensym499_503320580;
      break;
    case 3:
      Label5: do {
        var resultHEX60gensym500_503320590 = (buffer_503320480.readDoubleLE(p_503320486[0]));
        p_503320486[0] += sizeHEX60gensym486_503320557;
      } while (false);
      Temporary1 = resultHEX60gensym500_503320590;
      break;
    case 4:
      Temporary1 = deserializeArray_503320595(ctx_503320476, buffer_503320480, p_503320486, 0, sizeHEX60gensym486_503320557);
      break;
    case 5:
      Temporary1 = deserializeMap_503320733(ctx_503320476, buffer_503320480, p_503320486, 0, sizeHEX60gensym486_503320557);
      break;
    case 6:
      Label6: do {
        var lenHEX60gensym579_503321091 = sizeHEX60gensym486_503320557;
        switch (lenHEX60gensym579_503321091) {
        case 0:
          Temporary7 = -1;
          break;
        case 1:
          Temporary7 = (buffer_503320480[p_503320486[0]] >>> 0);
          break;
        case 2:
          Temporary7 = (buffer_503320480.readUInt16LE(p_503320486[0]) >>> 0);
          break;
        case 3:
          Temporary7 = ((((buffer_503320480[p_503320486[0]] >>> 0) << 16) | ((buffer_503320480[(p_503320486[0] + 1)] >>> 0) << 8)) | (buffer_503320480[(p_503320486[0] + 2)] >>> 0));
          break;
        case 4:
          Temporary7 = buffer_503320480.readUInt32LE(p_503320486[0]);
          break;
        default: 
          raiseException({message: (makeNimstrLit("Invalid length for Atom value (must be 0, 1, 2, 3 or 4). Got: ") || []).concat(HEX24_352321539(lenHEX60gensym579_503321091) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
          break;
        }
        var resultHEX60gensym579_503321101 = Temporary7;
        p_503320486[0] += lenHEX60gensym579_503321091;
        var resultHEX60gensym578_503321106 = resultHEX60gensym579_503321101;
        switch (resultHEX60gensym578_503321106) {
        case -1:
          Temporary8 = null;
          break;
        case 0:
          Temporary8 = false;
          break;
        case 1:
          Temporary8 = true;
          break;
        default: 
          Temporary8 = (resultHEX60gensym578_503321106);
          break;
        }
      } while (false);
      Temporary1 = Temporary8;
      break;
    case 7:
      Label9: do {
        var pendHEX60gensym581_503321113 = (p_503320486[0] + sizeHEX60gensym486_503320557);
        var resultHEX60gensym581_503321117 = (buffer_503320480.subarray(p_503320486[0], pendHEX60gensym581_503321113));
        p_503320486[0] = pendHEX60gensym581_503321113;
      } while (false);
      Temporary1 = resultHEX60gensym581_503321117;
      break;
    }
    result_503320485 = Temporary1;

  return result_503320485;

}

function deserialize_503319837(buffer_503319838, maybeStartOrKeyDict_503319839, maybeKeyDict_503319840) {
    var Temporary1;
    var Temporary2;

  var result_503319841 = null;

    var start_503319842 = 0;
    if ((typeof(maybeStartOrKeyDict_503319839) == "number")) {
    start_503319842 = ((toInt_503316535(maybeStartOrKeyDict_503319839)) | 0);
    if ((maybeKeyDict_503319840 === undefined)) {
    Temporary2 = deserialize_503319846(jsObjectFactory_503319749, 0, (buffer_503319838), start_503319842);
    }
    else {
      var ctx_503320473 = [{keyDict: maybeKeyDict_503319840}];
    Temporary2 = deserialize_503320474(ctx_503320473[0], (buffer_503319838), start_503319842);
    }
    
    Temporary1 = Temporary2;
    }
    else {
    if ((maybeStartOrKeyDict_503319839 === undefined)) {
    Temporary1 = deserialize_503319846(jsObjectFactory_503319749, 0, (buffer_503319838), start_503319842);
    }
    else {
      var ctx_503321138 = [{keyDict: maybeStartOrKeyDict_503319839}];
    Temporary1 = deserialize_503320474(ctx_503321138[0], (buffer_503319838), start_503319842);
    }
    }
    result_503319841 = Temporary1;

  return result_503319841;

}

function newKeyDict_503316666() {
  var result_503316667 = null;

    result_503316667 = {values: newSeq_33556825(0), map: {}, m_type: NTI503316574};
    result_503316667.values.push(toString_503316541(null));;
    result_503316667.values.push(toString_503316541(null));;

  return result_503316667;

}

function encodingLength_503319707(obj_503319708) {
  var result_503319709 = 0;

    lastBufferProduced_503319706[0] = serialize_503319688(obj_503319708, null);
    lastObjectVisited_503319705[0] = obj_503319708;
    result_503319709 = lastBufferProduced_503319706[0].length;

  return result_503319709;

}

function encode_503319712(obj_503319713, buffer_503319714, offset_503319715) {
    var Temporary1;

  var result_503319716 = 0;

    if ((offset_503319715 === undefined)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = offset_503319715;
    }
    
    var offset_503319720 = Temporary1;
    if (!((obj_503319713 == lastObjectVisited_503319705[0]))) {
    lastBufferProduced_503319706[0] = serialize_503319688(obj_503319713, null);
    lastObjectVisited_503319705[0] = obj_503319713;
    }
    
    if (((subInt(buffer_503319714.length, offset_503319720) < lastBufferProduced_503319706[0].length) && !(( typeof Buffer !== 'undefined' && Buffer.isBuffer((buffer_503319714)) )))) {
    raiseException({message: makeNimstrLit("Buffer too small"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    
    var p_503319729 = offset_503319720;
    if ((lastBufferProduced_503319706[0].length == 0)) {
    }
    else {
      buffer_503319714.set(lastBufferProduced_503319706[0],p_503319729);;
      p_503319729 = addInt(p_503319729, lastBufferProduced_503319706[0].length);
    }
    
    result_503319716 = subInt(p_503319729, offset_503319720);

  return result_503319716;

}

function newSeq_503321295(len_503321297) {
  var result_503321298 = [];

    result_503321298 = new Array(len_503321297); for (var i = 0 ; i < len_503321297 ; ++i) { result_503321298[i] = null; }
  return result_503321298;

}

function readPrefix_1493172232(buffer_1493172233, p_1493172234, p_1493172234_Idx) {
  var result_1493172235 = 0;

    var bHEX60gensym0_1493172239 = buffer_1493172233[p_1493172234[p_1493172234_Idx]];
    var resultHEX60gensym0_1493172240 = ((bHEX60gensym0_1493172239 & 127) >>> 0);
    p_1493172234[p_1493172234_Idx] = addInt(p_1493172234[p_1493172234_Idx], 1);
    if (!(((bHEX60gensym0_1493172239 & 128) == 0))) {
    bHEX60gensym0_1493172239 = buffer_1493172233[p_1493172234[p_1493172234_Idx]];
    resultHEX60gensym0_1493172240 = ((resultHEX60gensym0_1493172240 + (((bHEX60gensym0_1493172239 & 127) >>> 0) << 7)) >>> 0);
    p_1493172234[p_1493172234_Idx] = addInt(p_1493172234[p_1493172234_Idx], 1);
    if (!(((bHEX60gensym0_1493172239 & 128) == 0))) {
    bHEX60gensym0_1493172239 = buffer_1493172233[p_1493172234[p_1493172234_Idx]];
    resultHEX60gensym0_1493172240 = ((resultHEX60gensym0_1493172240 + (((bHEX60gensym0_1493172239 & 127) >>> 0) << 14)) >>> 0);
    p_1493172234[p_1493172234_Idx] = addInt(p_1493172234[p_1493172234_Idx], 1);
    if (!(((bHEX60gensym0_1493172239 & 128) == 0))) {
    bHEX60gensym0_1493172239 = buffer_1493172233[p_1493172234[p_1493172234_Idx]];
    resultHEX60gensym0_1493172240 = ((resultHEX60gensym0_1493172240 + (((bHEX60gensym0_1493172239 & 127) >>> 0) << 21)) >>> 0);
    p_1493172234[p_1493172234_Idx] = addInt(p_1493172234[p_1493172234_Idx], 1);
    if (!(((bHEX60gensym0_1493172239 & 128) == 0))) {
    bHEX60gensym0_1493172239 = buffer_1493172233[p_1493172234[p_1493172234_Idx]];
    resultHEX60gensym0_1493172240 = ((resultHEX60gensym0_1493172240 + (((bHEX60gensym0_1493172239 & 127) >>> 0) << 28)) >>> 0);
    p_1493172234[p_1493172234_Idx] = addInt(p_1493172234[p_1493172234_Idx], 1);
    if (!(((bHEX60gensym0_1493172239 & 128) == 0))) {
    raiseException({message: makeNimstrLit("Malformed Varint"), parent: null, m_type: NTI33555112, name: null, trace: [], up: null}, "Exception");
    }
    
    }
    
    }
    
    }
    
    }
    
    result_1493172235 = resultHEX60gensym0_1493172240;

  return result_1493172235;

}

function asByteBuffer_1493172229(b_1493172230) {
  var result_1493172231 = null;

    result_1493172231 = b_1493172230;

  return result_1493172231;

}

function readBufferValue_1493172316(buffer_1493172317, p_1493172318, p_1493172318_Idx, size_1493172319) {
    var Temporary1;

  var result_1493172320 = null;

    if ((size_1493172319 == 0)) {
    Temporary1 = Buffer.allocUnsafe(0);
    }
    else {
      p_1493172318[p_1493172318_Idx] = addInt(p_1493172318[p_1493172318_Idx], size_1493172319);
    Temporary1 = new Uint8Array(buffer_1493172317.buffer, subInt(addInt(buffer_1493172317.byteOffset, p_1493172318[p_1493172318_Idx]), size_1493172319), size_1493172319);
    }
    
    result_1493172320 = Temporary1;

  return result_1493172320;

}

function compileSimplePath_503321345(path_503321347) {
  var result_503321351 = [];

    result_503321351 = nimCopy(null, [], NTI503320192);
    Label1: do {
      var key_503321368 = null;
      var i_503322581 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_503322581 < (path_503321347).length)) break Label3;
            key_503321368 = path_503321347[i_503322581];
            var keyPrefix_503321373 = ((key_503321368.length << 3) | 0);
            result_503321351.push({opCode: 0, prefix: keyPrefix_503321373, key: key_503321368});;
            i_503322581 = addInt(i_503322581, 1);
          }
      } while (false);
    } while (false);

  return result_503321351;

}

function skipNext_1509949478(buffer_1509949480, p_1509949481, p_1509949481_Idx) {
    var prefix_1509949482 = readPrefix_1493172232(asByteBuffer_1493172229(buffer_1509949480), p_1509949481, p_1509949481_Idx);
    p_1509949481[p_1509949481_Idx] += (prefix_1509949482 >>> 3);

  
}

function runBPath_503321425(buffer_503321428, path_503321429, start_503321430) {
              var Temporary4;
              var Temporary5;
                      var Temporary8;

  var result_503321431 = 0;

  BeforeRet: do {
    var p_503321432 = [start_503321430];
    Label1: do {
      var op_503321454 = ({opCode: 0, prefix: 0, key: null});
      var i_503322586 = 0;
      var L_503322587 = (path_503321429).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_503322586 < L_503322587)) break Label3;
            op_503321454 = path_503321429[i_503322586];
            switch (op_503321454.opCode) {
            case 0:
              var Temporary4 = op_503321454;
              if (ConstSet56[Temporary4.opCode]===undefined) { raiseFieldError2(makeNimstrLit("field \'prefix\' is not accessible for type \'BipfQueryOp\' using \'opCode = "), reprDiscriminant(Temporary4.opCode, NTI1526726659)); }
              var opPrefix_503321455 = Temporary4.prefix;
              var Temporary5 = op_503321454;
              if (ConstSet57[Temporary5.opCode]===undefined) { raiseFieldError2(makeNimstrLit("field \'key\' is not accessible for type \'BipfQueryOp\' using \'opCode = "), reprDiscriminant(Temporary5.opCode, NTI1526726659)); }
              var opKey_503321456 = Temporary5.key;
              var prefix_503321457 = readPrefix_1493172232(asByteBuffer_1493172229(buffer_503321428), p_503321432, 0);
              if (!(((prefix_503321457 & 7) == 5))) {
              result_503321431 = -1;
              break BeforeRet;
              }
              
              var endOffset_503321466 = addInt(p_503321432[0], (prefix_503321457 >>> 3));
              Label6: do {
                  Label7: while (true) {
                  if (!(p_503321432[0] < endOffset_503321466)) break Label7;
                    var prefix_503321467 = readPrefix_1493172232(asByteBuffer_1493172229(buffer_503321428), p_503321432, 0);
                      if (!(prefix_503321467 == opPrefix_503321455)) Temporary8 = false; else {                        Temporary8 = (buffer_503321428.compare(opKey_503321456, 0, opKey_503321456.length, p_503321432[0], addInt(p_503321432[0], opKey_503321456.length)) == 0);                      }                    if (Temporary8) {
                    p_503321432[0] = addInt(p_503321432[0], (prefix_503321467 >>> 3));
                    break Label6;
                    }
                    
                    p_503321432[0] = addInt(p_503321432[0], (prefix_503321467 >>> 3));
                    skipNext_1509949478(buffer_503321428, p_503321432, 0);
                  }
              } while (false);
              if ((endOffset_503321466 <= p_503321432[0])) {
              result_503321431 = -1;
              break BeforeRet;
              }
              
              break;
            }
            i_503322586 = addInt(i_503322586, 1);
            if (!(((path_503321429).length == L_503322587))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_503321431 = p_503321432[0];
    break BeforeRet;
  } while (false);

  return result_503321431;

}

function seekPath_503321278(buffer_503321279, start_503321280, target_503321281, targetStart_503321282) {
    var Temporary1;

  var result_503321283 = 0;

    if (!(( typeof Buffer !== 'undefined' && Buffer.isBuffer((target_503321281)) ))) {
    raiseException({message: (makeNimstrLit("Unsupported target type (formely \'path must be encoded array\'): ") || []).concat(cstrToNimstr(typeof((target_503321281))) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    
    var path_503321312 = newSeq_503321295(0);
    if ((targetStart_503321282 === undefined)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = targetStart_503321282;
    }
    
    var pTarget_503321316 = [Temporary1];
    var arrPrefix_503321317 = readPrefix_1493172232(asByteBuffer_1493172229(target_503321281), pTarget_503321316, 0);
    if (!(((arrPrefix_503321317 & 7) == 4))) {
    failedAssertImpl_218103864(makeNimstrLit("index.nim(394, 10) `arrPrefix.tag == BipfTag.Array` Unsupported target type (formely \'path must be encoded array\')"));
    }
    
    Label2: do {
        Label3: while (true) {
        if (!(pTarget_503321316[0] < target_503321281.length)) break Label3;
          var prefix_503321327 = readPrefix_1493172232(asByteBuffer_1493172229(target_503321281), pTarget_503321316, 0);
          if (!(((prefix_503321327 & 7) == 0))) {
          failedAssertImpl_218103864(makeNimstrLit("index.nim(399, 12) `prefix.tag == BipfTag.String` Invalid path (formely \'seekPath only supports string target\'): "));
          }
          
          path_503321312.push(readBufferValue_1493172316(asByteBuffer_1493172229(target_503321281), pTarget_503321316, 0, (prefix_503321327 >>> 3)));;
        }
    } while (false);
    var bpath_503321421 = compileSimplePath_503321345(path_503321312);
    result_503321283 = runBPath_503321425(buffer_503321279, bpath_503321421, start_503321280);

  return result_503321283;

}

function findKey_1509949444(buffer_1509949445, key_1509949446, keyPrefix_1509949447, start_1509949448) {
            var Temporary3;

  var result_1509949449 = 0;

    result_1509949449 = -1;
    var p_1509949450 = [start_1509949448];
    var prefix_1509949451 = readPrefix_1493172232(asByteBuffer_1493172229(buffer_1509949445), p_1509949450, 0);
    if (((prefix_1509949451 & 7) == 5)) {
    var endOffset_1509949460 = addInt(p_1509949450[0], (prefix_1509949451 >>> 3));
    Label1: do {
        Label2: while (true) {
        if (!(p_1509949450[0] < endOffset_1509949460)) break Label2;
          var prefix_1509949461 = readPrefix_1493172232(asByteBuffer_1493172229(buffer_1509949445), p_1509949450, 0);
            if (!(prefix_1509949461 == keyPrefix_1509949447)) Temporary3 = false; else {              Temporary3 = (buffer_1509949445.compare(key_1509949446, 0, key_1509949446.length, p_1509949450[0], addInt(p_1509949450[0], key_1509949446.length)) == 0);            }          if (Temporary3) {
          p_1509949450[0] = addInt(p_1509949450[0], (prefix_1509949461 >>> 3));
          result_1509949449 = p_1509949450[0];
          break Label1;
          }
          
          p_1509949450[0] = addInt(p_1509949450[0], (prefix_1509949461 >>> 3));
          skipNext_1509949478(buffer_1509949445, p_1509949450, 0);
        }
    } while (false);
    }
    

  return result_1509949449;

}

function findKey_1509949491(buffer_1509949492, key_1509949493, start_1509949494) {
  var result_1509949495 = 0;

    var keyPrefix_1509949500 = ((key_1509949493.length << 3) | 0);
    result_1509949495 = findKey_1509949444(buffer_1509949492, key_1509949493, keyPrefix_1509949500, start_1509949494);

  return result_1509949495;

}

function seekKey_503321180(buffer_503321181, start_503321182, key_503321183) {
    var Temporary1;

  var result_503321184 = 0;

    if ((typeof(key_503321183) == "string")) {
    Temporary1 = Buffer.from(toString_503316541(key_503321183));
    }
    else {
    if (((typeof(key_503321183) == "object") && ( typeof Buffer !== 'undefined' && Buffer.isBuffer(key_503321183) ))) {
    Temporary1 = key_503321183;
    }
    else {
      raiseException({message: (makeNimstrLit("Unsupported key type: ") || []).concat(cstrToNimstr(typeof(key_503321183)) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    }
    var keyBuffer_503321186 = Temporary1;
    result_503321184 = findKey_1509949491(buffer_503321181, keyBuffer_503321186, start_503321182);

  return result_503321184;

}

function findKey_1509949501(buffer_1509949502, key_1509949503, start_1509949504, keyStart_1509949505) {
  var result_1509949506 = 0;

    var pKey_1509949507 = [keyStart_1509949505];
    var keyPrefix_1509949508 = readPrefix_1493172232(asByteBuffer_1493172229(key_1509949503), pKey_1509949507, 0);
    if (!(((keyPrefix_1509949508 & 7) == 0))) {
    raiseException({message: makeNimstrLit("key must be encoded string"), parent: null, m_type: NTI1258291203, name: null, trace: [], up: null}, "BipfValueError");
    }
    
    var keyBuffer_1509949518 = readBufferValue_1493172316(asByteBuffer_1493172229(key_1509949503), pKey_1509949507, 0, (keyPrefix_1509949508 >>> 3));
    result_1509949506 = findKey_1509949444(buffer_1509949502, keyBuffer_1509949518, keyPrefix_1509949508, start_1509949504);

  return result_1509949506;

}

function seekKey2_503321187(buffer_503321188, start_503321189, key_503321190, keyStart_503321191) {
    var Temporary1;

  var result_503321192 = 0;

    if ((keyStart_503321191 === undefined)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = keyStart_503321191;
    }
    
    result_503321192 = findKey_1509949501(buffer_503321188, key_503321190, start_503321189, Temporary1);

  return result_503321192;

}

function seekKeyCached_503321207(buffer_503321208, start_503321209, key_503321210) {
  var result_503321211 = 0;

    if (!((typeof((key_503321210)) == "string"))) {
    raiseException({message: (makeNimstrLit("Unsupported key type (formely \'seekKeyCached only supports string target\'): ") || []).concat(cstrToNimstr(typeof((key_503321210))) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    
    var keyBuffer_503321251 = seekKeyCache_503321206[0][key_503321210];
    if ((keyBuffer_503321251 === undefined)) {
    keyBuffer_503321251 = Buffer.from(key_503321210);
    seekKeyCache_503321206[0][key_503321210] = keyBuffer_503321251;
    }
    
    result_503321211 = findKey_1509949491(buffer_503321208, keyBuffer_503321251, start_503321209);

  return result_503321211;

}

function slice_503321723(buffer_503321724, start_503321725) {
  var result_503321726 = null;

    var p_503321727 = [start_503321725];
    var prefix_503321728 = readPrefix_1493172232(asByteBuffer_1493172229(buffer_503321724), p_503321727, 0);
    var size_503321733 = (prefix_503321728 >>> 3);
    result_503321726 = Buffer.from(readBufferValue_1493172316(asByteBuffer_1493172229(buffer_503321724), p_503321727, 0, size_503321733));

  return result_503321726;

}

function pluck_503321734(buffer_503321735, start_503321736) {
  var result_503321737 = null;

    var p_503321738 = [start_503321736];
    var prefix_503321739 = readPrefix_1493172232(asByteBuffer_1493172229(buffer_503321735), p_503321738, 0);
    var size_503321744 = addInt((prefix_503321739 >>> 3), subInt(p_503321738[0], start_503321736));
    p_503321738[0] = start_503321736;
    result_503321737 = Buffer.from(readBufferValue_1493172316(asByteBuffer_1493172229(buffer_503321735), p_503321738, 0, size_503321744));

  return result_503321737;

}

function encodeIdempotent_503321745(obj_503321746, buffer_503321747, offset_503321748) {
  var result_503321749 = 0;

    result_503321749 = encode_503319712(obj_503321746, buffer_503321747, offset_503321748);
    (result_503321749)[bipfBufferSymbol_503316507[0]] = true;

  return result_503321749;

}

function markIdempotent_503321758(buffer_503321759) {
  var result_503321760 = null;

    result_503321760 = buffer_503321759;
    (result_503321760)[bipfBufferSymbol_503316507[0]] = true;

  return result_503321760;

}

function getEncodedLength_503321832(obj_503321833, start_503321834) {
    var Temporary1;

  var result_503321835 = 0;

  BeforeRet: do {
    if ((start_503321834 === undefined)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = start_503321834;
    }
    
    var p_503321839 = [Temporary1];
    var prefix_503321840 = readPrefix_1493172232(asByteBuffer_1493172229(obj_503321833), p_503321839, 0);
    result_503321835 = (prefix_503321840 >>> 3);
    break BeforeRet;
  } while (false);

  return result_503321835;

}

function getEncodedType_503321845(obj_503321846, start_503321847) {
    var Temporary1;

  var result_503321848 = 0;

  BeforeRet: do {
    if ((start_503321847 === undefined)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = start_503321847;
    }
    
    var p_503321852 = [Temporary1];
    var prefix_503321853 = readPrefix_1493172232(asByteBuffer_1493172229(obj_503321846), p_503321852, 0);
    result_503321848 = (prefix_503321853 & 7);
    break BeforeRet;
  } while (false);

  return result_503321848;

}

function iterate_503321775(objBuf_503321776, start_503321777, callback_503321778) {
  var result_503321779 = 0;

  BeforeRet: do {
    var p_503321780 = [start_503321777];
    var prefix_503321781 = readPrefix_1493172232(asByteBuffer_1493172229(objBuf_503321776), p_503321780, 0);
    var size_503321786 = (prefix_503321781 >>> 3);
    var tag_503321787 = (prefix_503321781 & 7);
    var endOffset_503321788 = addInt(p_503321780[0], size_503321786);
    if ((tag_503321787 == 5)) {
    Label1: do {
        Label2: while (true) {
        if (!(p_503321780[0] < endOffset_503321788)) break Label2;
          var keyPointer_503321793 = p_503321780[0];
          var keyPrefix_503321794 = readPrefix_1493172232(asByteBuffer_1493172229(objBuf_503321776), p_503321780, 0);
          p_503321780[0] = addInt(p_503321780[0], (keyPrefix_503321794 >>> 3));
          var valuePointer_503321803 = p_503321780[0];
          var valuePrefix_503321804 = readPrefix_1493172232(asByteBuffer_1493172229(objBuf_503321776), p_503321780, 0);
          p_503321780[0] = addInt(p_503321780[0], (valuePrefix_503321804 >>> 3));
          if (callback_503321778(objBuf_503321776, valuePointer_503321803, keyPointer_503321793)) {
          break Label1;
          }
          
        }
    } while (false);
    result_503321779 = start_503321777;
    break BeforeRet;
    }
    else {
    if ((tag_503321787 == 4)) {
    var i_503321817 = 0;
    Label3: do {
        Label4: while (true) {
        if (!(p_503321780[0] < endOffset_503321788)) break Label4;
          var valuePointer_503321818 = p_503321780[0];
          var valuePrefix_503321819 = readPrefix_1493172232(asByteBuffer_1493172229(objBuf_503321776), p_503321780, 0);
          p_503321780[0] = addInt(p_503321780[0], (valuePrefix_503321819 >>> 3));
          if (callback_503321778(objBuf_503321776, valuePointer_503321818, i_503321817)) {
          break Label3;
          }
          
          i_503321817 = addInt(i_503321817, 1);
        }
    } while (false);
    result_503321779 = start_503321777;
    break BeforeRet;
    }
    else {
      result_503321779 = -1;
      break BeforeRet;
    }
    }
  } while (false);

  return result_503321779;

}

function compileSimplePath_503321511(path_503321512) {
  var result_503321514 = [];

    var bufArr_503321526 = newSeq_503321295((path_503321512).length);
    Label1: do {
      var i_503321549 = 0;
      var p_503321550 = null;
      var i_503322594 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_503322594 < (path_503321512).length)) break Label3;
            i_503321549 = i_503322594;
            p_503321550 = path_503321512[i_503322594];
            bufArr_503321526[i_503321549] = Buffer.from(p_503321550);
            i_503322594 = addInt(i_503322594, 1);
          }
      } while (false);
    } while (false);
    result_503321514 = nimCopy(null, compileSimplePath_503321345(bufArr_503321526), NTI503320192);

  return result_503321514;

}

function createSeekPath_503321554(path_503321555) {
    
function HEX3Aanonymous_503321558(buffer_503321559, start_503321560) {
      var result_503321561 = 0;

        result_503321561 = runBPath_503321425(buffer_503321559, bpath_503321557, start_503321560);

      return result_503321561;

    }

  var result_503321556 = null;

    var bpath_503321557 = compileSimplePath_503321511(path_503321555);
    result_503321556 = HEX3Aanonymous_503321558;

  return result_503321556;

}

function newSeq_503321593(len_503321595) {
  var result_503321596 = [];

    result_503321596 = new Array(len_503321595); for (var i = 0 ; i < len_503321595 ; ++i) { result_503321596[i] = []; }
  return result_503321596;

}

function readIntValue_1493172334(buffer_1493172335, p_1493172336, p_1493172336_Idx, size_1493172337) {
  var result_1493172338 = 0;

    Label1: do {
      var resultHEX60gensym9_1493172340 = buffer_1493172335.readInt32LE(p_1493172336[p_1493172336_Idx]);
      p_1493172336[p_1493172336_Idx] = addInt(p_1493172336[p_1493172336_Idx], 4);
    } while (false);
    result_1493172338 = resultHEX60gensym9_1493172340;

  return result_1493172338;

}

function readFloatValue_1493172345(buffer_1493172346, p_1493172347, p_1493172347_Idx, size_1493172348) {
  var result_1493172349 = 0.0;

    Label1: do {
      var resultHEX60gensym10_1493172351 = buffer_1493172346.readDoubleLE(p_1493172347[p_1493172347_Idx]);
      p_1493172347[p_1493172347_Idx] = addInt(p_1493172347[p_1493172347_Idx], 8);
    } while (false);
    result_1493172349 = resultHEX60gensym10_1493172351;

  return result_1493172349;

}

function cmp_1493172432(x_1493172434, y_1493172435) {
  var result_1493172436 = 0;

  BeforeRet: do {
    if ((x_1493172434 == y_1493172435)) {
    result_1493172436 = 0;
    break BeforeRet;
    }
    
    if ((x_1493172434 < y_1493172435)) {
    result_1493172436 = -1;
    break BeforeRet;
    }
    
    result_1493172436 = 1;
    break BeforeRet;
  } while (false);

  return result_1493172436;

}

function cmp_1493172461(x_1493172463, y_1493172464) {
  var result_1493172465 = 0;

  BeforeRet: do {
    if ((x_1493172463 == y_1493172464)) {
    result_1493172465 = 0;
    break BeforeRet;
    }
    
    if ((x_1493172463 < y_1493172464)) {
    result_1493172465 = -1;
    break BeforeRet;
    }
    
    result_1493172465 = 1;
    break BeforeRet;
  } while (false);

  return result_1493172465;

}

function compare_1090519180(source_1090519181, target_1090519182, targetStart_1090519183, targetLen_1090519184, sourceStart_1090519185, sourceLen_1090519186) {
  var result_1090519187 = 0;

    var len_1090519188 = nimMin(sourceLen_1090519186, targetLen_1090519184);
    result_1090519187 = source_1090519181.compare(target_1090519182, targetStart_1090519183, addInt(targetStart_1090519183, len_1090519188), sourceStart_1090519185, addInt(sourceStart_1090519185, len_1090519188));
    if ((result_1090519187 == 0)) {
    result_1090519187 = subInt(sourceLen_1090519186, targetLen_1090519184);
    }
    

  return result_1090519187;

}

function compare_1493172399(b1_1493172400, b2_1493172401, start1_1493172402, start2_1493172403) {
  var result_1493172404 = 0;

  BeforeRet: do {
    if ((start1_1493172402 < 0)) {
    if ((start2_1493172403 < 0)) {
    result_1493172404 = 0;
    break BeforeRet;
    }
    else {
      result_1493172404 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((start2_1493172403 < 0)) {
    result_1493172404 = -1;
    break BeforeRet;
    }
    }
    var p1_1493172405 = [start1_1493172402];
    var p2_1493172406 = [start2_1493172403];
    var prefix1_1493172407 = readPrefix_1493172232(asByteBuffer_1493172229(b1_1493172400), p1_1493172405, 0);
    var prefix2_1493172408 = readPrefix_1493172232(asByteBuffer_1493172229(b2_1493172401), p2_1493172406, 0);
    if ((prefix1_1493172407 == 6)) {
    if ((prefix2_1493172408 == 6)) {
    result_1493172404 = 0;
    break BeforeRet;
    }
    else {
      result_1493172404 = -1;
      break BeforeRet;
    }
    
    }
    else {
    if ((prefix2_1493172408 == 6)) {
    result_1493172404 = 1;
    break BeforeRet;
    }
    }
    var tag1_1493172409 = (prefix1_1493172407 & 7);
    var size1_1493172414 = (prefix1_1493172407 >>> 3);
    var tag2_1493172415 = (prefix2_1493172408 & 7);
    var size2_1493172420 = (prefix2_1493172408 >>> 3);
    if (((tag1_1493172409 == 2) && (tag2_1493172415 == 3))) {
    var v1_1493172430 = readIntValue_1493172334(asByteBuffer_1493172229(b1_1493172400), p1_1493172405, 0, size1_1493172414);
    var v2_1493172431 = readFloatValue_1493172345(asByteBuffer_1493172229(b2_1493172401), p2_1493172406, 0, size2_1493172420);
    result_1493172404 = cmp_1493172432(v1_1493172430, v2_1493172431);
    break BeforeRet;
    }
    else {
    if (((tag2_1493172415 == 2) && (tag1_1493172409 == 3))) {
    var v2_1493172445 = readIntValue_1493172334(asByteBuffer_1493172229(b2_1493172401), p2_1493172406, 0, size2_1493172420);
    var v1_1493172446 = readFloatValue_1493172345(asByteBuffer_1493172229(b1_1493172400), p1_1493172405, 0, size1_1493172414);
    result_1493172404 = cmp_1493172432(v1_1493172446, v2_1493172445);
    break BeforeRet;
    }
    }
    if (!((tag1_1493172409 == tag2_1493172415))) {
    result_1493172404 = subInt(((tag1_1493172409) | 0), ((tag2_1493172415) | 0));
    break BeforeRet;
    }
    
    if ((tag1_1493172409 == 2)) {
    var v1_1493172459 = readIntValue_1493172334(asByteBuffer_1493172229(b1_1493172400), p1_1493172405, 0, size1_1493172414);
    var v2_1493172460 = readIntValue_1493172334(asByteBuffer_1493172229(b2_1493172401), p2_1493172406, 0, size2_1493172420);
    result_1493172404 = cmp_1493172461(v1_1493172459, v2_1493172460);
    break BeforeRet;
    }
    else {
    if ((tag1_1493172409 == 3)) {
    var v1_1493172470 = readFloatValue_1493172345(asByteBuffer_1493172229(b1_1493172400), p1_1493172405, 0, size1_1493172414);
    var v2_1493172471 = readFloatValue_1493172345(asByteBuffer_1493172229(b2_1493172401), p2_1493172406, 0, size2_1493172420);
    result_1493172404 = cmp_1493172432(v1_1493172470, v2_1493172471);
    break BeforeRet;
    }
    else {
      result_1493172404 = compare_1090519180(b1_1493172400, b2_1493172401, p1_1493172405[0], size1_1493172414, p2_1493172406[0], size2_1493172420);
      break BeforeRet;
    }
    }
  } while (false);

  return result_1493172404;

}

function createCompareAt_503321585(paths_503321586) {
    
function HEX3Aanonymous_503321641(b1_503321642, b2_503321643) {
      var result_503321644 = 0;

      BeforeRet: do {
        Label1: do {
          var pPath_503321666 = [];
          var i_503322603 = 0;
          var L_503322604 = (bPathArray_503321614).length;
          Label2: do {
              Label3: while (true) {
              if (!(i_503322603 < L_503322604)) break Label3;
                pPath_503321666 = bPathArray_503321614[i_503322603];
                var v1_503321676 = runBPath_503321425(b1_503321642, pPath_503321666, 0);
                var v2_503321686 = runBPath_503321425(b2_503321643, pPath_503321666, 0);
                result_503321644 = compare_1493172399(b1_503321642, b2_503321643, v1_503321676, v2_503321686);
                if (!((result_503321644 == 0))) {
                break BeforeRet;
                }
                
                i_503322603 = addInt(i_503322603, 1);
                if (!(((bPathArray_503321614).length == L_503322604))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        result_503321644 = 0;
        break BeforeRet;
      } while (false);

      return result_503321644;

    }

  var result_503321587 = null;

    var bPathArray_503321614 = newSeq_503321593((paths_503321586).length);
    var i_503321615 = 0;
    Label1: do {
      var path_503321636 = [];
      var i_503322598 = 0;
      var L_503322599 = (paths_503321586).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_503322598 < L_503322599)) break Label3;
            path_503321636 = paths_503321586[i_503322598];
            bPathArray_503321614[i_503321615] = nimCopy(null, compileSimplePath_503321511(path_503321636), NTI503320192);
            i_503321615 = addInt(i_503321615, 1);
            i_503322598 = addInt(i_503322598, 1);
            if (!(((paths_503321586).length == L_503322599))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_503321587 = HEX3Aanonymous_503321641;

  return result_503321587;

}

function compareCompat_503322128(b1_503322129, v1_503322130, b2_503322131, v2_503322132) {
  var result_503322133 = 0;

    result_503322133 = compare_1493172399(b1_503322129, b2_503322131, v1_503322130, v2_503322132);

  return result_503322133;

}
  var Temporary2;
  if ((module.exports == null)) Temporary2 = true; else {    Temporary2 = (module.exports == undefined);  }if (Temporary2) {
module.exports = {};
}

module.exports["serialize"] = serialize_503319688;
module.exports["deserialize"] = deserialize_503319837;
module.exports["newKeyDict"] = newKeyDict_503316666;
module.exports["encodingLength"] = encodingLength_503319707;
module.exports["encode"] = encode_503319712;
module.exports["allocAndEncode"] = serialize_503319688;
module.exports["decode"] = deserialize_503319837;
module.exports["seekPath"] = seekPath_503321278;
module.exports["seekKey"] = seekKey_503321180;
module.exports["seekKey2"] = seekKey2_503321187;
module.exports["seekKeyCached"] = seekKeyCached_503321207;
module.exports["slice"] = slice_503321723;
module.exports["pluck"] = pluck_503321734;
module.exports["encodeIdempotent"] = encodeIdempotent_503321745;
module.exports["markIdempotent"] = markIdempotent_503321758;
module.exports["getEncodedLength"] = getEncodedLength_503321832;
module.exports["getEncodedType"] = getEncodedType_503321845;
module.exports["allocAndEncodeIdempotent"] = serialize_503319688;
module.exports["isIdempotent"] = isBipfBuffer_503316509;
module.exports["iterate"] = iterate_503321775;
module.exports["types"] = typesConstants_503321864[0];
module.exports["createSeekPath"] = createSeekPath_503321554;
module.exports["createCompareAt"] = createCompareAt_503321585;
module.exports["compare"] = compareCompat_503322128;

function sysFatal_33557003(message_33557006) {
    raiseException({message: nimCopy(null, message_33557006, NTI33554439), m_type: NTI33555142, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33557002, p_33557002_Idx) {
    if ((p_33557002 == null && p_33557002_Idx == 0)) {
    sysFatal_33557003(makeNimstrLit("cannot dispatch; dispatcher is nil"));
    }
    

  
}

function nsuToLowerAsciiChar(c_654311492) {
  var result_654311493 = 0;

    if ((ConstSet59[c_654311492] != undefined)) {
    result_654311493 = (c_654311492 ^ 32);
    }
    else {
      result_654311493 = c_654311492;
    }
    

  return result_654311493;

}

function nsuIntToStr(x_654312213, minchars_654312214) {
  var result_654312215 = [];

    result_654312215 = nimCopy(null, HEX24_352321539(absInt(x_654312213)), NTI33554439);
    Label1: do {
      var i_654312220 = 0;
      var colontmp__503322618 = 0;
      colontmp__503322618 = subInt(minchars_654312214, (result_654312215).length);
      var res_503322619 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_503322619 <= colontmp__503322618)) break Label3;
            i_654312220 = res_503322619;
            result_654312215 = nimCopy(null, [48].concat(result_654312215 || []), NTI33554439);
            res_503322619 = addInt(res_503322619, 1);
          }
      } while (false);
    } while (false);
    if ((x_654312213 < 0)) {
    result_654312215 = nimCopy(null, [45].concat(result_654312215 || []), NTI33554439);
    }
    

  return result_654312215;

}

function monthday_671089803(dt_671089804) {
  var result_671089805 = 0;

    if (!(!((dt_671089804.monthdayZero == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("times.nim(997, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_671089805 = dt_671089804.monthdayZero;

  return result_671089805;

}

function ntgetDateStr(dt_671090154) {
  var result_671090155 = [];

    if (!(!((dt_671090154.monthdayZero == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("times.nim(1423, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_671090155 = nimCopy(null, (HEX24_352321539(dt_671090154.year) || []).concat([45],nsuIntToStr(dt_671090154.monthZero, 2) || [],[45],nsuIntToStr(monthday_671089803(dt_671090154), 2) || []), NTI33554439);

  return result_671090155;

}

function HEX2B_671088658(a_671088659, b_671088660) {
  var result_671088661 = 0;

    result_671088661 = (a_671088659 + b_671088660);

  return result_671088661;

}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function HEX2A_671088650(a_671088651, b_671088652) {
  var result_671088653 = 0;

    result_671088653 = (a_671088651 * b_671088652);

  return result_671088653;

}

function convert_671089051(unitFrom_671089053, unitTo_671089054, quantity_671089055) {
    var Temporary1;

  var result_671089056 = 0;

    if ((unitFrom_671089053 < unitTo_671089054)) {
    Temporary1 = divInt(quantity_671089055, divInt(unitWeights_671088786[unitTo_671089054], unitWeights_671088786[unitFrom_671089053]));
    }
    else {
    Temporary1 = HEX2A_671088650(divInt(unitWeights_671088786[unitFrom_671089053], unitWeights_671088786[unitTo_671089054]), quantity_671089055);
    }
    
    result_671089056 = Temporary1;

  return result_671089056;

}

function convert_671089118(unitFrom_671089120, unitTo_671089121, quantity_671089122) {
    var Temporary1;

  var result_671089123 = 0;

    if ((unitFrom_671089120 < unitTo_671089121)) {
    Temporary1 = divInt(quantity_671089122, divInt(unitWeights_671088786[unitTo_671089121], unitWeights_671088786[unitFrom_671089120]));
    }
    else {
    Temporary1 = HEX2A_671088650(divInt(unitWeights_671088786[unitFrom_671089120], unitWeights_671088786[unitTo_671089121]), quantity_671089122);
    }
    
    result_671089123 = Temporary1;

  return result_671089123;

}

function normalize_671089679(seconds_671089681, nanoseconds_671089682) {
  var result_671089683 = ({seconds: 0, nanosecond: 0});

    result_671089683.seconds = HEX2B_671088658(seconds_671089681, convert_671089051(0, 3, nanoseconds_671089682));
    var nanosecond_671089694 = modInt(nanoseconds_671089682, convert_671089118(3, 0, 1));
    if ((nanosecond_671089694 < 0)) {
    nanosecond_671089694 = addInt(nanosecond_671089694, convert_671089118(3, 0, 1));
    result_671089683.seconds = subInt(result_671089683.seconds, 1);
    }
    
    result_671089683.nanosecond = nanosecond_671089694;

  return result_671089683;

}

function HEX2D_671088666(a_671088667, b_671088668) {
  var result_671088669 = 0;

    result_671088669 = (a_671088667 - b_671088668);

  return result_671088669;

}

function HEX2D_671088670(a_671088671, b_671088672) {
  var result_671088673 = 0;

    result_671088673 = (a_671088671 - b_671088672);

  return result_671088673;

}

function ntSubTime(a_671089709, b_671089710) {
  var result_671089711 = ({seconds: 0, nanosecond: 0});

    result_671089711 = nimCopy(result_671089711, normalize_671089679(HEX2D_671088666(a_671089709.seconds, b_671089710.seconds), HEX2D_671088670(a_671089709.nanosecond, b_671089710.nanosecond)), NTI671088670);

  return result_671089711;

}

function normalize_671089108(seconds_671089110, nanoseconds_671089111) {
  var result_671089112 = ({seconds: 0, nanosecond: 0});

    result_671089112.seconds = HEX2B_671088658(seconds_671089110, convert_671089051(0, 3, nanoseconds_671089111));
    var nanosecond_671089128 = modInt(nanoseconds_671089111, convert_671089118(3, 0, 1));
    if ((nanosecond_671089128 < 0)) {
    nanosecond_671089128 = addInt(nanosecond_671089128, convert_671089118(3, 0, 1));
    result_671089112.seconds = subInt(result_671089112.seconds, 1);
    }
    
    result_671089112.nanosecond = nanosecond_671089128;

  return result_671089112;

}

function initDuration_671089041(nanoseconds_671089042, microseconds_671089043, milliseconds_671089044, seconds_671089045, minutes_671089046, hours_671089047, days_671089048, weeks_671089049) {
  var result_671089050 = ({seconds: 0, nanosecond: 0});

    var seconds_671089096 = HEX2B_671088658(HEX2B_671088658(HEX2B_671088658(HEX2B_671088658(HEX2B_671088658(HEX2B_671088658(HEX2B_671088658(convert_671089051(7, 3, weeks_671089049), convert_671089051(6, 3, days_671089048)), convert_671089051(4, 3, minutes_671089046)), convert_671089051(5, 3, hours_671089047)), convert_671089051(3, 3, seconds_671089045)), convert_671089051(2, 3, milliseconds_671089044)), convert_671089051(1, 3, microseconds_671089043)), convert_671089051(0, 3, nanoseconds_671089042));
    var nanoseconds_671089107 = HEX2B_671088658(HEX2B_671088658(convert_671089051(2, 0, modInt(milliseconds_671089044, 1000)), convert_671089051(1, 0, modInt(microseconds_671089043, 1000000))), modInt(nanoseconds_671089042, 1000000000));
    result_671089050 = nimCopy(result_671089050, normalize_671089108(seconds_671089096, nanoseconds_671089107), NTI671088672);

  return result_671089050;

}

function floorDiv_671088933(x_671088935, y_671088936) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

  var result_671088937 = 0;

    result_671088937 = Math.trunc(x_671088935 / y_671088936);
    var r_671088938 = Math.trunc(x_671088935 % y_671088936);
      if (!(0 < r_671088938)) Temporary2 = false; else {        Temporary2 = (y_671088936 < 0);      }      if (Temporary2) Temporary1 = true; else {        if (!(r_671088938 < 0)) Temporary3 = false; else {          Temporary3 = (0 < y_671088936);        }        Temporary1 = Temporary3;      }    if (Temporary1) {
    result_671088937 -= 1;
    }
    

  return result_671088937;

}

function inc_671088681(a_671088682, a_671088682_Idx, b_671088683) {
    a_671088682[a_671088682_Idx] += b_671088683;

  
}

function fromEpochDay_671088866(epochday_671088867) {
    var Temporary1;
    var Temporary2;

  var result_671088871 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var z_671088872 = [epochday_671088867];
    inc_671088681(z_671088872, 0, 719468);
    if ((0 <= z_671088872[0])) {
    Temporary1 = z_671088872[0];
    }
    else {
    Temporary1 = HEX2D_671088666(z_671088872[0], 146096);
    }
    
    var era_671088873 = divInt(Temporary1, 146097);
    var doe_671088874 = HEX2D_671088666(z_671088872[0], HEX2A_671088650(era_671088873, 146097));
    var yoe_671088875 = divInt(HEX2D_671088666(HEX2B_671088658(HEX2D_671088666(doe_671088874, divInt(doe_671088874, 1460)), divInt(doe_671088874, 36524)), divInt(doe_671088874, 146096)), 365);
    var y_671088876 = HEX2B_671088658(yoe_671088875, HEX2A_671088650(era_671088873, 400));
    var doy_671088877 = HEX2D_671088666(doe_671088874, HEX2D_671088666(HEX2B_671088658(HEX2A_671088650(365, yoe_671088875), divInt(yoe_671088875, 4)), divInt(yoe_671088875, 100)));
    var mp_671088878 = divInt(HEX2B_671088658(HEX2A_671088650(5, doy_671088877), 2), 153);
    var d_671088879 = HEX2B_671088658(HEX2D_671088666(doy_671088877, divInt(HEX2B_671088658(HEX2A_671088650(153, mp_671088878), 2), 5)), 1);
    if ((mp_671088878 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_671088880 = HEX2B_671088658(mp_671088878, Temporary2);
    var colontmp__503322622 = d_671088879;
    var colontmp__503322623 = m_671088880;
    var colontmp__503322624 = HEX2B_671088658(y_671088876, ((m_671088880 <= 2) ? 1 : 0));
    result_671088871 = nimCopy(result_671088871, {Field0: nimCopy(null, colontmp__503322622, NTI671088664), Field1: colontmp__503322623, Field2: colontmp__503322624}, NTI671088831);
    break BeforeRet;
  } while (false);

  return result_671088871;

}

function isLeapYear_671088809(year_671088810) {
    var Temporary1;
      var Temporary2;

  var result_671088811 = false;

    if (!(modInt(year_671088810, 4) == 0)) Temporary1 = false; else {      if (!((modInt(year_671088810, 100) == 0))) Temporary2 = true; else {        Temporary2 = (modInt(year_671088810, 400) == 0);      }      Temporary1 = Temporary2;    }    result_671088811 = Temporary1;

  return result_671088811;

}

function getDaysInMonth_671088812(month_671088813, year_671088814) {
      var Temporary1;

  var result_671088815 = 0;

    switch (month_671088813) {
    case 2:
      if (isLeapYear_671088809(year_671088814)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_671088815 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_671088815 = 30;
      break;
    default: 
      result_671088815 = 31;
      break;
    }

  return result_671088815;

}

function assertValidDate_671088816(monthday_671088817, month_671088818, year_671088819) {
    if (!((monthday_671088817 <= getDaysInMonth_671088812(month_671088818, year_671088819)))) {
    failedAssertImpl_218103864((makeNimstrLit("times.nim(450, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(HEX24_352321539(year_671088819) || [],makeNimstrLit("-") || [],nsuIntToStr(month_671088818, 2) || [],makeNimstrLit("-") || [],HEX24_352321539(monthday_671088817) || [],makeNimstrLit(" is not a valid date") || []));
    }
    

  
}

function HEX2A_671088654(a_671088655, b_671088656) {
  var result_671088657 = 0;

    result_671088657 = (a_671088655 * b_671088656);

  return result_671088657;

}

function HEX2B_671088662(a_671088663, b_671088664) {
  var result_671088665 = 0;

    result_671088665 = (a_671088663 + b_671088664);

  return result_671088665;

}

function toEpochDay_671088838(monthday_671088839, month_671088840, year_671088841) {
    var Temporary1;
    var Temporary2;

  var result_671088842 = 0;

  BeforeRet: do {
    assertValidDate_671088816(monthday_671088839, month_671088840, year_671088841);
    var colontmp__503322625 = {Field0: year_671088841, Field1: month_671088840, Field2: monthday_671088839};
    var y_671088846 = colontmp__503322625["Field0"];
    var m_671088847 = colontmp__503322625["Field1"];
    var d_671088848 = colontmp__503322625["Field2"];
    if ((m_671088847 <= 2)) {
    y_671088846 = subInt(y_671088846, 1);
    }
    
    if ((0 <= y_671088846)) {
    Temporary1 = y_671088846;
    }
    else {
    Temporary1 = HEX2D_671088670(y_671088846, 399);
    }
    
    var era_671088853 = divInt(Temporary1, 400);
    var yoe_671088854 = HEX2D_671088670(y_671088846, HEX2A_671088654(era_671088853, 400));
    if ((2 < m_671088847)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_671088855 = HEX2D_671088670(HEX2B_671088662(divInt(HEX2B_671088662(HEX2A_671088654(153, HEX2B_671088662(m_671088847, Temporary2)), 2), 5), d_671088848), 1);
    var doe_671088856 = HEX2B_671088662(HEX2D_671088670(HEX2B_671088662(HEX2A_671088654(yoe_671088854, 365), divInt(yoe_671088854, 4)), divInt(yoe_671088854, 100)), doy_671088855);
    result_671088842 = HEX2D_671088670(HEX2B_671088662(HEX2A_671088654(era_671088853, 146097), doe_671088856), 719468);
    break BeforeRet;
  } while (false);

  return result_671088842;

}

function getDayOfWeek_671088927(monthday_671088928, month_671088929, year_671088930) {
    var Temporary1;

  var result_671088931 = 0;

    assertValidDate_671088816(monthday_671088928, month_671088929, year_671088930);
    var days_671088932 = HEX2D_671088666(toEpochDay_671088838(monthday_671088928, month_671088929, year_671088930), 3);
    var weeks_671088943 = floorDiv_671088933(days_671088932, 7);
    var wd_671088944 = HEX2D_671088666(days_671088932, HEX2A_671088650(weeks_671088943, 7));
    if ((wd_671088944 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = HEX2D_671088666(wd_671088944, 1);
    }
    
    result_671088931 = Temporary1;

  return result_671088931;

}

function getDayOfYear_671088902(monthday_671088903, month_671088904, year_671088905) {
  var result_671088906 = 0;

    assertValidDate_671088816(monthday_671088903, month_671088904, year_671088905);
    if (isLeapYear_671088809(year_671088905)) {
    result_671088906 = HEX2D_671088670(HEX2B_671088662(daysUntilMonthLeap_671088908[(month_671088904) - (1)], monthday_671088903), 1);
    }
    else {
      result_671088906 = HEX2D_671088670(HEX2B_671088662(daysUntilMonth_671088907[(month_671088904) - (1)], monthday_671088903), 1);
    }
    

  return result_671088906;

}

function initDateTime_671089910(zt_671089911, zone_671089912) {
  var result_671089913 = ({m_type: NTI671088671, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_671089914 = ntSubTime(zt_671089911.time, initDuration_671089041(0, 0, 0, zt_671089911.utcOffset, 0, 0, 0, 0));
    var s_671089915 = adjTime_671089914.seconds;
    var epochday_671089920 = floorDiv_671088933(s_671089915, 86400);
    var rem_671089921 = HEX2D_671088666(s_671089915, HEX2A_671088650(epochday_671089920, 86400));
    var hour_671089922 = divInt(rem_671089921, 3600);
    rem_671089921 = HEX2D_671088666(rem_671089921, HEX2A_671088650(hour_671089922, 3600));
    var minute_671089923 = divInt(rem_671089921, 60);
    rem_671089921 = HEX2D_671088666(rem_671089921, HEX2A_671088650(minute_671089923, 60));
    var second_671089924 = rem_671089921;
    var colontmp__503322621 = fromEpochDay_671088866(epochday_671089920);
    var d_671089925 = colontmp__503322621["Field0"];
    var m_671089926 = colontmp__503322621["Field1"];
    var y_671089927 = colontmp__503322621["Field2"];
    result_671089913 = nimCopy(result_671089913, {year: y_671089927, monthZero: ((m_671089926) | 0), monthdayZero: d_671089925, hour: nimCopy(null, hour_671089922, NTI671088665), minute: nimCopy(null, minute_671089923, NTI671088666), second: nimCopy(null, second_671089924, NTI671088667), nanosecond: nimCopy(null, zt_671089911.time.nanosecond, NTI671088669), weekday: getDayOfWeek_671088927(d_671089925, m_671089926, y_671089927), yearday: getDayOfYear_671088902(d_671089925, m_671089926, y_671089927), isDst: zt_671089911.isDst, timezone: zone_671089912, utcOffset: zt_671089911.utcOffset, m_type: NTI671088671}, NTI671088671);

  return result_671089913;

}

function zonedTimeFromTime_671089967(zone_671089968, time_671089969) {
  var result_671089970 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_671089970 = nimCopy(result_671089970, zone_671089968.zonedTimeFromTimeImpl(time_671089969), NTI671088677);

  return result_671089970;

}

function inZone_671090007(time_671090008, zone_671090009) {
  var result_671090010 = ({m_type: NTI671088671, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_671090010 = nimCopy(result_671090010, initDateTime_671089910(zonedTimeFromTime_671089967(zone_671090009, time_671090008), zone_671090009), NTI671088671);

  return result_671090010;

}

function newTimezone_671089937(name_671089938, zonedTimeFromTimeImpl_671089941, zonedTimeFromAdjTimeImpl_671089944) {
  var result_671089945 = null;

    result_671089945 = {name: nimCopy(null, name_671089938, NTI33554439), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_671089941, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_671089944};

  return result_671089945;

}

function localZonedTimeFromTime_671090025(time_671090026) {
  var result_671090027 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_671090031 = new Date(HEX2A_671088650(time_671090026.seconds, 1000));
    var offset_671090032 = HEX2A_671088654(jsDate_671090031.getTimezoneOffset(), 60);
    result_671090027.time = nimCopy(result_671090027.time, time_671090026, NTI671088670);
    result_671090027.utcOffset = offset_671090032;
    result_671090027.isDst = false;

  return result_671090027;

}

function contains_671090048(s_671090052, value_671090053) {
  var result_671090054 = false;

    result_671090054 = ((s_671090052.a <= value_671090053) && (value_671090053 <= s_671090052.b));

  return result_671090054;

}

function HEX2EHEX2E_973079379(a_973079382, b_973079383) {
  var result_973079384 = ({a: 0, b: 0});

    result_973079384 = nimCopy(result_973079384, {a: a_973079382, b: b_973079383}, NTI721420349);

  return result_973079384;

}

function ntAddTime(a_671089673, b_671089674) {
  var result_671089675 = ({seconds: 0, nanosecond: 0});

    result_671089675 = nimCopy(result_671089675, normalize_671089679(HEX2B_671088658(a_671089673.seconds, b_671089674.seconds), HEX2B_671088662(a_671089673.nanosecond, b_671089674.nanosecond)), NTI671088670);

  return result_671089675;

}

function localZonedTimeFromAdjTime_671090033(adjTime_671090034) {
  var result_671090035 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_671090039 = new Date(HEX2A_671088650(adjTime_671090034.seconds, 1000));
    var localDate_671090040 = new Date(utcDate_671090039.getUTCFullYear(),utcDate_671090039.getUTCMonth(),utcDate_671090039.getUTCDate(),utcDate_671090039.getUTCHours(),utcDate_671090039.getUTCMinutes(),utcDate_671090039.getUTCSeconds(),0);
    if (contains_671090048(HEX2EHEX2E_973079379(0, 99), utcDate_671090039.getUTCFullYear())) {
    localDate_671090040.setFullYear(utcDate_671090039.getUTCFullYear());
    }
    
    result_671090035.utcOffset = HEX2A_671088654(localDate_671090040.getTimezoneOffset(), 60);
    result_671090035.time = nimCopy(result_671090035.time, ntAddTime(adjTime_671090034, initDuration_671089041(0, 0, 0, result_671090035.utcOffset, 0, 0, 0, 0)), NTI671088670);
    result_671090035.isDst = false;

  return result_671090035;

}

function local_671090074() {
  var result_671090075 = null;

    if ((localInstance_671090059[0] == null)) {
    localInstance_671090059[0] = newTimezone_671089937(makeNimstrLit("LOCAL"), localZonedTimeFromTime_671090025, localZonedTimeFromAdjTime_671090033);
    }
    
    result_671090075 = localInstance_671090059[0];

  return result_671090075;

}

function local_671090088(t_671090089) {
  var result_671090090 = ({m_type: NTI671088671, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_671090090 = nimCopy(result_671090090, inZone_671090007(t_671090089, local_671090074()), NTI671088671);

  return result_671090090;

}

function initTime_671089566(unix_671089567, nanosecond_671089568) {
  var result_671089569 = ({seconds: 0, nanosecond: 0});

    result_671089569.seconds = unix_671089567;
    result_671089569.nanosecond = nanosecond_671089568;

  return result_671089569;

}

function getTime_671089632() {
  var result_671089633 = ({seconds: 0, nanosecond: 0});

    var millis_671089634 = new Date().getTime();
    var seconds_671089640 = convert_671089118(2, 3, millis_671089634);
    var nanos_671089651 = convert_671089118(2, 0, modInt(millis_671089634, convert_671089118(3, 2, 1)));
    result_671089633 = nimCopy(result_671089633, initTime_671089566(seconds_671089640, nanos_671089651), NTI671088670);

  return result_671089633;

}

function now_671090091() {
  var result_671090092 = ({m_type: NTI671088671, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_671090092 = nimCopy(result_671090092, local_671090088(getTime_671089632()), NTI671088671);

  return result_671090092;

}

function ntgetClockStr(dt_671090162) {
  var result_671090163 = [];

    if (!(!((dt_671090162.monthdayZero == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("times.nim(1431, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_671090163 = nimCopy(null, (nsuIntToStr(dt_671090162.hour, 2) || []).concat([58],nsuIntToStr(dt_671090162.minute, 2) || [],[58],nsuIntToStr(dt_671090162.second, 2) || []), NTI33554439);

  return result_671090163;

}

function substituteLog_637534262(frmt_637534263, level_637534264, args_637534265) {
                  var Temporary8;

  var result_637534266 = [];

    var msgLen_637534267 = 0;
    Label1: do {
      var arg_637534271 = [];
      var i_503322610 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_503322610 < (args_637534265).length)) break Label3;
            arg_637534271 = args_637534265[i_503322610];
            msgLen_637534267 = addInt(msgLen_637534267, (arg_637534271).length);
            i_503322610 = addInt(i_503322610, 1);
          }
      } while (false);
    } while (false);
    result_637534266 = nimCopy(null, mnewString(0), NTI33554439);
    var i_637534276 = 0;
    Label4: do {
        Label5: while (true) {
        if (!(i_637534276 < (frmt_637534263).length)) break Label5;
          if (!((frmt_637534263[i_637534276] == 36))) {
          addChar(result_637534266, frmt_637534263[i_637534276]);;
          i_637534276 = addInt(i_637534276, 1);
          }
          else {
            i_637534276 = addInt(i_637534276, 1);
            var v_637534285 = [];
            var app_637534286 = [];
            Label6: do {
                Label7: while (true) {
                  if (!(i_637534276 < (frmt_637534263).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet58[frmt_637534263[i_637534276]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_637534285, nsuToLowerAsciiChar(frmt_637534263[i_637534276]));;
                  i_637534276 = addInt(i_637534276, 1);
                }
            } while (false);
            switch (toJSStr(v_637534285)) {
            case "date":
              result_637534266.push.apply(result_637534266, ntgetDateStr(now_671090091()));;
              break;
            case "time":
              result_637534266.push.apply(result_637534266, ntgetClockStr(now_671090091()));;
              break;
            case "datetime":
              result_637534266.push.apply(result_637534266, (ntgetDateStr(now_671090091()) || []).concat(makeNimstrLit("T") || [],ntgetClockStr(now_671090091()) || []));;
              break;
            case "app":
              result_637534266.push.apply(result_637534266, app_637534286);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_637534266, LevelNames_637534223[level_637534264][0]);;
              break;
            case "levelname":
              result_637534266.push.apply(result_637534266, LevelNames_637534223[level_637534264]);;
              break;
            default: 
              break;
            }
          }
          
        }
    } while (false);
    Label9: do {
      var arg_637534298 = [];
      var i_503322615 = 0;
      Label10: do {
          Label11: while (true) {
          if (!(i_503322615 < (args_637534265).length)) break Label11;
            arg_637534298 = args_637534265[i_503322615];
            result_637534266.push.apply(result_637534266, arg_637534298);;
            i_503322615 = addInt(i_503322615, 1);
          }
      } while (false);
    } while (false);

  return result_637534266;

}

function log_637534304(logger_637534305, level_637534306, args_637534307) {
      var Temporary1;

      if (!(level_637534233[0] <= level_637534306)) Temporary1 = false; else {        Temporary1 = (logger_637534305.levelThreshold <= level_637534306);      }    if (Temporary1) {
    var ln_637534316 = substituteLog_637534262(logger_637534305.fmtStr, level_637534306, args_637534307);
    var cln_637534317 = toJSStr(ln_637534316);
    switch (level_637534306) {
    case 1:
      console.debug(cln_637534317);
      break;
    case 2:
      console.info(cln_637534317);
      break;
    case 4:
      console.warn(cln_637534317);
      break;
    case 5:
      console.error(cln_637534317);
      break;
    default: 
      console.log(cln_637534317);
      break;
    }
    }
    

  
}

function log_637534299(logger_637534300, level_637534301, args_637534302) {
  
}

function log_637534303(logger_637534300, level_637534301, args_637534302) {
    chckNilDisp(logger_637534300);
    if (isObj(logger_637534300.m_type, NTI637534221)) {
    log_637534304(logger_637534300, level_637534301, args_637534302);
    }
    else {
    if (isObj(logger_637534300.m_type, NTI637534220)) {
    log_637534299(logger_637534300, level_637534301, args_637534302);
    }
    }

  
}
